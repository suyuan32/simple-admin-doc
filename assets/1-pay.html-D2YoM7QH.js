import{_ as e,a,b as n,c as t,d as i,e as r}from"./img5-ZiZyIext.js";import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,o as m,b as l}from"./app-SeIJRtVB.js";const s={},c=l('<h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><p>Simple Admin Pay 是Simple Admin 的支付模块，它提供了微信和支付宝的移动和网页端支付以及退款功能。这个模块是一个社区模块，可以用于学习，商用。与Simple Admin的其他模块协同工作，以提供一种简单，统一的方式处理支付和退款请求。</p><h2 id="特性" tabindex="-1"><a class="header-anchor" href="#特性"><span>特性</span></a></h2><ul><li><p><strong>统一支付</strong>：提供了统一的支付接口供其他服务调用。这意味着，无论您的用户选择哪种支付方式，您都可以使用同一种方式处理支付请求。</p></li><li><p><strong>统一退款</strong>：退款功能允许您通过订单渠道原路退款。这意味着，无论您的用户是通过哪种方式支付的，他们都可以通过同一种方式接收退款。</p></li><li><p><strong>微信小程序支付demo</strong>：在api服务中提供了微信小程序支付demo。这个demo可以帮助您理解如何在微信小程序中实现支付功能。</p></li><li><p><strong>支付宝沙盒支付demo</strong>：在simple-admin-backend-ui fork中提供了前端支付退款示例。这个demo可以帮助您理解如何在支付宝沙盒环境中实现支付和退款功能。</p></li></ul><h2 id="项目地址" tabindex="-1"><a class="header-anchor" href="#项目地址"><span>项目地址</span></a></h2><ul><li><p><strong>API服务</strong>：<a href="https://github.com/agui-coder/simple-admin-pay-api" target="_blank" rel="noopener noreferrer">https://github.com/agui-coder/simple-admin-pay-api</a></p></li><li><p><strong>RPC服务</strong>：<a href="https://github.com/agui-coder/simple-admin-pay-rpc" target="_blank" rel="noopener noreferrer">https://github.com/agui-coder/simple-admin-pay-rpc</a></p></li></ul><h2 id="配置说明" tabindex="-1"><a class="header-anchor" href="#配置说明"><span>配置说明</span></a></h2><p>详细配置位于 simple-admin-rpc/etc/pay.yaml 文件中,支付配置参考官方文档<a href="https://pay.weixin.qq.com/" target="_blank" rel="noopener noreferrer">微信支付的官方文档</a>， <a href="https://opendocs.alipay.com/common/" target="_blank" rel="noopener noreferrer">支付宝支付官方文档</a>， <a href="https://opendocs.alipay.com/common/02kkv7?pathHash=8fd32ef6" target="_blank" rel="noopener noreferrer">支付宝沙箱环境地址</a>。</p><ul><li><strong>支付回调地址</strong>：这里因为我们在本地演示，所以使用了 127.0.0.1 IP 地址，如果你部署到服务器上，要设置服务器可调用到的 IP 地址。</li></ul><figure><img src="'+e+`" alt="images1" tabindex="0" loading="lazy"><figcaption>images1</figcaption></figure><h2 id="支付宝测试" tabindex="-1"><a class="header-anchor" href="#支付宝测试"><span>支付宝测试</span></a></h2><p>示例项目必须运行<a href="https://github.com/agui-coder/simple-admin-backend-ui" target="_blank" rel="noopener noreferrer">simple-admin-backend-ui</a> fork 的项目和<a href="https://github.com/agui-coder/simple-admin-job" target="_blank" rel="noopener noreferrer">simple-admin-job</a>fork项目的pay-job分支，否则项目无法收到支付完成的回调信息，需要在本地启动后端服务，具体的可以参考<a href="https://doc.ryansu.tech/zh/guide/basic-config/env_setting.html" target="_blank" rel="noopener noreferrer">Simple Admin</a></p><pre><code>使用 npm 安装 CLI
$ pnpm install
使用 npm 编译运行
$ npm run dev
</code></pre><p>配置权限</p><p><img src="`+a+'" alt="images7" loading="lazy"><img src="'+n+'" alt="images8" loading="lazy"></p><p>支付测试</p><figure><img src="'+t+`" alt="images2" tabindex="0" loading="lazy"><figcaption>images2</figcaption></figure><h2 id="微信支付测试" tabindex="-1"><a class="header-anchor" href="#微信支付测试"><span>微信支付测试</span></a></h2><p><code>simple-admin-pay-api/pay-demo-taroui</code>中提供了简单的微信demo支付接入,需要在微信环境中进行。需要准备好微信支付的相关信息,具体的可以参考<a href="https://pay.weixin.qq.com/" target="_blank" rel="noopener noreferrer">微信支付的官方文档</a>。运行示例项目必须运行<a href="https://github.com/agui-coder/simple-admin-job" target="_blank" rel="noopener noreferrer">simple-admin-job</a>项目的pay-job分支，否则项目无法收到支付完成的回调信息。</p><h3 id="步骤" tabindex="-1"><a class="header-anchor" href="#步骤"><span>步骤</span></a></h3><ol><li><p>打开<a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html" target="_blank" rel="noopener noreferrer">微信开发者工具</a>，选择「小程序」，点击「添加项目」，填写小程序的 AppID，点击「确定」。</p></li><li><p>在<a href="https://mp.weixin.qq.com/" target="_blank" rel="noopener noreferrer">微信公众平台</a>中，选择「开发」-&gt;「开发设置」，将微信开发者工具中的 AppID 填写到「开发者ID」中，点击「确定」。</p></li><li><p>选择「详情」 -&gt;「本地开发」，勾选不校验合法域名、web-view（业务域名）、TLS 版本以及 HTTPS 证书，点击「确定」。</p></li><li><p>进入<code>simple-admin-pay-api/pay-demo-taroui</code>打开终端，执行以下命令：</p><pre><code> 使用 npm 安装 CLI
 $ npm install -g @tarojs/cli
 使用pnpm安装依赖
 $ pnpm install
 使用 npm 编译运行
 $ npm run dev:weapp
</code></pre></li><li><p>选择编译模式后刷新微信开发者工具，即可看到效果。</p></li></ol><figure><img src="`+i+'" alt="images3" tabindex="0" loading="lazy"><figcaption>images3</figcaption></figure><p>openid可以在通过<a href="https://doc.ryansu.tech/zh/guide/official-comp/member.html" target="_blank" rel="noopener noreferrer">Simple Admin Member</a>模块中获取</p><figure><img src="'+r+'" alt="images5" tabindex="0" loading="lazy"><figcaption>images5</figcaption></figure>',24),d=[c];function g(h,u){return m(),p("div",null,d)}const _=o(s,[["render",g],["__file","1-pay.html.vue"]]),k=JSON.parse('{"path":"/zh/guide/community-comp/1-pay.html","title":"支付模块","lang":"zh-CN","frontmatter":{"order":1,"title":"支付模块","head":[["meta",{"name":"keywords","content":"simple admin module, payment module, 支付模块, community, 微信支付, 支付宝支付"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://doc.ryansu.tech/guide/community-comp/1-pay.html"}],["meta",{"property":"og:url","content":"https://doc.ryansu.tech/zh/guide/community-comp/1-pay.html"}],["meta",{"property":"og:site_name","content":"Simple Admin"}],["meta",{"property":"og:title","content":"支付模块"}],["meta",{"property":"og:description","content":"介绍 Simple Admin Pay 是Simple Admin 的支付模块，它提供了微信和支付宝的移动和网页端支付以及退款功能。这个模块是一个社区模块，可以用于学习，商用。与Simple Admin的其他模块协同工作，以提供一种简单，统一的方式处理支付和退款请求。 特性 统一支付：提供了统一的支付接口供其他服务调用。这意味着，无论您的用户选择哪种支..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://doc.ryansu.tech/assets/community/pay/img.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-05-20T10:41:28.000Z"}],["meta",{"property":"article:author","content":"Ryan SU"}],["meta",{"property":"article:modified_time","content":"2024-05-20T10:41:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"支付模块\\",\\"image\\":[\\"https://doc.ryansu.tech/assets/community/pay/img.png\\",\\"https://doc.ryansu.tech/assets/community/pay/img7.jpg\\",\\"https://doc.ryansu.tech/assets/community/pay/img8.png\\",\\"https://doc.ryansu.tech/assets/community/pay/img2.png\\",\\"https://doc.ryansu.tech/assets/community/pay/img3.png\\",\\"https://doc.ryansu.tech/assets/community/pay/img5.png\\"],\\"dateModified\\":\\"2024-05-20T10:41:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ryan SU\\",\\"url\\":\\"https://github.com/suyuan32\\"}]}"]],"description":"介绍 Simple Admin Pay 是Simple Admin 的支付模块，它提供了微信和支付宝的移动和网页端支付以及退款功能。这个模块是一个社区模块，可以用于学习，商用。与Simple Admin的其他模块协同工作，以提供一种简单，统一的方式处理支付和退款请求。 特性 统一支付：提供了统一的支付接口供其他服务调用。这意味着，无论您的用户选择哪种支..."},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"特性","slug":"特性","link":"#特性","children":[]},{"level":2,"title":"项目地址","slug":"项目地址","link":"#项目地址","children":[]},{"level":2,"title":"配置说明","slug":"配置说明","link":"#配置说明","children":[]},{"level":2,"title":"支付宝测试","slug":"支付宝测试","link":"#支付宝测试","children":[]},{"level":2,"title":"微信支付测试","slug":"微信支付测试","link":"#微信支付测试","children":[{"level":3,"title":"步骤","slug":"步骤","link":"#步骤","children":[]}]}],"git":{"createdTime":1703556146000,"updatedTime":1716201688000,"contributors":[{"name":"Ryan SU","email":"yuansu.china.work@gmail.com","commits":2},{"name":"Ryan Su","email":"yuansu.china.work@gmail.com","commits":1}]},"readingTime":{"minutes":3.03,"words":909},"filePathRelative":"zh/guide/community-comp/1-pay.md","localizedDate":"2023年12月26日","autoDesc":true,"excerpt":"<h2>介绍</h2>\\n<p>Simple Admin Pay 是Simple Admin 的支付模块，它提供了微信和支付宝的移动和网页端支付以及退款功能。这个模块是一个社区模块，可以用于学习，商用。与Simple Admin的其他模块协同工作，以提供一种简单，统一的方式处理支付和退款请求。</p>\\n<h2>特性</h2>\\n<ul>\\n<li>\\n<p><strong>统一支付</strong>：提供了统一的支付接口供其他服务调用。这意味着，无论您的用户选择哪种支付方式，您都可以使用同一种方式处理支付请求。</p>\\n</li>\\n<li>\\n<p><strong>统一退款</strong>：退款功能允许您通过订单渠道原路退款。这意味着，无论您的用户是通过哪种方式支付的，他们都可以通过同一种方式接收退款。</p>\\n</li>\\n<li>\\n<p><strong>微信小程序支付demo</strong>：在api服务中提供了微信小程序支付demo。这个demo可以帮助您理解如何在微信小程序中实现支付功能。</p>\\n</li>\\n<li>\\n<p><strong>支付宝沙盒支付demo</strong>：在simple-admin-backend-ui fork中提供了前端支付退款示例。这个demo可以帮助您理解如何在支付宝沙盒环境中实现支付和退款功能。</p>\\n</li>\\n</ul>"}');export{_ as comp,k as data};
