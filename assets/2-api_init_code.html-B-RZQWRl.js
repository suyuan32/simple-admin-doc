import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as n,o as s,c as i,a as t,b as o,e as r}from"./app-iw6MeW5y.js";const c={},l=t("h2",{id:"api-初始化代码生成",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#api-初始化代码生成"},[t("span",null,"API 初始化代码生成")])],-1),d={class:"hint-container info"},p=t("p",{class:"hint-container-title"},"视频教程",-1),u=r(`<h3 id="goctls-extra-init-code" tabindex="-1"><a class="header-anchor" href="#goctls-extra-init-code"><span><code>goctls extra init_code</code></span></a></h3><blockquote><p>在根目录执行</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>goctls extra init_code <span class="token parameter variable">-m</span> StudentInfo <span class="token parameter variable">-t</span> other <span class="token parameter variable">-n</span> Core
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th>参数名称</th><th>必须</th><th>默认值</th><th>介绍</th></tr></thead><tbody><tr><td>model_name</td><td>是</td><td></td><td>模型名称，schema 中内部 struct 名称，如 example 中的 Student</td></tr><tr><td>target</td><td>是</td><td></td><td>目标类型，现在支持 core , other</td></tr><tr><td>output</td><td>否</td><td></td><td>输出路径, 项目根目录 (default &quot;.&quot;)</td></tr><tr><td>service_name</td><td>是</td><td>Other</td><td>服务名称</td></tr><tr><td>route_prefix</td><td>否</td><td></td><td>是否使用路由前缀，前缀必须以 &quot;/&quot; 开头</td></tr><tr><td>style</td><td>是</td><td>go_zero</td><td>init api data 文件名格式</td></tr></tbody></table><blockquote><p>运行 <code>goctls extra init_code -h</code> 查看更多</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ goctls extra init_code <span class="token parameter variable">-h</span>
生成初始化代码

Usage:
  goctls extra init_code <span class="token punctuation">[</span>flags<span class="token punctuation">]</span>

Flags:
  -h, <span class="token parameter variable">--help</span>                  <span class="token builtin class-name">help</span> <span class="token keyword">for</span> init_code
  -m, <span class="token parameter variable">--model_name</span> string     模型名称，应该是驼峰式的，例如：StudentInfo
  -o, <span class="token parameter variable">--output</span> string         输出路径, 项目根目录 <span class="token punctuation">(</span>default <span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span>
  -p, <span class="token parameter variable">--route_prefix</span> string   路由地址前缀
  -n, <span class="token parameter variable">--service_name</span> string   服务名称，如 Core <span class="token punctuation">(</span>default <span class="token string">&quot;Other&quot;</span><span class="token punctuation">)</span>
  -s, <span class="token parameter variable">--style</span> string          文件命名格式，参见 <span class="token punctuation">[</span>https://github.com/zeromicro/go-zero/blob/master/tools/goctl/config/readme.md<span class="token punctuation">]</span> <span class="token punctuation">(</span>default <span class="token string">&quot;go_zero&quot;</span><span class="token punctuation">)</span>
  -t, <span class="token parameter variable">--target</span> string         目标类型，现在支持 core , other
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function m(h,g){const e=n("BiliBili");return s(),i("div",null,[l,t("div",d,[p,o(e,{bvid:"BV1pj411878n"})]),u])}const _=a(c,[["render",m],["__file","2-api_init_code.html.vue"]]),k=JSON.parse('{"path":"/zh/guide/quick-start/extra/2-api_init_code.html","title":"API 初始化","lang":"zh-CN","frontmatter":{"order":2,"title":"API 初始化","description":"API 初始化代码生成 视频教程 goctls extra init_code 在根目录执行 运行 goctls extra init_code -h 查看更多","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://doc.ryansu.tech/guide/quick-start/extra/2-api_init_code.html"}],["meta",{"property":"og:url","content":"https://doc.ryansu.tech/zh/guide/quick-start/extra/2-api_init_code.html"}],["meta",{"property":"og:site_name","content":"Simple Admin"}],["meta",{"property":"og:title","content":"API 初始化"}],["meta",{"property":"og:description","content":"API 初始化代码生成 视频教程 goctls extra init_code 在根目录执行 运行 goctls extra init_code -h 查看更多"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-05-15T10:08:11.000Z"}],["meta",{"property":"article:author","content":"Ryan SU"}],["meta",{"property":"article:modified_time","content":"2024-05-15T10:08:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"API 初始化\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-15T10:08:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ryan SU\\",\\"url\\":\\"https://github.com/suyuan32\\"}]}"]]},"headers":[{"level":2,"title":"API 初始化代码生成","slug":"api-初始化代码生成","link":"#api-初始化代码生成","children":[{"level":3,"title":"goctls extra init_code","slug":"goctls-extra-init-code","link":"#goctls-extra-init-code","children":[]}]}],"git":{"createdTime":1680859418000,"updatedTime":1715767691000,"contributors":[{"name":"Ryan SU","email":"yuansu.china.work@gmail.com","commits":4},{"name":"Ryan Su","email":"yuansu.china.work@gmail.com","commits":2}]},"readingTime":{"minutes":0.82,"words":246},"filePathRelative":"zh/guide/quick-start/extra/2-api_init_code.md","localizedDate":"2023年4月7日","autoDesc":true,"excerpt":"<h2>API 初始化代码生成</h2>\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">视频教程</p>\\n</div>\\n<h3><code>goctls extra init_code</code></h3>\\n<blockquote>\\n<p>在根目录执行</p>\\n</blockquote>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code>goctls extra init_code <span class=\\"token parameter variable\\">-m</span> StudentInfo <span class=\\"token parameter variable\\">-t</span> other <span class=\\"token parameter variable\\">-n</span> Core\\n</code></pre></div>"}');export{_ as comp,k as data};
