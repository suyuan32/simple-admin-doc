import{_ as e,a as l}from"./api_gen_struct-CmwrLS2e.js";import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,c as h,d as s,e as n,b as i,o as d}from"./app-5txk5biM.js";const k={},r=i('<div class="hint-container warning"><p class="hint-container-title">注意</p><p>必须了解 go zero 的 API 命令 <a href="https://go-zero.dev/docs/tutorials/cli/api" target="_blank" rel="noopener noreferrer">API 命令</a> <a href="https://go-zero.dev/docs/tutorials" target="_blank" rel="noopener noreferrer">api 文件编写</a> <br><br> 参考 <a href="https://github.com/suyuan32/simple-admin-example-api" target="_blank" rel="noopener noreferrer">Example</a> 项目生成一遍，确认生成文件与 Example 项目一致，Example 项目有完整的命令</p></div>',1),c={class:"hint-container info"},g=s("p",{class:"hint-container-title"},"相关信息",-1),o=s("p",null,[s("a",{href:"https://www.bilibili.com/video/BV1Lh411E7Xv",target:"_blank",rel:"noopener noreferrer"},"视频教程")],-1),y=i(`<h2 id="api-服务的职责" tabindex="-1"><a class="header-anchor" href="#api-服务的职责"><span>API 服务的职责</span></a></h2><p>在 simple admin 中， API 服务充当网关的角色，主要提供以下功能：</p><ul><li>用户鉴权， 如 JWT</li><li>数据处理， 如数据过滤筛选，国际化翻译</li><li>限流和熔断</li></ul><p>一个 API 可以接入多个 RPC， 提供统一的请求入口</p><h2 id="创建-api-项目" tabindex="-1"><a class="header-anchor" href="#创建-api-项目"><span>创建 API 项目</span></a></h2><blockquote><p>创建 example</p></blockquote><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">goctls</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> api</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> new</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> example</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --i18n=true</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --casbin=true</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --trans_err=true</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --module_name=github.com/suyuan32/simple-admin-example-api</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --port=8081</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>简单命令</p></blockquote><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">goctls</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> api</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> new</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> example</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -c</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -a</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/suyuan32/simple-admin-example-api</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 8081</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>创建项目名称仅支持小写和驼峰命名</p></div><h3 id="api-new-参数介绍" tabindex="-1"><a class="header-anchor" href="#api-new-参数介绍"><span><code>api new</code> 参数介绍</span></a></h3><table><thead><tr><th>参数</th><th>必须</th><th>默认值</th><th>介绍</th><th>使用方法</th></tr></thead><tbody><tr><td>i18n</td><td>否</td><td>false</td><td>是否启用 i18n</td><td>true 为启用</td></tr><tr><td>casbin</td><td>否</td><td>false</td><td>是否启用 casbin 进行鉴权并自动添加中间件</td><td>true 为启用</td></tr><tr><td>module_name</td><td>否</td><td></td><td>go.mod 中的 module 名称</td><td>如果项目需要被在外部 import，需要像上面例子设置为 github 或者其他地方的仓库网址， 为空则 module 为项目名称</td></tr><tr><td>trans_err</td><td>否</td><td>false</td><td>国际化翻译错误信息</td><td>true 为启用</td></tr><tr><td>port</td><td>否</td><td>9100</td><td>端口号</td><td>服务暴露的端口号</td></tr><tr><td>ent</td><td>否</td><td>false</td><td>是否启用 Ent</td><td>true 为启用，启用 Ent 可用于单体 API 服务</td></tr><tr><td>use_core_rpc</td><td>否</td><td>false</td><td>是否使用 CoreRpc</td><td>是否使用 CoreRpc, 生成 CoreRpc 配置, 若为 true, 自动生成 CoreRpc 相关文件和代码</td></tr></tbody></table><p><strong>详细参数请在命令行查看 <code>goctls api new --help</code></strong></p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> goctls</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> api</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> new</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --help</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">快速创建</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> api</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 服务</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Usage:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  goctls</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> api</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [flags]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Flags:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      --branch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> string</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        远程</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> repo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 的分支，与</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --remote</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 一起使用</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -c,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --casbin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">               是否使用</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Casbin</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -e,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --ent</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                  API</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 服务中是否使用</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Ent</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -h,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --help</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                 help</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> for</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> new</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      --home</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> string</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          模板的</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> goctls</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 路径，--home</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 和</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --remote</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 不能同时设置，如果设置了，--remote</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 优先级更高</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -i,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --i18n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                 是否启用</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> i18n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 国际化</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -m,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --module_name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> string</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   go.mod</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 中的模块名称，例如</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/suyuan32/simple-admin-core</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -p,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --port</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> int</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">             服务暴露的端口</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (default </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">9100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      --remote</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> string</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        模板的远程</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> repo，--home</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 和</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --remote</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 不能同时设置，如果设置了，--remote</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 优先级更高</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                             Git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> repo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 的目录结构必须与</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://github.com/zeromicro/go-zero-template</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 相一致</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -s,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --style</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> string</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">         文件命名格式，参见</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [https://github.com/zeromicro/go-zero/blob/master/tools/goctl/config/readme.md] (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">default</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;go_zero&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -a,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --trans_err</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            是否翻译错误</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -r,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --use_core_rpc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">         是否使用</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CoreRpc,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 生成</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CoreRpc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 配置</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>你可以看到以下结构</p></blockquote><figure><img src="`+e+`" alt="Example" tabindex="0" loading="lazy"><figcaption>Example</figcaption></figure><h3 id="文件结构" tabindex="-1"><a class="header-anchor" href="#文件结构"><span>文件结构</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" data-title="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>├── desc                              api声明文件存放目录</span></span>
<span class="line"><span>├── etc                               配置文件目录</span></span>
<span class="line"><span>└── internal</span></span>
<span class="line"><span>    ├── config</span></span>
<span class="line"><span>    ├── handler                       handler目录</span></span>
<span class="line"><span>    │   ├── base</span></span>
<span class="line"><span>    │   ├── student</span></span>
<span class="line"><span>    │   └── teacher</span></span>
<span class="line"><span>    ├── i18n                          国际化i18n文件目录</span></span>
<span class="line"><span>    │   └── locale</span></span>
<span class="line"><span>    ├── logic                         业务代码目录</span></span>
<span class="line"><span>    │   ├── base</span></span>
<span class="line"><span>    │   ├── student</span></span>
<span class="line"><span>    │   └── teacher</span></span>
<span class="line"><span>    ├── middleware                    中间件目录</span></span>
<span class="line"><span>    ├── svc                           全局参数目录</span></span>
<span class="line"><span>    └── types                         类型声明目录</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>然后编辑 etc/example.yaml</p></blockquote><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">example.api</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.0.0.0</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">8081</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Timeout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">30000</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Auth</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  AccessSecret</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># the same as core</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  AccessExpire</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">259200</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  ServiceName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">exampleApiLogger</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  Mode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">file</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  Path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/home/ryan/data/logs/example/api</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  Level</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">info</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  Compress</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  KeepDays</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">7</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  StackCoolDownMillis</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">100</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Prometheus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  Host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.0.0.0</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  Port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">4000</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  Path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/metrics</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">RedisConf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  Host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">127.0.0.1:6379</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  Type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">node</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">DatabaseConf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  Type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">mysql</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  Host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">127.0.0.1</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  Port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3306</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  DBName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">simple_admin</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  Username</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">root</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> # set your username</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  Password</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;123456&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> # set your password</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  MaxOpenConn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">100</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  SSLMode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">disable</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  CacheTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">CasbinConf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  ModelText</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">|</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    [request_definition]</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    r = sub, obj, act</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    [policy_definition]</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    p = sub, obj, act</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    [role_definition]</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    g = _, _</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    [policy_effect]</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    e = some(where (p.eft == allow))</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    [matchers]</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    m = r.sub == p.sub &amp;&amp; keyMatch2(r.obj,p.obj) &amp;&amp; r.act == p.act</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ExampleRpc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  Endpoints</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">127.0.0.1:8080</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>运行代码</p></blockquote><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> example.go</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> etc/example.yaml</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>如果看到</p></blockquote><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Starting</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> at</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 127.0.0.1:8081...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>说明运行成功.</p><h2 id="代码生成-基于-proto" tabindex="-1"><a class="header-anchor" href="#代码生成-基于-proto"><span>代码生成（基于 Proto）</span></a></h2><div class="hint-container warning"><p class="hint-container-title">注意</p><p>proto 必须为 <code>goctls rpc ent</code> 生成的 proto</p></div><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">goctls</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> api</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> proto</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --proto=/home/ryan/GolandProjects/simple-admin-example-rpc/example.proto</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --style=go_zero</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --api_service_name=example</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --rpc_service_name=Example</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --output=./</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --model=Student</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --rpc_name=Example</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --grpc_package=github.com/suyuan32/simple-admin-example-rpc/types/example</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --i18n=true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>简单参数</p></blockquote><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">goctls</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> api</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> proto</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /home/ryan/GolandProjects/simple-admin-example-rpc/example.proto</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> example</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -r</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Example</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -o</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ./</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Student</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Example</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -g</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/suyuan32/simple-admin-example-rpc/types/example</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="api-proto-参数介绍" tabindex="-1"><a class="header-anchor" href="#api-proto-参数介绍"><span><code>api proto</code> 参数介绍</span></a></h3><table><thead><tr><th>参数</th><th>必须</th><th>默认值</th><th>介绍</th><th>使用方法</th></tr></thead><tbody><tr><td>proto</td><td>是</td><td></td><td>proto 文件地址</td><td>输入 proto 文件的绝对路径。 <strong>注意要为合并后的 proto 即根目录下的 proto ，不是 desc 文件夹中的，因为要获取 package 和 Base 结构</strong></td></tr><tr><td>i18n</td><td>否</td><td>false</td><td>是否启用 i18n</td><td>true 为启用</td></tr><tr><td>style</td><td>否</td><td>go_zero</td><td>文件名格式</td><td>go_zero 为蛇形格式</td></tr><tr><td>api_service_name</td><td>是</td><td></td><td>服务名称</td><td>api 服务的 service 名称, 在 api 声明文件中</td></tr><tr><td>rpc_service_name</td><td>是</td><td></td><td>服务名称</td><td>rpc 服务的名称, 与 proto 文件中的 service 名称一致</td></tr><tr><td>output</td><td>是</td><td></td><td>输出位置</td><td>文件输出位置，可以为相对路径，指向 main 文件目录</td></tr><tr><td>model</td><td>是</td><td></td><td>模型名称</td><td>用于生成的模型名称，例如 User, 支持同时生成多个模型, 使用逗号分隔，如 User,Member</td></tr><tr><td>rpc_name</td><td>是</td><td></td><td>RPC 名称</td><td>输入 Example 则生成文件会生成 l.svcCtx.ExampleRpc</td></tr><tr><td>grpc_package</td><td>是</td><td></td><td>RPC *_grpc.go 包路径</td><td>在 example 中是 github.com/suyuan32/simple-admin-example-rpc/example</td></tr><tr><td>multiple</td><td>否</td><td>false</td><td>多服务</td><td>若 proto 文件中有多个 service, 需要设置为 true</td></tr><tr><td>json_style</td><td>否</td><td>goZero</td><td>JSON tag 的格式，默认为小驼峰</td><td>go_zero 为下划线， GoZero 为大驼峰</td></tr><tr><td>import_prefix</td><td>否</td><td></td><td>导入路径前缀</td><td>导入路径的前缀，仅用于项目位于子目录的情况，如 core 的 rpc 和 api</td></tr><tr><td>overwrite</td><td>否</td><td>false</td><td>是否覆盖生成文件</td><td>true 则会覆盖所有生成的文件</td></tr><tr><td>api_data</td><td>否</td><td></td><td>是否自动生成 API 初始化代码</td><td>若为 true 会自动生成API初始化代码</td></tr><tr><td>route_prefix</td><td>否</td><td></td><td>是否使用路由前缀</td><td>前缀必须以 &quot;/&quot; 开头</td></tr><tr><td>optional_service</td><td>否</td><td>false</td><td>是否为可选服务</td><td>是否为可选服务，若为 true，会自动生成服务启动判断逻辑</td></tr></tbody></table><p><strong>详细参数请在命令行查看 <code>goctls api proto --help</code></strong></p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">从</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> proto</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 文件生成</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CRUD</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 模板</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Usage:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  goctls</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> api</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> proto</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [flags]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Flags:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -d,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --api_data</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                  是否自动生成</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> API</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 初始化代码，需要</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CoreRpc</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -a,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --api_service_name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> string</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   API</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 服务名称</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -g,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --grpc_package</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> string</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       存储</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 文件的</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rpc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 包，例如</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/suyuan32/simple-admin-job/types/job</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -h,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --help</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                      help</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> for</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> proto</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -i,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --i18n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                      是否启用</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> i18n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 国际化</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -x,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --import_prefix</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> string</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      导入路径的前缀，仅用于项目位于子目录的情况，如</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> core</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 的</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rpc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 和</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> api</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -j,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --json_style</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> string</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">         JSON</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 标记格式，默认为驼峰式</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (default </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;goZero&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -m,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --model</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> string</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">              用于生成的模型名称，和</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> schema</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 的</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> struct</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 名称一致，首字母大写，例如</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> User,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 支持同时生成多个模型,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 使用逗号分隔，如</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> User,Member</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      --multiple</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                  proto</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 是否包含多个服务</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -t,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --optional_service</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          是否为可选服务，如果为</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">，则会生成判断代码</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -o,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --output</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> string</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">             输出路径</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -w,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --overwrite</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                 是否覆盖文件，它将覆盖所有生成的文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -p,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --proto</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> string</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">              proto</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 文件路径</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -f,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --route_prefix</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> string</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       路由前缀，需要以</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;/&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 开头</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -n,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --rpc_name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> string</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">           RPC</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 服务名称，用于调用，例如</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CoreRpc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 需要配置为</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Core</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -r,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --rpc_service_name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> string</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   RPC</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 服务名称</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -s,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --style</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> string</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">              文件名格式样式</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (default </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;go_zero&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>multiple 例子, multiple 用于根据不同服务生成多个 rpcclient</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">goctls</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> api</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> proto</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --proto=/home/ryan/GolandProjects/simple-admin-example-rpc/example.proto</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --style=go_zero</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --api_service_name=example</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --rpc_service_name=school</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --output=./</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --model=Teacher</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --rpc_name=School</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --grpc_package=github.com/suyuan32/simple-admin-example-rpc/example</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --multiple=true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><a href="https://github.com/suyuan32/simple-admin-example-api/tree/multiple" target="_blank" rel="noopener noreferrer">代码</a></p></div><blockquote><p>生成效果</p></blockquote><figure><img src="`+l+'" alt="pic" tabindex="0" loading="lazy"><figcaption>pic</figcaption></figure><blockquote><p>详情查看 simple admin example api 地址 <a href="https://github.com/suyuan32/simple-admin-example-api" target="_blank" rel="noopener noreferrer">https://github.com/suyuan32/simple-admin-example-api</a></p></blockquote><div class="hint-container warning"><p class="hint-container-title">注意</p><p>还需要手动添加<code>ExampleRpc</code>到<code>service_context</code>, <code>config</code>, <code>etc</code></p></div><h2 id="代码生成-基于-ent-的单体服务" tabindex="-1"><a class="header-anchor" href="#代码生成-基于-ent-的单体服务"><span>代码生成 (基于 Ent 的单体服务)</span></a></h2>',40),m={class:"hint-container info"},A=s("p",{class:"hint-container-title"},"相关信息",-1),v=s("p",null,[s("a",{href:"https://www.bilibili.com/video/BV1oa4y1A7rT/",target:"_blank",rel:"noopener noreferrer"},"视频教程")],-1),F=i(`<div class="hint-container info"><p class="hint-container-title">相关信息</p><p>如果你的项目较小， 单体 API 服务比较适合你。直接在 API 层操作数据库，无需连接 RPC。</p></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>单体服务需要在 使用 <code>api new</code> 命令时设置 <code>--ent=true</code>. <br> 示例项目 <a href="https://github.com/suyuan32/simple-admin-example-api-single" target="_blank" rel="noopener noreferrer">Single Example</a></p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">goctls</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> api</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> new</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> example</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -c</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -a</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/suyuan32/simple-admin-example-api</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 8081</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -e</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">goctls</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> api</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ent</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --schema=./ent/schema</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --api_service_name=example</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --output=./</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --model=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">modelName}</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --group=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">groupName}</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --search_key_num=3</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --overwrite=true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><table><thead><tr><th>参数</th><th>必须</th><th>默认值</th><th>介绍</th><th>使用方法</th></tr></thead><tbody><tr><td>schema</td><td>是</td><td></td><td>schema 文件地址</td><td>输入 Ent schema 文件夹相对路径</td></tr><tr><td>style</td><td>否</td><td>go_zero</td><td>文件名格式</td><td>go_zero 为蛇形格式</td></tr><tr><td>api_service_name</td><td>是</td><td></td><td>服务名称</td><td>api 服务的 service 名称, 在 api 声明文件中</td></tr><tr><td>output</td><td>是</td><td></td><td>输出位置</td><td>文件输出位置，可以为相对路径，指向 main 文件目录</td></tr><tr><td>model</td><td>是</td><td></td><td>模型名称</td><td>用于生成的模型名称，例如 User，如果为 &quot;all&quot;，则为 schema 目录中的所有模型生成代码</td></tr><tr><td>search_key_num</td><td>否</td><td>3</td><td>搜索字段数量（默认为 3）</td><td>列表搜索字段数量，只能自动生成 string 的字段</td></tr><tr><td>group</td><td>是</td><td></td><td>分组名称</td><td>分组名称用于将不同 logic 文件放到不同文件夹</td></tr><tr><td>json_style</td><td>否</td><td>goZero</td><td>JSON tag 的格式，默认为小驼峰</td><td>go_zero 为下划线， GoZero 为大驼峰</td></tr><tr><td>i18n</td><td>否</td><td>false</td><td>是否启用 i18n</td><td>true 为启用</td></tr><tr><td>import_prefix</td><td>否</td><td></td><td>导入路径前缀</td><td>导入路径的前缀，仅用于项目位于子目录的情况，如 core 的 rpc 和 api</td></tr><tr><td>api_data</td><td>否</td><td></td><td>是否自动生成 API 初始化代码</td><td>若为 true 会自动生成API初始化代码</td></tr><tr><td>route_prefix</td><td>否</td><td></td><td>是否使用路由前缀</td><td>前缀必须以 &quot;/&quot; 开头</td></tr><tr><td>overwrite</td><td>否</td><td>false</td><td>是否覆盖生成文件</td><td>true 则会覆盖所有生成的文件</td></tr></tbody></table><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>快捷命令 <code>make gen-api-ent-logic model={modelName} group={groupName}</code> 表示生成 schema 为 <code>{modelName}</code> 的代码，<code>{groupName}</code>为分组名称，注意 modelName 需要首字母大写，和 schema 中的 struct 名称保持一致。使用 <code>make gen-api-ent-logic model=all group=all</code> 生成所有 schema 的 CRUD 代码。</p></div><blockquote><p>** 运行 <code>goctls api ent --help</code> 查看详细命令 **</p></blockquote><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> goctls</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> api</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ent</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -h</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">从</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ent</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 文件生成</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CRUD</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 业务逻辑文件</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Usage:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  goctls</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> api</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [flags]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Flags:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -p,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --api_data</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                  是否自动生成</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> API</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 初始化代码，需要</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CoreRpc</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -a,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --api_service_name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> string</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   API</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 服务名称</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -g,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --group</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> string</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">              业务逻辑代码的分组名称，例如</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> user</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -h,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --help</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                      help</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> for</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ent</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -i,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --i18n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                      是否启用</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> i18n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 国际化</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -x,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --import_prefix</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> string</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      导入路径的前缀，仅用于项目位于子目录的情况，如</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> core</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 的</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rpc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 和</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> api</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -j,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --json_style</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> string</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">         JSON</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 标记格式，默认为驼峰式</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (default </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;goZero&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -m,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --model</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> string</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">              用于生成的模型名称，和</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> schema</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 的</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> struct</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 名称一致，首字母大写，例如</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> User，如果为</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;all&quot;，则为</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> schema</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 目录中的所有模型生成代</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 码</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -o,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --output</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> string</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">             输出路径</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -w,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --overwrite</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                 是否覆盖文件，它将覆盖所有生成的文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -f,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --route_prefix</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> string</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       路由前缀，需要以</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;/&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 开头</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -c,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --schema</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> string</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">             Ent</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 的</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> schema</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 文件夹路径</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -k,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --search_key_num</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> int</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        搜索条件的最大数量，只支持</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> String</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 类型</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (default </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -s,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --style</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> string</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">              文件名格式样式</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (default </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;go_zero&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>goctls api ent 会同时生成 .api 文件</strong></p><h3 id="目录结构" tabindex="-1"><a class="header-anchor" href="#目录结构"><span>目录结构</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" data-title="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>example</span></span>
<span class="line"><span>├── Dockerfile</span></span>
<span class="line"><span>├── Makefile</span></span>
<span class="line"><span>├── desc                                       # 声明目录</span></span>
<span class="line"><span>│   ├── all.api</span></span>
<span class="line"><span>│   └── base.api</span></span>
<span class="line"><span>├── ent                                        # Ent 目录</span></span>
<span class="line"><span>│   ├── client.go</span></span>
<span class="line"><span>│   ├── ent.go</span></span>
<span class="line"><span>│   ├── enttest</span></span>
<span class="line"><span>│   │   └── enttest.go</span></span>
<span class="line"><span>│   ├── example</span></span>
<span class="line"><span>│   │   ├── example.go</span></span>
<span class="line"><span>│   │   └── where.go</span></span>
<span class="line"><span>│   ├── example.go</span></span>
<span class="line"><span>│   ├── example_create.go</span></span>
<span class="line"><span>│   ├── example_delete.go</span></span>
<span class="line"><span>│   ├── example_query.go</span></span>
<span class="line"><span>│   ├── example_update.go</span></span>
<span class="line"><span>│   ├── generate.go</span></span>
<span class="line"><span>│   ├── hook</span></span>
<span class="line"><span>│   │   └── hook.go</span></span>
<span class="line"><span>│   ├── migrate</span></span>
<span class="line"><span>│   │   ├── migrate.go</span></span>
<span class="line"><span>│   │   └── schema.go</span></span>
<span class="line"><span>│   ├── mutation.go</span></span>
<span class="line"><span>│   ├── predicate</span></span>
<span class="line"><span>│   │   └── predicate.go</span></span>
<span class="line"><span>│   ├── runtime</span></span>
<span class="line"><span>│   │   └── runtime.go</span></span>
<span class="line"><span>│   ├── runtime.go</span></span>
<span class="line"><span>│   ├── schema                                  # 模型目录</span></span>
<span class="line"><span>│   │   └── example.go</span></span>
<span class="line"><span>│   ├── template</span></span>
<span class="line"><span>│   │   ├── not_empty_update.tmpl</span></span>
<span class="line"><span>│   │   └── pagination.tmpl</span></span>
<span class="line"><span>│   └── tx.go</span></span>
<span class="line"><span>├── etc                                         # 配置文件目录</span></span>
<span class="line"><span>│   └── example.yaml</span></span>
<span class="line"><span>├── example.go</span></span>
<span class="line"><span>├── go.mod</span></span>
<span class="line"><span>├── go.sum</span></span>
<span class="line"><span>└── internal</span></span>
<span class="line"><span>    ├── config</span></span>
<span class="line"><span>    │   └── config.go</span></span>
<span class="line"><span>    ├── handler</span></span>
<span class="line"><span>    │   ├── base</span></span>
<span class="line"><span>    │   │   └── init_database_handler.go</span></span>
<span class="line"><span>    │   └── routes.go</span></span>
<span class="line"><span>    ├── i18n                                    # 国际化文件目录</span></span>
<span class="line"><span>    │   ├── locale</span></span>
<span class="line"><span>    │   │   ├── en.json</span></span>
<span class="line"><span>    │   │   └── zh.json</span></span>
<span class="line"><span>    │   └── vars.go</span></span>
<span class="line"><span>    ├── logic</span></span>
<span class="line"><span>    │   └── base</span></span>
<span class="line"><span>    │       └── init_database_logic.go</span></span>
<span class="line"><span>    ├── middleware</span></span>
<span class="line"><span>    │   └── authority_middleware.go</span></span>
<span class="line"><span>    ├── svc</span></span>
<span class="line"><span>    │   └── service_context.go</span></span>
<span class="line"><span>    ├── types</span></span>
<span class="line"><span>    │   └── types.go</span></span>
<span class="line"><span>    └── utils                                  # 工具目录</span></span>
<span class="line"><span>        ├── dberrorhandler                     # Ent错误处理工具</span></span>
<span class="line"><span>        │   └── error_handler.go</span></span>
<span class="line"><span>        └── entx                               # Ent事务支持函数</span></span>
<span class="line"><span>            └── ent_tx.go</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10);function u(b,C){const a=p("BiliBili");return d(),h("div",null,[r,s("div",c,[g,o,n(a,{bvid:"BV1Lh411E7Xv"})]),y,s("div",m,[A,v,n(a,{bvid:"BV1oa4y1A7rT"})]),F])}const x=t(k,[["render",u],["__file","api_example.html.vue"]]),f=JSON.parse('{"path":"/zh/guide/quick-start/codegen/api_example.html","title":"API 微服务","lang":"zh-CN","frontmatter":{"order":1,"title":"API 微服务","head":[["meta",{"name":"keywords","content":"simple admin api, api code generation, API 代码生成, goctls, single api service, 单体 api 服务"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://doc.ryansu.tech/guide/quick-start/codegen/api_example.html"}],["meta",{"property":"og:url","content":"https://doc.ryansu.tech/zh/guide/quick-start/codegen/api_example.html"}],["meta",{"property":"og:site_name","content":"Simple Admin"}],["meta",{"property":"og:title","content":"API 微服务"}],["meta",{"property":"og:description","content":"注意 必须了解 go zero 的 API 命令 API 命令 api 文件编写 参考 Example 项目生成一遍，确认生成文件与 Example 项目一致，Example 项目有完整的命令 相关信息 视频教程 API 服务的职责 在 simple admin 中， API 服务充当网关的角色，主要提供以下功能： 用户鉴权， 如 JWT 数据处理， ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://doc.ryansu.tech/assets/example-struct.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-05-29T01:54:26.000Z"}],["meta",{"property":"article:author","content":"Ryan SU"}],["meta",{"property":"article:modified_time","content":"2024-05-29T01:54:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"API 微服务\\",\\"image\\":[\\"https://doc.ryansu.tech/assets/example-struct.png\\",\\"https://doc.ryansu.tech/assets/api_gen_struct.png\\"],\\"dateModified\\":\\"2024-05-29T01:54:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ryan SU\\",\\"url\\":\\"https://github.com/suyuan32\\"}]}"]],"description":"注意 必须了解 go zero 的 API 命令 API 命令 api 文件编写 参考 Example 项目生成一遍，确认生成文件与 Example 项目一致，Example 项目有完整的命令 相关信息 视频教程 API 服务的职责 在 simple admin 中， API 服务充当网关的角色，主要提供以下功能： 用户鉴权， 如 JWT 数据处理， ..."},"headers":[{"level":2,"title":"API 服务的职责","slug":"api-服务的职责","link":"#api-服务的职责","children":[]},{"level":2,"title":"创建 API 项目","slug":"创建-api-项目","link":"#创建-api-项目","children":[{"level":3,"title":"api new 参数介绍","slug":"api-new-参数介绍","link":"#api-new-参数介绍","children":[]},{"level":3,"title":"文件结构","slug":"文件结构","link":"#文件结构","children":[]}]},{"level":2,"title":"代码生成（基于 Proto）","slug":"代码生成-基于-proto","link":"#代码生成-基于-proto","children":[{"level":3,"title":"api proto 参数介绍","slug":"api-proto-参数介绍","link":"#api-proto-参数介绍","children":[]}]},{"level":2,"title":"代码生成 (基于 Ent 的单体服务)","slug":"代码生成-基于-ent-的单体服务","link":"#代码生成-基于-ent-的单体服务","children":[{"level":3,"title":"目录结构","slug":"目录结构","link":"#目录结构","children":[]}]}],"git":{"createdTime":1671464359000,"updatedTime":1716947666000,"contributors":[{"name":"Ryan SU","email":"yuansu.china.work@gmail.com","commits":21},{"name":"Ryan SU","email":"1137661202@qq.com","commits":14},{"name":"Ryan Su","email":"yuansu.china.work@gmail.com","commits":6},{"name":"Gowa2017","email":"33367355+Gowa2017@users.noreply.github.com","commits":2},{"name":"forging2012","email":"forging2012@126.com","commits":1}]},"readingTime":{"minutes":8.84,"words":2653},"filePathRelative":"zh/guide/quick-start/codegen/api_example.md","localizedDate":"2022年12月19日","autoDesc":true,"excerpt":"<div class=\\"hint-container warning\\">\\n<p class=\\"hint-container-title\\">注意</p>\\n<p>必须了解 go zero 的 API 命令 <a href=\\"https://go-zero.dev/docs/tutorials/cli/api\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">API 命令</a> <a href=\\"https://go-zero.dev/docs/tutorials\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">api 文件编写</a> <br>\\n<br>\\n参考 <a href=\\"https://github.com/suyuan32/simple-admin-example-api\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Example</a> 项目生成一遍，确认生成文件与 Example 项目一致，Example 项目有完整的命令</p>\\n</div>"}');export{x as comp,f as data};
