import{_ as l,a as o}from"./api_gen_struct-3j2Q2jyC.js";import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,o as d,c,a as e,f as a,b as n,e as t}from"./app-CK-zxo63.js";const u={},m={class:"hint-container warning"},v=e("p",{class:"hint-container-title"},"Warning",-1),h={href:"https://go-zero.dev/en/docs/tutorials",target:"_blank",rel:"noopener noreferrer"},b={href:"https://go-zero.dev/en/docs/tutorials/http/server/configuration",target:"_blank",rel:"noopener noreferrer"},g=e("br",null,null,-1),k=e("br",null,null,-1),f={href:"https://github.com/suyuan32/simple-admin-example-api",target:"_blank",rel:"noopener noreferrer"},y=e("h2",{id:"responsibilities-of-the-api-service",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#responsibilities-of-the-api-service"},[e("span",null,"Responsibilities of the API service")])],-1),_=e("p",null,"In simple admin, the API service acts as a gateway, mainly providing the following functions:",-1),x=e("ul",null,[e("li",null,"User authentication, such as JWT"),e("li",null,"Data processing, such as data filtering, international translation"),e("li",null,"Current limiting and fusing")],-1),w=e("p",null,"An API can access multiple RPCs, providing a unified request entry。",-1),q={class:"hint-container info"},I=e("p",{class:"hint-container-title"},"Info",-1),P={href:"https://youtu.be/duSIv0qcCV8",target:"_blank",rel:"noopener noreferrer"},T=t(`<h2 id="create-api-project" tabindex="-1"><a class="header-anchor" href="#create-api-project"><span>Create API project</span></a></h2><blockquote><p>Create example project</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>goctls api new example <span class="token parameter variable">--i18n</span><span class="token operator">=</span>true <span class="token parameter variable">--casbin</span><span class="token operator">=</span>true <span class="token parameter variable">--trans_err</span><span class="token operator">=</span>true <span class="token parameter variable">--module_name</span><span class="token operator">=</span>github.com/suyuan32/simple-admin-example-api <span class="token parameter variable">--port</span><span class="token operator">=</span><span class="token number">8081</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>Simpler Command</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>goctls api new example <span class="token parameter variable">-i</span> <span class="token parameter variable">-c</span> <span class="token parameter variable">-a</span> <span class="token parameter variable">-m</span> github.com/suyuan32/simple-admin-example-api <span class="token parameter variable">-p</span> <span class="token number">8081</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">Warning</p><p>Create a project name that only supports lowercase and camelcase</p></div><h3 id="api-new-parameters" tabindex="-1"><a class="header-anchor" href="#api-new-parameters"><span><code>api new</code> parameters</span></a></h3><table><thead><tr><th>Parameter</th><th>Must</th><th>Default</th><th>Introduction</th><th>Usage</th></tr></thead><tbody><tr><td>i18n</td><td>No</td><td>false</td><td>Whether to use i18n</td><td>true means use</td></tr><tr><td>casbin</td><td>No</td><td>false</td><td>Whether to enable casbin for authentication and automatically add middleware</td><td>true means use</td></tr><tr><td>module_name</td><td>No</td><td></td><td>Module name in go.mod</td><td>If your project will be used by other project, you should set as above which is a github repository. If it is empty, the module will be the same as project name.</td></tr><tr><td>trans_err</td><td>No</td><td>false</td><td>Whether to use i18n in error</td><td>true means use</td></tr><tr><td>port</td><td>No</td><td>9100</td><td>port number</td><td>The service port</td></tr><tr><td>style</td><td>No</td><td>go_zero</td><td>The format of the file name.</td><td>snake case format is go_zero.</td></tr><tr><td>use_core_rpc</td><td>No</td><td>false</td><td>Generate CoreRpc config</td><td>Whether to use &quot;CoreRpc&quot;, if true will generate &quot;CoreRpc&quot; configuration</td></tr></tbody></table><p><strong>More parameters please check <code>goctls api new --help</code></strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ goctls api new <span class="token parameter variable">--help</span>
Fast create api <span class="token function">service</span>

Usage:
  goctls api new <span class="token punctuation">[</span>flags<span class="token punctuation">]</span>

Flags:
      <span class="token parameter variable">--branch</span> string        The branch of the remote repo, it does work with <span class="token parameter variable">--remote</span>
  -c, <span class="token parameter variable">--casbin</span>               Whether to use the Casbin
  -e, <span class="token parameter variable">--ent</span>                  Whether to use Ent <span class="token keyword">in</span> API <span class="token function">service</span>
  -h, <span class="token parameter variable">--help</span>                 <span class="token builtin class-name">help</span> <span class="token keyword">for</span> new
      <span class="token parameter variable">--home</span> string          The goctls home path of the template, <span class="token parameter variable">--home</span> and <span class="token parameter variable">--remote</span> cannot be <span class="token builtin class-name">set</span> at the same time, <span class="token keyword">if</span> they are, <span class="token parameter variable">--remote</span> has higher priority
  -i, <span class="token parameter variable">--i18n</span>                 Whether to use i18n
  -m, <span class="token parameter variable">--module_name</span> string   The module name <span class="token keyword">in</span> go.mod. e.g. github.com/suyuan32/simple-admin-core
  -p, <span class="token parameter variable">--port</span> int             The <span class="token function">service</span> port exposed <span class="token punctuation">(</span>default <span class="token number">9100</span><span class="token punctuation">)</span>
      <span class="token parameter variable">--remote</span> string        The remote <span class="token function">git</span> repo of the template, <span class="token parameter variable">--home</span> and <span class="token parameter variable">--remote</span> cannot be <span class="token builtin class-name">set</span> at the same time, <span class="token keyword">if</span> they are, <span class="token parameter variable">--remote</span> has higher priority
                             The <span class="token function">git</span> repo directory must be consistent with the https://github.com/zeromicro/go-zero-template directory structure
  -s, <span class="token parameter variable">--style</span> string         The <span class="token function">file</span> naming format, see <span class="token punctuation">[</span>https://github.com/zeromicro/go-zero/blob/master/tools/goctl/config/readme.md<span class="token punctuation">]</span> <span class="token punctuation">(</span>default <span class="token string">&quot;go_zero&quot;</span><span class="token punctuation">)</span>
  -a, <span class="token parameter variable">--trans_err</span>            Whether to translate the error
  -r, <span class="token parameter variable">--use_core_rpc</span>         Whether to use <span class="token string">&quot;CoreRpc&quot;</span>, <span class="token keyword">if</span> <span class="token boolean">true</span> will generate <span class="token string">&quot;CoreRpc&quot;</span> configuration
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>You can see the project structure:</p></blockquote><figure><img src="`+o+`" alt="Example" tabindex="0" loading="lazy"><figcaption>Example</figcaption></figure><h3 id="file-structure" tabindex="-1"><a class="header-anchor" href="#file-structure"><span>File structure</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>├── desc                             api declaration file storage directory
├── etc                              configuration file directory
└── internal
     ├──config
     ├── handler                     handler directory
     │ ├── base
     │ ├── student
     │ └── teacher
     ├──                             i18n internationalization i18n file directory
     │ └── locale
     ├── logic                       logic code directory
     │ ├── base
     │ ├── student
     │ └── teacher
     ├── middleware                  middleware directory
     ├── svc                         global parameter directory
     └── types                       type declaration directory


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>And then edit etc/example.yaml</p></blockquote><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">Name</span><span class="token punctuation">:</span> example.api
<span class="token key atrule">Host</span><span class="token punctuation">:</span> 0.0.0.0
<span class="token key atrule">Port</span><span class="token punctuation">:</span> <span class="token number">8081</span>
<span class="token key atrule">Timeout</span><span class="token punctuation">:</span> <span class="token number">30000</span>

<span class="token key atrule">Auth</span><span class="token punctuation">:</span>
  <span class="token key atrule">AccessSecret</span><span class="token punctuation">:</span> <span class="token comment"># the same as core</span>
  <span class="token key atrule">AccessExpire</span><span class="token punctuation">:</span> <span class="token number">259200</span>

<span class="token key atrule">Log</span><span class="token punctuation">:</span>
  <span class="token key atrule">ServiceName</span><span class="token punctuation">:</span> exampleApiLogger
  <span class="token key atrule">Mode</span><span class="token punctuation">:</span> file
  <span class="token key atrule">Path</span><span class="token punctuation">:</span> /home/ryan/data/logs/example/api
  <span class="token key atrule">Level</span><span class="token punctuation">:</span> info
  <span class="token key atrule">Compress</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
  <span class="token key atrule">KeepDays</span><span class="token punctuation">:</span> <span class="token number">7</span>
  <span class="token key atrule">StackCoolDownMillis</span><span class="token punctuation">:</span> <span class="token number">100</span>

<span class="token key atrule">Prometheus</span><span class="token punctuation">:</span>
  <span class="token key atrule">Host</span><span class="token punctuation">:</span> 0.0.0.0
  <span class="token key atrule">Port</span><span class="token punctuation">:</span> <span class="token number">4000</span>
  <span class="token key atrule">Path</span><span class="token punctuation">:</span> /metrics

<span class="token key atrule">RedisConf</span><span class="token punctuation">:</span>
  <span class="token key atrule">Host</span><span class="token punctuation">:</span> 127.0.0.1<span class="token punctuation">:</span><span class="token number">6379</span>
  <span class="token key atrule">Type</span><span class="token punctuation">:</span> node

<span class="token key atrule">DatabaseConf</span><span class="token punctuation">:</span>
  <span class="token key atrule">Type</span><span class="token punctuation">:</span> mysql
  <span class="token key atrule">Host</span><span class="token punctuation">:</span> 127.0.0.1
  <span class="token key atrule">Port</span><span class="token punctuation">:</span> <span class="token number">3306</span>
  <span class="token key atrule">DBName</span><span class="token punctuation">:</span> simple_admin
  <span class="token key atrule">Username</span><span class="token punctuation">:</span> root <span class="token comment"># set your username</span>
  <span class="token key atrule">Password</span><span class="token punctuation">:</span> <span class="token string">&quot;123456&quot;</span> <span class="token comment"># set your password</span>
  <span class="token key atrule">MaxOpenConn</span><span class="token punctuation">:</span> <span class="token number">100</span>
  <span class="token key atrule">SSLMode</span><span class="token punctuation">:</span> disable
  <span class="token key atrule">CacheTime</span><span class="token punctuation">:</span> <span class="token number">5</span>

<span class="token key atrule">CasbinConf</span><span class="token punctuation">:</span>
  <span class="token key atrule">ModelText</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">
    [request_definition]
    r = sub, obj, act
    [policy_definition]
    p = sub, obj, act
    [role_definition]
    g = _, _
    [policy_effect]
    e = some(where (p.eft == allow))
    [matchers]
    m = r.sub == p.sub &amp;&amp; keyMatch2(r.obj,p.obj) &amp;&amp; r.act == p.act</span>

<span class="token key atrule">ExampleRpc</span><span class="token punctuation">:</span>
  <span class="token key atrule">Endpoints</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> 127.0.0.1<span class="token punctuation">:</span><span class="token number">8080</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Run the command below:</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>go run example.go <span class="token parameter variable">-f</span> etc/example.yaml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>If you see the information below:</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>Starting server at <span class="token number">127.0</span>.0.1:8081<span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>That means running successfully.</p><h2 id="code-generation-based-on-proto-file" tabindex="-1"><a class="header-anchor" href="#code-generation-based-on-proto-file"><span>Code generation（based on Proto file）</span></a></h2><div class="hint-container warning"><p class="hint-container-title">Warning</p><p>Proto must be the proto generated by <code>goctls rpc ent</code></p></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>goctls api proto <span class="token parameter variable">--proto</span><span class="token operator">=</span>/home/ryan/GolandProjects/simple-admin-example-rpc/example.proto <span class="token parameter variable">--style</span><span class="token operator">=</span>go_zero <span class="token parameter variable">--api_service_name</span><span class="token operator">=</span>example <span class="token parameter variable">--rpc_service_name</span><span class="token operator">=</span>Example <span class="token parameter variable">--output</span><span class="token operator">=</span>./ <span class="token parameter variable">--model</span><span class="token operator">=</span>Student <span class="token parameter variable">--rpc_name</span><span class="token operator">=</span>Example <span class="token parameter variable">--grpc_package</span><span class="token operator">=</span>github.com/suyuan32/simple-admin-example-rpc/types/example
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>Simpler</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>goctls api proto <span class="token parameter variable">-p</span> /home/ryan/GolandProjects/simple-admin-example-rpc/example.proto <span class="token parameter variable">-a</span> example <span class="token parameter variable">-r</span> Example <span class="token parameter variable">-o</span> ./ <span class="token parameter variable">-m</span> Student <span class="token parameter variable">-n</span> Example <span class="token parameter variable">-g</span> github.com/suyuan32/simple-admin-example-rpc/types/example <span class="token parameter variable">-i</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="api-proto-parameters" tabindex="-1"><a class="header-anchor" href="#api-proto-parameters"><span><code>api proto</code> parameters</span></a></h3><table><thead><tr><th>Parameters</th><th>Must</th><th>Default</th><th>Introduction</th><th>Usage</th></tr></thead><tbody><tr><td>proto</td><td>Yes</td><td></td><td>Proto file path</td><td>Input the absolute path of proto file. <strong>It should be the proto in <code>root</code> directory, not in desc. Because it needs package data and <code>Base</code> data.</strong></td></tr><tr><td>style</td><td>No</td><td>go_zero</td><td>File name format</td><td>The go_zero means snack format</td></tr><tr><td>i18n</td><td>No</td><td>false</td><td>Whether to use i18n</td><td>true means use</td></tr><tr><td>api_service_name</td><td>Yes</td><td></td><td>API Service name</td><td>The API service name set in <code>.api</code> file</td></tr><tr><td>rpc_service_name</td><td>Yes</td><td></td><td>RPC Service name</td><td>The RPC service name set in <code>.proto</code> file</td></tr><tr><td>output</td><td>Yes</td><td></td><td>Output path</td><td>The output path，it can be relative path. It should target to the root path of project.</td></tr><tr><td>model</td><td>Yes</td><td></td><td>Model name</td><td>Model name used for generation, such as User, supports generating multiple models at the same time, separated by commas, such as User, Member</td></tr><tr><td>rpc_name</td><td>Yes</td><td></td><td>RPC name</td><td>Input Example will generate l.svcCtx.ExampleRpc</td></tr><tr><td>grpc_package</td><td>Yes</td><td></td><td>RPC *_grpc.go package path</td><td>In example project is github.com/suyuan32/simple-admin-example-rpc/example</td></tr><tr><td>multiple</td><td>No</td><td>false</td><td>Multiple Service</td><td>If your proto file contains multiple service, you should set true</td></tr><tr><td>json_style</td><td>No</td><td>goZero</td><td>JSON tag format, the default is small camelCase</td><td>go_zero is underscore, GoZero is large camelCase</td></tr><tr><td>import_prefix</td><td>No</td><td></td><td>The path prefix of import</td><td>Import paths&#39; prefix is only used when the service in sub folder, such as core service&#39;s api and rpc</td></tr><tr><td>overwrite</td><td>No</td><td>false</td><td>Whether it covers the generated file</td><td><code>true</code> will cover all generated files</td></tr><tr><td>api_data</td><td>No</td><td>false</td><td>Whether to automatically generate API initialization code, CoreRpc is required</td><td>If true, initialize API data will be auto generated.</td></tr><tr><td>route_prefix</td><td>No</td><td>false</td><td>Whether to generate route prefix.</td><td>must begin with &quot;/&quot;</td></tr><tr><td>optional_service</td><td>No</td><td>false</td><td>Whether the service is optional</td><td><code>true</code> will generate logic code to judge the service status</td></tr></tbody></table><p>** Run <code>goctls api proto --help</code> see more details. **</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ goctls api proto <span class="token parameter variable">-h</span>
Generate CRUD template from proto <span class="token function">file</span>

Usage:
  goctls api proto <span class="token punctuation">[</span>flags<span class="token punctuation">]</span>

Flags:
  -d, <span class="token parameter variable">--api_data</span>                  Whether to automatically generate API initialization code, CoreRpc is required
  -a, <span class="token parameter variable">--api_service_name</span> string   The API <span class="token function">service</span> name
  -g, <span class="token parameter variable">--grpc_package</span> string       The rpc package <span class="token function">which</span> stores pb file. e.g. github.com/suyuan32/simple-admin-job/types/job
  -h, <span class="token parameter variable">--help</span>                      <span class="token builtin class-name">help</span> <span class="token keyword">for</span> proto
  -i, <span class="token parameter variable">--i18n</span>                      Whether to use i18n
  -x, <span class="token parameter variable">--import_prefix</span> string      Import paths<span class="token string">&#39; prefix is only used when the service in sub folder, such as core service&#39;</span>s api and rpc
  -j, <span class="token parameter variable">--json_style</span> string         The JSON tag format, default is camelcase <span class="token punctuation">(</span>default <span class="token string">&quot;goZero&quot;</span><span class="token punctuation">)</span>
  -m, <span class="token parameter variable">--model</span> string              Model name used <span class="token keyword">for</span> generation, the same as the struct name <span class="token keyword">in</span> schema. such as User, supports generating multiple models at the same time, separated by commas, such as User, Member
      <span class="token parameter variable">--multiple</span>                  Whether the proto contains multiple services
  -t, <span class="token parameter variable">--optional_service</span>          Whether it is an optional service, <span class="token keyword">if</span> true, judgment code will be generated
  -o, <span class="token parameter variable">--output</span> string             The output path
  -w, <span class="token parameter variable">--overwrite</span>                 Whether to overwrite the files, it will overwrite all generated files
  -p, <span class="token parameter variable">--proto</span> string              The proto path
  -f, <span class="token parameter variable">--route_prefix</span> string       Route prefix,  must begin with <span class="token string">&quot;/&quot;</span>
  -n, <span class="token parameter variable">--rpc_name</span> string           The rpc name <span class="token keyword">in</span> <span class="token function">service</span> context. e.g. Core means CoreRpc
  -r, <span class="token parameter variable">--rpc_service_name</span> string   The RPC <span class="token function">service</span> name
  -s, <span class="token parameter variable">--style</span> string              The <span class="token function">file</span> name <span class="token function">format</span> style <span class="token punctuation">(</span>default <span class="token string">&quot;go_zero&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,30),C={class:"hint-container info"},A=t(`<p class="hint-container-title">Info</p><p>Multiple Service Example, multiple is used to generate separate RPC client when there are several RPC service in one proto file.</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>goctls api proto <span class="token parameter variable">--proto</span><span class="token operator">=</span>/home/ryan/GolandProjects/simple-admin-example-rpc/example.proto <span class="token parameter variable">--style</span><span class="token operator">=</span>go_zero <span class="token parameter variable">--api_service_name</span><span class="token operator">=</span>example <span class="token parameter variable">--rpc_service_name</span><span class="token operator">=</span>school <span class="token parameter variable">--output</span><span class="token operator">=</span>./ <span class="token parameter variable">--model</span><span class="token operator">=</span>Teacher <span class="token parameter variable">--rpc_name</span><span class="token operator">=</span>School <span class="token parameter variable">--grpc_package</span><span class="token operator">=</span>github.com/suyuan32/simple-admin-example-rpc/example <span class="token parameter variable">--multiple</span><span class="token operator">=</span>true
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3),N={href:"https://github.com/suyuan32/simple-admin-example-api/tree/multiple",target:"_blank",rel:"noopener noreferrer"},R=e("p",null,"The codes generated is like below:",-1),j=e("figure",null,[e("img",{src:l,alt:"pic",tabindex:"0",loading:"lazy"}),e("figcaption",null,"pic")],-1),S={href:"https://github.com/suyuan32/simple-admin-example-api",target:"_blank",rel:"noopener noreferrer"},z=t('<div class="hint-container warning"><p class="hint-container-title">Warning</p><p>You need to add <code>ExampleRpc</code> manually into <code>service_context</code>, <code>config</code>, <code>etc</code>.</p></div><h2 id="code-generation-ent-based-single-service" tabindex="-1"><a class="header-anchor" href="#code-generation-ent-based-single-service"><span>Code generation (Ent-based single service)</span></a></h2>',2),E={class:"hint-container info"},W=e("p",{class:"hint-container-title"},"Info",-1),U={href:"https://youtu.be/h3wybuEdg4s",target:"_blank",rel:"noopener noreferrer"},M=e("div",{class:"hint-container info"},[e("p",{class:"hint-container-title"},"Info"),e("p",null,"If your project is small, single API service is a good choise. It doesn't need RPC services.")],-1),D={class:"hint-container warning"},Y=e("p",{class:"hint-container-title"},"Warning",-1),B=e("code",null,"--ent=true",-1),L=e("code",null,"api new",-1),O=e("br",null,null,-1),Z={href:"https://github.com/suyuan32/simple-admin-example-api-single",target:"_blank",rel:"noopener noreferrer"},G=t(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>goctls api new example <span class="token parameter variable">-i</span> <span class="token parameter variable">-c</span> <span class="token parameter variable">-a</span> <span class="token parameter variable">-m</span> github.com/suyuan32/simple-admin-example-api <span class="token parameter variable">-p</span> <span class="token number">8081</span> <span class="token parameter variable">-e</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1),V=t(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>goctls api ent <span class="token parameter variable">--schema</span><span class="token operator">=</span>./ent/schema <span class="token parameter variable">--api_service_name</span><span class="token operator">=</span>example <span class="token parameter variable">--output</span><span class="token operator">=</span>./ <span class="token parameter variable">--model</span><span class="token operator">=</span><span class="token punctuation">{</span>modelName<span class="token punctuation">}</span> <span class="token parameter variable">--group</span><span class="token operator">=</span><span class="token punctuation">{</span>groupName<span class="token punctuation">}</span> <span class="token parameter variable">--search_key_num</span><span class="token operator">=</span><span class="token number">3</span> <span class="token parameter variable">--overwrite</span><span class="token operator">=</span>true
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th>Parameter</th><th>Required</th><th>Default</th><th>Description</th><th>Usage</th></tr></thead><tbody><tr><td>schema</td><td>Yes</td><td></td><td>The address of the Ent schema file.</td><td>Enter the relative path of the Ent schema folder.</td></tr><tr><td>style</td><td>No</td><td>go_zero</td><td>The format of the file name.</td><td>snake case format for go_zero.</td></tr><tr><td>i18n</td><td>No</td><td>false</td><td>Whether to use i18n</td><td>true means use</td></tr><tr><td>api_service_name</td><td>Yes</td><td></td><td>The service name of the API, used in the API declaration file.</td><td>In the API declaration file.</td></tr><tr><td>output</td><td>Yes</td><td></td><td>The output location of the file, relative path is accepted.</td><td>Points to the main file directory.</td></tr><tr><td>model</td><td>Yes</td><td></td><td>The name of the model in the schema.</td><td>The model name for generating e.g. User, if it is &quot;all&quot;, generate codes for all models in schema directory</td></tr><tr><td>search_key_num</td><td>No</td><td>3</td><td>The number of search fields in the list (default is 3).</td><td>Only string type fields can be automatically generated.</td></tr><tr><td>group</td><td>Yes</td><td></td><td>The name of the group, used to put different logic files in different folders.</td><td>Put different logic files in different folders.</td></tr><tr><td>json_style</td><td>No</td><td>goZero</td><td>The format of the JSON tag, default is camel case for go_zero.</td><td>Underline for go_zero, upper camel case for GoZero.</td></tr><tr><td>import_prefix</td><td>No</td><td></td><td>The path prefix of import</td><td>Import paths&#39; prefix is only used when the service in sub folder, such as core service&#39;s api and rpc</td></tr><tr><td>api_data</td><td>No</td><td>false</td><td>Whether to automatically generate API initialization code, CoreRpc is required</td><td>If true, initialize API data will be auto generated.</td></tr><tr><td>route_prefix</td><td>No</td><td>false</td><td>Whether to generate route prefix.</td><td>must begin with &quot;/&quot;</td></tr><tr><td>overwrite</td><td>No</td><td>false</td><td>Whether to overwrite the generated files.</td><td>Overwrite all generated files when true.</td></tr></tbody></table><div class="hint-container info"><p class="hint-container-title">Info</p><p>The shortcut command <code>make gen-api-ent-logic model={modelName} group={groupName}</code> means to generate the code whose schema is <code>{modelName}</code>, and <code>{groupName}</code> is the group name. Note that the first letter of modelName needs to be capitalized. Be consistent with the struct name in the schema, use <code>make gen-api-ent-logic model=all group=all</code> to generate all CRUD codes.</p></div><blockquote><p>** Run <code>goctls api ent --help</code> see more details **</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ goctls api ent <span class="token parameter variable">-h</span>
Generate CRUD logic files from ent <span class="token function">file</span>

Usage:
  goctls api ent <span class="token punctuation">[</span>flags<span class="token punctuation">]</span>

Flags:
  -p, <span class="token parameter variable">--api_data</span>                  Whether to automatically generate API initialization code, CoreRpc is required
  -a, <span class="token parameter variable">--api_service_name</span> string   The API <span class="token function">service</span> name
  -g, <span class="token parameter variable">--group</span> string              The group name <span class="token keyword">for</span> logic. e.g. user
  -h, <span class="token parameter variable">--help</span>                      <span class="token builtin class-name">help</span> <span class="token keyword">for</span> ent
  -i, <span class="token parameter variable">--i18n</span>                      Whether to use i18n
  -x, <span class="token parameter variable">--import_prefix</span> string      Import paths<span class="token string">&#39; prefix is only used when the service in sub folder, such as core service&#39;</span>s api and rpc
  -j, <span class="token parameter variable">--json_style</span> string         The JSON tag format, default is camelcase <span class="token punctuation">(</span>default <span class="token string">&quot;goZero&quot;</span><span class="token punctuation">)</span>
  -m, <span class="token parameter variable">--model</span> string              The model name <span class="token keyword">for</span> generating, the same as the struct name <span class="token keyword">in</span> schema. e.g. User. If it is  <span class="token string">&quot;all&quot;</span>, generate codes <span class="token keyword">for</span> all models <span class="token keyword">in</span> schema directory
  -o, <span class="token parameter variable">--output</span> string             The output path
  -w, <span class="token parameter variable">--overwrite</span>                 Whether to overwrite the files, it will overwrite all generated files
  -f, <span class="token parameter variable">--route_prefix</span> string       Route prefix,  must begin with <span class="token string">&quot;/&quot;</span>
  -c, <span class="token parameter variable">--schema</span> string             The schema path of the Ent
  -k, <span class="token parameter variable">--search_key_num</span> int        The max number of search keys <span class="token punctuation">(</span>default <span class="token number">3</span><span class="token punctuation">)</span>
  -s, <span class="token parameter variable">--style</span> string              The <span class="token function">file</span> name <span class="token function">format</span> style <span class="token punctuation">(</span>default <span class="token string">&quot;go_zero&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="directory-structure" tabindex="-1"><a class="header-anchor" href="#directory-structure"><span>Directory Structure</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>
example
├── Dockerfile
├── Makefile
├── desc                                   # declaration directory
│ ├── all.api
│ └── base.api
├── ent                                    # Ent directory
│ ├── client.go
│ ├── ent.go
│ ├── enttest
│ │ └── enttest.go
│ ├── example
│ │ ├── example.go
│ │ └── where.go
│ ├── example.go
│ ├── example_create.go
│ ├── example_delete.go
│ ├── example_query.go
│ ├── example_update.go
│ ├── generate.go
│ ├── hook
│ │ └── hook.go
│ ├── migrate
│ │ ├── migrate.go
│ │ └── schema.go
│ ├── mutation.go
│ ├── predicate
│ │ └── predicate.go
│ ├── runtime
│ │ └── runtime.go
│ ├── runtime.go
│ ├── schema                                 # model directory
│ │ └── example.go
│ ├── template
│ │ ├── not_empty_update.tmpl
│ │ └── pagination.tmpl
│ └── tx.go
├── etc                                      # configuration file directory
│ └── example.yaml
├── example.go
├── go.mod
├── go.sum
└── internal
     ├──config
     │ └── config.go
     ├── handler
     │ ├── base
     │ │ └── init_database_handler.go
     │ └── routes.go
     ├── i18n                                 # Internationalization file directory
     │ ├── locale
     │ │ ├── en.json
     │ │ └── zh.json
     │ └── vars.go
     ├── logic
     │ └── base
     │ └── init_database_logic.go
     ├── middleware
     │ └── authority_middleware.go
     ├── svc
     │ └── service_context.go
     ├── types
     │ └── types.go
     └── utils                                # tools directory
         ├── dberrorhandler                   # Ent error handling tool
         │ └── error_handler.go
         └── entx                             # Ent transaction support function
             └── ent_tx.go
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function F(J,H){const s=r("ExternalLinkIcon"),i=r("BiliBili");return d(),c("div",null,[e("div",m,[v,e("p",null,[a("Must know go-zero's API command. "),e("a",h,[a("API Command"),n(s)]),a(),e("a",b,[a("Api Service"),n(s)]),a(),g,k,a(" Refer to the "),e("a",f,[a("Example"),n(s)]),a(" project to generate it again, confirm that the generated file is consistent with the Example project, and the Example project has complete commands.")])]),y,_,x,w,e("div",q,[I,e("p",null,[e("a",P,[a("Tutorial"),n(s)])]),n(i,{bvid:"BV1Lh411E7Xv"})]),T,e("div",C,[A,e("p",null,[e("a",N,[a("Example Code"),n(s)])])]),R,j,e("blockquote",null,[e("p",null,[a("See more detail in simple admin example api URL "),e("a",S,[a("https://github.com/suyuan32/simple-admin-example-api"),n(s)])])]),z,e("div",E,[W,e("p",null,[e("a",U,[a("Tutorial Video"),n(s)])]),n(i,{bvid:"BV1oa4y1A7rT"})]),M,e("div",D,[Y,e("p",null,[a("Single services need to set "),B,a(" when using the "),L,a(" command. "),O,a(" Learn from "),e("a",Z,[a("Single Example"),n(s)])]),G]),V])}const Q=p(u,[["render",F],["__file","api_example.html.vue"]]),ee=JSON.parse(`{"path":"/guide/quick-start/codegen/api_example.html","title":"API Service","lang":"en-US","frontmatter":{"order":1,"title":"API Service","description":"Warning Must know go-zero's API command. API Command Api Service Refer to the Example project to generate it again, confirm that the generated file is consistent with the Exampl...","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://doc.ryansu.tech/zh/guide/quick-start/codegen/api_example.html"}],["meta",{"property":"og:url","content":"https://doc.ryansu.tech/guide/quick-start/codegen/api_example.html"}],["meta",{"property":"og:site_name","content":"Simple Admin"}],["meta",{"property":"og:title","content":"API Service"}],["meta",{"property":"og:description","content":"Warning Must know go-zero's API command. API Command Api Service Refer to the Example project to generate it again, confirm that the generated file is consistent with the Exampl..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://doc.ryansu.tech/assets/example-struct.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-15T10:08:11.000Z"}],["meta",{"property":"article:author","content":"Ryan SU"}],["meta",{"property":"article:modified_time","content":"2024-05-15T10:08:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"API Service\\",\\"image\\":[\\"https://doc.ryansu.tech/assets/example-struct.png\\",\\"https://doc.ryansu.tech/assets/api_gen_struct.png\\"],\\"dateModified\\":\\"2024-05-15T10:08:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ryan SU\\",\\"url\\":\\"https://github.com/suyuan32\\"}]}"]]},"headers":[{"level":2,"title":"Responsibilities of the API service","slug":"responsibilities-of-the-api-service","link":"#responsibilities-of-the-api-service","children":[]},{"level":2,"title":"Create API project","slug":"create-api-project","link":"#create-api-project","children":[{"level":3,"title":"api new parameters","slug":"api-new-parameters","link":"#api-new-parameters","children":[]},{"level":3,"title":"File structure","slug":"file-structure","link":"#file-structure","children":[]}]},{"level":2,"title":"Code generation（based on Proto file）","slug":"code-generation-based-on-proto-file","link":"#code-generation-based-on-proto-file","children":[{"level":3,"title":"api proto parameters","slug":"api-proto-parameters","link":"#api-proto-parameters","children":[]}]},{"level":2,"title":"Code generation (Ent-based single service)","slug":"code-generation-ent-based-single-service","link":"#code-generation-ent-based-single-service","children":[{"level":3,"title":"Directory Structure","slug":"directory-structure","link":"#directory-structure","children":[]}]}],"git":{"createdTime":1671464359000,"updatedTime":1715767691000,"contributors":[{"name":"Ryan SU","email":"yuansu.china.work@gmail.com","commits":23},{"name":"Ryan SU","email":"1137661202@qq.com","commits":14},{"name":"Ryan Su","email":"yuansu.china.work@gmail.com","commits":4}]},"readingTime":{"minutes":6.74,"words":2021},"filePathRelative":"guide/quick-start/codegen/api_example.md","localizedDate":"December 19, 2022","autoDesc":true,"excerpt":"<div class=\\"hint-container warning\\">\\n<p class=\\"hint-container-title\\">Warning</p>\\n<p>Must know go-zero's API command. <a href=\\"https://go-zero.dev/en/docs/tutorials\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">API Command</a> <a href=\\"https://go-zero.dev/en/docs/tutorials/http/server/configuration\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Api Service</a> <br>\\n<br>\\nRefer to the <a href=\\"https://github.com/suyuan32/simple-admin-example-api\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Example</a> project to generate it again, confirm that the generated file is consistent with the Example project, and the Example project has complete commands.</p>\\n</div>"}`);export{Q as comp,ee as data};
