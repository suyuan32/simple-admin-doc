import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as e,o as u,c as l,a as n,f as s,b as a,w as k,e as p}from"./app-CK-zxo63.js";const r={},d=n("h2",{id:"ent-快速入门",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#ent-快速入门"},[n("span",null,"Ent 快速入门")])],-1),v={class:"hint-container info"},m=n("p",{class:"hint-container-title"},"相关信息",-1),b={href:"https://entgo.io/zh/docs/getting-started/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/ent/ent/blob/master/examples/README.md",target:"_blank",rel:"noopener noreferrer"},f={href:"https://suyuan32.github.io/ent-chinese-doc/#/zh-cn/getting-started",target:"_blank",rel:"noopener noreferrer"},h={href:"https://github.com/suyuan32/simple-admin-example-ent",target:"_blank",rel:"noopener noreferrer"},q=p(`<h2 id="实战" tabindex="-1"><a class="header-anchor" href="#实战"><span>实战</span></a></h2><blockquote><p>安装</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>go get <span class="token parameter variable">-d</span> entgo.io/ent/cmd/ent
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>初始化代码</p></blockquote><p>在 rpc 执行</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 创建 User 模板</span>
go run <span class="token parameter variable">-mod</span><span class="token operator">=</span>mod entgo.io/ent/cmd/ent init User

<span class="token comment"># 生成代码，使用 template ， simple admin core 添加了 Page 模板实现简便的分页查询</span>
go run <span class="token parameter variable">-mod</span><span class="token operator">=</span>mod entgo.io/ent/cmd/ent generate <span class="token parameter variable">--template</span> <span class="token assign-left variable">glob</span><span class="token operator">=</span><span class="token string">&quot;./ent/template/*.tmpl&quot;</span> ./ent/schema
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>定义数据模型</p></blockquote><p>在 rpc/ent 中，一般只需要关注 schema 文件夹，里面定义了模型文件，其他文件夹和文件基本都是自动生成的, mixin 用于共用字段, 例如</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">package</span> schema

<span class="token keyword">import</span> <span class="token punctuation">(</span>
 <span class="token string">&quot;entgo.io/ent&quot;</span>
 <span class="token string">&quot;entgo.io/ent/dialect/entsql&quot;</span>
 <span class="token string">&quot;entgo.io/ent/schema&quot;</span>
 <span class="token string">&quot;entgo.io/ent/schema/edge&quot;</span>
 <span class="token string">&quot;entgo.io/ent/schema/field&quot;</span>

 <span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/ent/schema/mixins&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> Role <span class="token keyword">struct</span> <span class="token punctuation">{</span>
 ent<span class="token punctuation">.</span>Schema
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>Role<span class="token punctuation">)</span> <span class="token function">Fields</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Field <span class="token punctuation">{</span>
 <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Field<span class="token punctuation">{</span>
  field<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;role name | 角色名&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token comment">// field 定义字段， string 声明类型, comment 声明注释， default 声明默认值, unique 声明唯一</span>
  field<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Unique</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;role value for permission control in front end | 角色值，用于前端权限控制&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  field<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;default_router&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token string">&quot;dashboard&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;default menu : dashboard | 默认登录页面&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  field<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;remark&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;remark | 备注&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  field<span class="token punctuation">.</span><span class="token function">Uint32</span><span class="token punctuation">(</span><span class="token string">&quot;order_no&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;order number | 排序编号&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>Role<span class="token punctuation">)</span> <span class="token function">Mixin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Mixin <span class="token punctuation">{</span>
 <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Mixin<span class="token punctuation">{</span>
  <span class="token comment">// 嵌入公用字段</span>
  mixins<span class="token punctuation">.</span>BaseMixin<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  mixins<span class="token punctuation">.</span>StatusMixin<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>Role<span class="token punctuation">)</span> <span class="token function">Edges</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Edge <span class="token punctuation">{</span>
 <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Edge<span class="token punctuation">{</span>
  <span class="token comment">// 声明关系, ent 的关系用 edge 表示</span>
  edge<span class="token punctuation">.</span><span class="token function">To</span><span class="token punctuation">(</span><span class="token string">&quot;menus&quot;</span><span class="token punctuation">,</span> Menu<span class="token punctuation">.</span>Type<span class="token punctuation">)</span><span class="token punctuation">,</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>Role<span class="token punctuation">)</span> <span class="token function">Annotations</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>schema<span class="token punctuation">.</span>Annotation <span class="token punctuation">{</span>
 <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>schema<span class="token punctuation">.</span>Annotation<span class="token punctuation">{</span>
  entsql<span class="token punctuation">.</span>Annotation<span class="token punctuation">{</span>Table<span class="token punctuation">:</span> <span class="token string">&quot;sys_roles&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="mixin-介绍" tabindex="-1"><a class="header-anchor" href="#mixin-介绍"><span>Mixin 介绍</span></a></h3><p>目前项目提供了多种 Mixin 位于 <code>&quot;github.com/suyuan32/simple-admin-common/orm/ent/mixins&quot;</code></p><ul><li>id: 提供自增整数 id, created_at, updated_at</li><li>uuid: 提供 uuid 类型的 id 作为主键, created_at, updated_at</li><li>status: 提供状态字段 status</li><li>sort: 提供排序字段</li></ul><h4 id="uuidx-提供两个方法用于转换-uuid" tabindex="-1"><a class="header-anchor" href="#uuidx-提供两个方法用于转换-uuid"><span>uuidx 提供两个方法用于转换 uuid</span></a></h4><ul><li>uuidx.ParseUUIDSlice 用于将 uuid 的 string 数组转化为 ent 的 uuid 数组类型</li><li>uuidx.ParseUUIDString 用于将 uuid 的 string 转化为 uuid 类型</li></ul>`,14),x={id:"软删除可查看-soft-delete-公众号",tabindex:"-1"},y={class:"header-anchor",href:"#软删除可查看-soft-delete-公众号"},w={href:"https://entgo.io/docs/interceptors/#soft-delete",target:"_blank",rel:"noopener noreferrer"},_={href:"https://mp.weixin.qq.com/s/MxHfmuWv-_epkQXEZrnLsg",target:"_blank",rel:"noopener noreferrer"},C=p(`<h3 id="初始化并添加全局引用" tabindex="-1"><a class="header-anchor" href="#初始化并添加全局引用"><span>初始化并添加全局引用</span></a></h3><p>参考 rpc/internal/svc/service_context.go</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">package</span> svc

<span class="token keyword">import</span> <span class="token punctuation">(</span>
 <span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/ent&quot;</span>
 <span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/internal/config&quot;</span>

 <span class="token string">&quot;github.com/zeromicro/go-zero/core/logx&quot;</span>
 <span class="token string">&quot;github.com/zeromicro/go-zero/core/stores/redis&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> ServiceContext <span class="token keyword">struct</span> <span class="token punctuation">{</span>
 Config config<span class="token punctuation">.</span>Config
 DB     <span class="token operator">*</span>ent<span class="token punctuation">.</span>Client
 Redis  <span class="token operator">*</span>redis<span class="token punctuation">.</span>Redis
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">NewServiceContext</span><span class="token punctuation">(</span>c config<span class="token punctuation">.</span>Config<span class="token punctuation">)</span> <span class="token operator">*</span>ServiceContext <span class="token punctuation">{</span>
 db <span class="token operator">:=</span> ent<span class="token punctuation">.</span><span class="token function">NewClient</span><span class="token punctuation">(</span>
  ent<span class="token punctuation">.</span><span class="token function">Log</span><span class="token punctuation">(</span>logx<span class="token punctuation">.</span>Info<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// logger</span>
  ent<span class="token punctuation">.</span><span class="token function">Driver</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>DatabaseConf<span class="token punctuation">.</span><span class="token function">GetCacheDriver</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>RedisConf<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  ent<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// debug mode</span>
 <span class="token punctuation">)</span>

 <span class="token comment">// initialize redis</span>
 rds <span class="token operator">:=</span> c<span class="token punctuation">.</span>RedisConf<span class="token punctuation">.</span><span class="token function">NewRedis</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
 <span class="token keyword">if</span> <span class="token operator">!</span>rds<span class="token punctuation">.</span><span class="token function">Ping</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  logx<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Initialize redis failed&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token boolean">nil</span>
 <span class="token punctuation">}</span>
 logx<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token string">&quot;Initialize redis connection successfully&quot;</span><span class="token punctuation">)</span>

 <span class="token keyword">return</span> <span class="token operator">&amp;</span>ServiceContext<span class="token punctuation">{</span>
  Config<span class="token punctuation">:</span> c<span class="token punctuation">,</span>
  DB<span class="token punctuation">:</span>     db<span class="token punctuation">,</span>
  Redis<span class="token punctuation">:</span>  rds<span class="token punctuation">,</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ent-驱动" tabindex="-1"><a class="header-anchor" href="#ent-驱动"><span>Ent 驱动</span></a></h3><div class="hint-container warning"><p class="hint-container-title">注意</p><p>ent driver 有两种驱动，带缓存和不带缓存</p></div><blockquote><p>带缓存 （使用 context 控制缓存）</p></blockquote><div class="hint-container warning"><p class="hint-container-title">注意</p><p>由于 entcache 有 bug, 我们暂时将缓存驱动删除了，改为使用缓存模板</p></div><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>db <span class="token operator">:=</span> ent<span class="token punctuation">.</span><span class="token function">NewClient</span><span class="token punctuation">(</span>
    ent<span class="token punctuation">.</span><span class="token function">Log</span><span class="token punctuation">(</span>logx<span class="token punctuation">.</span>Info<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// logger</span>
    ent<span class="token punctuation">.</span><span class="token function">Driver</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>DatabaseConf<span class="token punctuation">.</span><span class="token function">NewCacheDriver</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>RedisConf<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    ent<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// debug mode</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>控制缓存非常简单，默认是有缓存的，有以下几种方法控制缓存：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token comment">// 对于任何请求都是通过 l.ctx 控制缓存，下面是默认启用缓存</span>
result<span class="token punctuation">,</span> err <span class="token operator">:=</span> l<span class="token punctuation">.</span>svcCtx<span class="token punctuation">.</span>DB<span class="token punctuation">.</span>API<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>ctx<span class="token punctuation">,</span> in<span class="token punctuation">.</span>Id<span class="token punctuation">)</span>

<span class="token comment">// 下面是跳过缓存</span>
result<span class="token punctuation">,</span> err <span class="token operator">:=</span> l<span class="token punctuation">.</span>svcCtx<span class="token punctuation">.</span>DB<span class="token punctuation">.</span>API<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>entcache<span class="token punctuation">.</span><span class="token function">Skip</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>ctx<span class="token punctuation">)</span><span class="token punctuation">,</span> in<span class="token punctuation">.</span>Id<span class="token punctuation">)</span>

<span class="token comment">// 下面是跳过并删除缓存，与skip不同， skip 只是单行跳过缓存，实际上缓存还在，其他语句还是可以获得他的缓存的</span>
result<span class="token punctuation">,</span> err <span class="token operator">:=</span> l<span class="token punctuation">.</span>svcCtx<span class="token punctuation">.</span>DB<span class="token punctuation">.</span>API<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>entcache<span class="token punctuation">.</span><span class="token function">Evict</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>ctx<span class="token punctuation">)</span><span class="token punctuation">,</span> in<span class="token punctuation">.</span>Id<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><blockquote><p>不带缓存 (数据立即更新)</p></blockquote><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>db <span class="token operator">:=</span> ent<span class="token punctuation">.</span><span class="token function">NewClient</span><span class="token punctuation">(</span>
    ent<span class="token punctuation">.</span><span class="token function">Log</span><span class="token punctuation">(</span>logx<span class="token punctuation">.</span>Info<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// logger</span>
    ent<span class="token punctuation">.</span><span class="token function">Driver</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>DatabaseConf<span class="token punctuation">.</span><span class="token function">NewNoCacheDriver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    ent<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// debug mode</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),S={class:"hint-container info"},I=n("p",{class:"hint-container-title"},"相关信息",-1),A={href:"https://github.com/ariga/entcache",target:"_blank",rel:"noopener noreferrer"},D=p(`<h3 id="使用效果" tabindex="-1"><a class="header-anchor" href="#使用效果"><span>使用效果</span></a></h3><p>新建 API <code>rpc/internal/logic/api/create_api_logic.go</code></p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">package</span> api

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;context&quot;</span>

	<span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/internal/svc&quot;</span>
	<span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/internal/utils/errorhandler&quot;</span>
	<span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/types/core&quot;</span>

	<span class="token string">&quot;github.com/zeromicro/go-zero/core/logx&quot;</span>

	<span class="token string">&quot;github.com/suyuan32/simple-admin-common/i18n&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> CreateApiLogic <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	ctx    context<span class="token punctuation">.</span>Context
	svcCtx <span class="token operator">*</span>svc<span class="token punctuation">.</span>ServiceContext
	logx<span class="token punctuation">.</span>Logger
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">NewCreateApiLogic</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> svcCtx <span class="token operator">*</span>svc<span class="token punctuation">.</span>ServiceContext<span class="token punctuation">)</span> <span class="token operator">*</span>CreateApiLogic <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token operator">&amp;</span>CreateApiLogic<span class="token punctuation">{</span>
		ctx<span class="token punctuation">:</span>    ctx<span class="token punctuation">,</span>
		svcCtx<span class="token punctuation">:</span> svcCtx<span class="token punctuation">,</span>
		Logger<span class="token punctuation">:</span> logx<span class="token punctuation">.</span><span class="token function">WithContext</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>l <span class="token operator">*</span>CreateApiLogic<span class="token punctuation">)</span> <span class="token function">CreateApi</span><span class="token punctuation">(</span>in <span class="token operator">*</span>core<span class="token punctuation">.</span>ApiInfo<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>core<span class="token punctuation">.</span>BaseIDResp<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	result<span class="token punctuation">,</span> err <span class="token operator">:=</span> l<span class="token punctuation">.</span>svcCtx<span class="token punctuation">.</span>DB<span class="token punctuation">.</span>API<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">SetPath</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Path<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">SetDescription</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Description<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">SetAPIGroup</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>ApiGroup<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">SetMethod</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Method<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Save</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>ctx<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> errorhandler<span class="token punctuation">.</span><span class="token function">DefaultEntError</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>Logger<span class="token punctuation">,</span> err<span class="token punctuation">,</span> in<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> <span class="token operator">&amp;</span>core<span class="token punctuation">.</span>BaseIDResp<span class="token punctuation">{</span>Id<span class="token punctuation">:</span> result<span class="token punctuation">.</span>ID<span class="token punctuation">,</span> Msg<span class="token punctuation">:</span> i18n<span class="token punctuation">.</span>CreateSuccess<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查询数据" tabindex="-1"><a class="header-anchor" href="#查询数据"><span>查询数据</span></a></h3>`,4),E={href:"http://ent.ryansu.tech/#/zh-cn/predicates",target:"_blank",rel:"noopener noreferrer"},N=p(`<div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">package</span> api

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;context&quot;</span>

	<span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/ent/predicate&quot;</span>

	<span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/ent/api&quot;</span>

	<span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/internal/svc&quot;</span>
	<span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/internal/utils/errorhandler&quot;</span>
	<span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/types/core&quot;</span>

	<span class="token string">&quot;github.com/zeromicro/go-zero/core/logx&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> GetApiListLogic <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	ctx    context<span class="token punctuation">.</span>Context
	svcCtx <span class="token operator">*</span>svc<span class="token punctuation">.</span>ServiceContext
	logx<span class="token punctuation">.</span>Logger
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">NewGetApiListLogic</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> svcCtx <span class="token operator">*</span>svc<span class="token punctuation">.</span>ServiceContext<span class="token punctuation">)</span> <span class="token operator">*</span>GetApiListLogic <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token operator">&amp;</span>GetApiListLogic<span class="token punctuation">{</span>
		ctx<span class="token punctuation">:</span>    ctx<span class="token punctuation">,</span>
		svcCtx<span class="token punctuation">:</span> svcCtx<span class="token punctuation">,</span>
		Logger<span class="token punctuation">:</span> logx<span class="token punctuation">.</span><span class="token function">WithContext</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>l <span class="token operator">*</span>GetApiListLogic<span class="token punctuation">)</span> <span class="token function">GetApiList</span><span class="token punctuation">(</span>in <span class="token operator">*</span>core<span class="token punctuation">.</span>ApiListReq<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>core<span class="token punctuation">.</span>ApiListResp<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> predicates <span class="token punctuation">[</span><span class="token punctuation">]</span>predicate<span class="token punctuation">.</span>API
	<span class="token keyword">if</span> in<span class="token punctuation">.</span>Path <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">{</span>
		predicates <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>predicates<span class="token punctuation">,</span> api<span class="token punctuation">.</span><span class="token function">PathContains</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Path<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> in<span class="token punctuation">.</span>Description <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">{</span>
		predicates <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>predicates<span class="token punctuation">,</span> api<span class="token punctuation">.</span><span class="token function">DescriptionContains</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Description<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> in<span class="token punctuation">.</span>ApiGroup <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">{</span>
		predicates <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>predicates<span class="token punctuation">,</span> api<span class="token punctuation">.</span><span class="token function">APIGroupContains</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>ApiGroup<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> in<span class="token punctuation">.</span>Method <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">{</span>
		predicates <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>predicates<span class="token punctuation">,</span> api<span class="token punctuation">.</span><span class="token function">Method</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Method<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	result<span class="token punctuation">,</span> err <span class="token operator">:=</span> l<span class="token punctuation">.</span>svcCtx<span class="token punctuation">.</span>DB<span class="token punctuation">.</span>API<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>predicates<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Page</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>ctx<span class="token punctuation">,</span> in<span class="token punctuation">.</span>Page<span class="token punctuation">,</span> in<span class="token punctuation">.</span>PageSize<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> errorhandler<span class="token punctuation">.</span><span class="token function">DefaultEntError</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>Logger<span class="token punctuation">,</span> err<span class="token punctuation">,</span> in<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	resp <span class="token operator">:=</span> <span class="token operator">&amp;</span>core<span class="token punctuation">.</span>ApiListResp<span class="token punctuation">{</span><span class="token punctuation">}</span>
	resp<span class="token punctuation">.</span>Total <span class="token operator">=</span> result<span class="token punctuation">.</span>PageDetails<span class="token punctuation">.</span>Total

	<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> result<span class="token punctuation">.</span>List <span class="token punctuation">{</span>
		resp<span class="token punctuation">.</span>Data <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>Data<span class="token punctuation">,</span> <span class="token operator">&amp;</span>core<span class="token punctuation">.</span>ApiInfo<span class="token punctuation">{</span>
			Id<span class="token punctuation">:</span>          v<span class="token punctuation">.</span>ID<span class="token punctuation">,</span>
			CreatedAt<span class="token punctuation">:</span>   v<span class="token punctuation">.</span>CreatedAt<span class="token punctuation">.</span><span class="token function">UnixMilli</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
			Path<span class="token punctuation">:</span>        v<span class="token punctuation">.</span>Path<span class="token punctuation">,</span>
			Description<span class="token punctuation">:</span> v<span class="token punctuation">.</span>Description<span class="token punctuation">,</span>
			ApiGroup<span class="token punctuation">:</span>    v<span class="token punctuation">.</span>APIGroup<span class="token punctuation">,</span>
			Method<span class="token punctuation">:</span>      v<span class="token punctuation">.</span>Method<span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> resp<span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="执行-raw-sql" tabindex="-1"><a class="header-anchor" href="#执行-raw-sql"><span>执行 raw sql</span></a></h3><p>若要支持纯 sql ，需要修改 makefile 生成代码， 添加 --feature sql/execquery</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>go run <span class="token parameter variable">-mod</span><span class="token operator">=</span>mod entgo.io/ent/cmd/ent generate <span class="token parameter variable">--template</span> <span class="token assign-left variable">glob</span><span class="token operator">=</span><span class="token string">&quot;./rpc/ent/template/*.tmpl&quot;</span> ./rpc/ent/schema <span class="token parameter variable">--feature</span> sql/execquery
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>即可通过 client.QueryContext 调用</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>students<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">QueryContext</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;select * from student&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="项目默认添加了-page-模板" tabindex="-1"><a class="header-anchor" href="#项目默认添加了-page-模板"><span>项目默认添加了 page 模板</span></a></h3><p>位于 ent/template/pagination.tmpl，生成代码时通过 --template glob=&quot;./rpc/ent/template/*.tmpl&quot; 导入, 提供简便的分页功能, 如果你的其他项目也想要这个分页功能需要将 template 文件夹复制到新项目的 ent 文件夹中。</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>apis<span class="token punctuation">,</span> err <span class="token operator">:=</span> l<span class="token punctuation">.</span>svcCtx<span class="token punctuation">.</span>DB<span class="token punctuation">.</span>API<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>predicates<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Page</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>ctx<span class="token punctuation">,</span> in<span class="token punctuation">.</span>Page<span class="token punctuation">,</span> in<span class="token punctuation">.</span>PageSize<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>注意： 排序需要放到 Page 中, 同时支持 Filter 对 query 进行过滤</p></blockquote><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>apis<span class="token punctuation">,</span> err <span class="token operator">:=</span> l<span class="token punctuation">.</span>svcCtx<span class="token punctuation">.</span>DB<span class="token punctuation">.</span>API<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>predicates<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Page</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>ctx<span class="token punctuation">,</span> in<span class="token punctuation">.</span>Page<span class="token punctuation">,</span> in<span class="token punctuation">.</span>PageSize<span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>pager <span class="token operator">*</span>ent<span class="token punctuation">.</span>APIPager<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    pager<span class="token punctuation">.</span>Order <span class="token operator">=</span> ent<span class="token punctuation">.</span><span class="token function">Asc</span><span class="token punctuation">(</span>api<span class="token punctuation">.</span>FieldID<span class="token punctuation">)</span>
    pager<span class="token punctuation">.</span>Filter <span class="token operator">=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>query <span class="token operator">*</span>ent<span class="token punctuation">.</span>APIQuery<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>ent<span class="token punctuation">.</span>APIQuery<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> query<span class="token punctuation">,</span> <span class="token boolean">nil</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>默认使用 ID 排序，可以不用设置</p><blockquote><p>Set Not Nil 模板</p></blockquote><p>用于部分更新数据，例如：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>l <span class="token operator">*</span>UpdateDepartmentLogic<span class="token punctuation">)</span> <span class="token function">UpdateDepartment</span><span class="token punctuation">(</span>in <span class="token operator">*</span>core<span class="token punctuation">.</span>DepartmentInfo<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>core<span class="token punctuation">.</span>BaseResp<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	err <span class="token operator">:=</span> l<span class="token punctuation">.</span>svcCtx<span class="token punctuation">.</span>DB<span class="token punctuation">.</span>Department<span class="token punctuation">.</span><span class="token function">UpdateOneID</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">SetNotNilStatus</span><span class="token punctuation">(</span><span class="token function">uint8</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Status<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">SetNotNilSort</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Sort<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">SetNotNilName</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Name<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">SetNotNilAncestors</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Ancestors<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">SetNotNilLeader</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Leader<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">SetNotNilPhone</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Phone<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">SetNotNilEmail</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Email<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">SetNotNilRemark</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Remark<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">SetNotNilParentID</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>ParentId<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Exec</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>ctx<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">switch</span> <span class="token punctuation">{</span>
		<span class="token keyword">case</span> ent<span class="token punctuation">.</span><span class="token function">IsNotFound</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">:</span>
			logx<span class="token punctuation">.</span><span class="token function">Errorw</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> logx<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span><span class="token string">&quot;detail&quot;</span><span class="token punctuation">,</span> in<span class="token punctuation">)</span><span class="token punctuation">)</span>
			<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> statuserr<span class="token punctuation">.</span><span class="token function">NewInvalidArgumentError</span><span class="token punctuation">(</span>i18n<span class="token punctuation">.</span>TargetNotFound<span class="token punctuation">)</span>
		<span class="token keyword">case</span> ent<span class="token punctuation">.</span><span class="token function">IsConstraintError</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">:</span>
			logx<span class="token punctuation">.</span><span class="token function">Errorw</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> logx<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span><span class="token string">&quot;detail&quot;</span><span class="token punctuation">,</span> in<span class="token punctuation">)</span><span class="token punctuation">)</span>
			<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> statuserr<span class="token punctuation">.</span><span class="token function">NewInvalidArgumentError</span><span class="token punctuation">(</span>i18n<span class="token punctuation">.</span>UpdateFailed<span class="token punctuation">)</span>
		<span class="token keyword">default</span><span class="token punctuation">:</span>
			logx<span class="token punctuation">.</span><span class="token function">Errorw</span><span class="token punctuation">(</span>logmsg<span class="token punctuation">.</span>DatabaseError<span class="token punctuation">,</span> logx<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span><span class="token string">&quot;detail&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
			<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> statuserr<span class="token punctuation">.</span><span class="token function">NewInternalError</span><span class="token punctuation">(</span>i18n<span class="token punctuation">.</span>DatabaseError<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> <span class="token operator">&amp;</span>core<span class="token punctuation">.</span>BaseResp<span class="token punctuation">{</span>Msg<span class="token punctuation">:</span> i18n<span class="token punctuation">.</span>UpdateSuccess<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>SetNotNil 用于更新数据，若指针为 nil 则不更新</p></div><blockquote><p>常见结果返回函数，用于 query 末尾</p></blockquote><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token comment">// .ExecX() 只执行，不返回错误和数据</span>
client<span class="token punctuation">.</span>Student<span class="token punctuation">.</span><span class="token function">UpdateOneID</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SetName</span><span class="token punctuation">(</span><span class="token string">&quot;Jack&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ExecX</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// .Exec() 执行并返回错误</span>
err <span class="token operator">:=</span> client<span class="token punctuation">.</span>Student<span class="token punctuation">.</span><span class="token function">UpdateOneID</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SetName</span><span class="token punctuation">(</span><span class="token string">&quot;Jack&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Exec</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// .Save() 执行并返回结果数据和错误， 例如下面 s 保存 student 对象</span>
s<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span>Student<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
<span class="token function">SetName</span><span class="token punctuation">(</span><span class="token string">&quot;Jack&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
<span class="token function">SetAddress</span><span class="token punctuation">(</span><span class="token string">&quot;Road&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
<span class="token function">SetAge</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
<span class="token function">Save</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// .SaveX() 执行并返回结果数据， 例如下面 s 保存 student 对象</span>
s <span class="token operator">:=</span> client<span class="token punctuation">.</span>Student<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
<span class="token function">SetName</span><span class="token punctuation">(</span><span class="token string">&quot;Jack&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
<span class="token function">SetAddress</span><span class="token punctuation">(</span><span class="token string">&quot;Road&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
<span class="token function">SetAge</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
<span class="token function">SaveX</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>cache 缓存模板</p></blockquote><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>l<span class="token punctuation">.</span>svcCtx<span class="token punctuation">.</span>DB<span class="token punctuation">.</span>User<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetCache</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>ctx<span class="token punctuation">,</span> l<span class="token punctuation">.</span>svcCtx<span class="token punctuation">.</span>Redis<span class="token punctuation">,</span> user<span class="token punctuation">.</span><span class="token function">IDEQ</span><span class="token punctuation">(</span><span class="token operator">*</span>req<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">*</span>req<span class="token punctuation">.</span>Id <span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token number">3</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="事务" tabindex="-1"><a class="header-anchor" href="#事务"><span>事务</span></a></h3><p>项目提供 WithTx 方法可以在本地使用数据库事务, 以更新用户信息为例:</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>
<span class="token keyword">func</span> <span class="token punctuation">(</span>l <span class="token operator">*</span>UpdateUserLogic<span class="token punctuation">)</span> <span class="token function">UpdateUser</span><span class="token punctuation">(</span>in <span class="token operator">*</span>core<span class="token punctuation">.</span>UserInfo<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>core<span class="token punctuation">.</span>BaseResp<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	err <span class="token operator">:=</span> entx<span class="token punctuation">.</span><span class="token function">WithTx</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>ctx<span class="token punctuation">,</span> l<span class="token punctuation">.</span>svcCtx<span class="token punctuation">.</span>DB<span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>tx <span class="token operator">*</span>ent<span class="token punctuation">.</span>Tx<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
		updateQuery <span class="token operator">:=</span> tx<span class="token punctuation">.</span>User<span class="token punctuation">.</span><span class="token function">UpdateOneID</span><span class="token punctuation">(</span>uuidx<span class="token punctuation">.</span><span class="token function">ParseUUIDString</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
			<span class="token function">SetNotNilUsername</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Username<span class="token punctuation">)</span><span class="token punctuation">.</span>
			<span class="token function">SetNotNilNickname</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Nickname<span class="token punctuation">)</span><span class="token punctuation">.</span>
			<span class="token function">SetNotNilEmail</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Email<span class="token punctuation">)</span><span class="token punctuation">.</span>
			<span class="token function">SetNotNilMobile</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Mobile<span class="token punctuation">)</span><span class="token punctuation">.</span>
			<span class="token function">SetNotNilAvatar</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Avatar<span class="token punctuation">)</span><span class="token punctuation">.</span>
			<span class="token function">SetNotNilHomePath</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>HomePath<span class="token punctuation">)</span><span class="token punctuation">.</span>
			<span class="token function">SetNotNilDescription</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Description<span class="token punctuation">)</span><span class="token punctuation">.</span>
			<span class="token function">SetNotNilDepartmentID</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>DepartmentId<span class="token punctuation">)</span>

		<span class="token keyword">if</span> in<span class="token punctuation">.</span>Password <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			updateQuery <span class="token operator">=</span> updateQuery<span class="token punctuation">.</span><span class="token function">SetNotNilPassword</span><span class="token punctuation">(</span>utils<span class="token punctuation">.</span><span class="token function">BcryptEncrypt</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Password<span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">if</span> in<span class="token punctuation">.</span>RoleIds <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			err <span class="token operator">:=</span> tx<span class="token punctuation">.</span>DB<span class="token punctuation">.</span>User<span class="token punctuation">.</span><span class="token function">UpdateOneID</span><span class="token punctuation">(</span>uuidx<span class="token punctuation">.</span><span class="token function">ParseUUIDString</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClearRoles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Exec</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>ctx<span class="token punctuation">)</span>
			<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
				<span class="token keyword">return</span> err
			<span class="token punctuation">}</span>

			updateQuery <span class="token operator">=</span> updateQuery<span class="token punctuation">.</span><span class="token function">AddRoleIDs</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>RoleIds<span class="token operator">...</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">if</span> in<span class="token punctuation">.</span>PositionIds <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			err <span class="token operator">:=</span> tx<span class="token punctuation">.</span>User<span class="token punctuation">.</span><span class="token function">UpdateOneID</span><span class="token punctuation">(</span>uuidx<span class="token punctuation">.</span><span class="token function">ParseUUIDString</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClearPositions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Exec</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>ctx<span class="token punctuation">)</span>
			<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
				<span class="token keyword">return</span> err
			<span class="token punctuation">}</span>

			updateQuery <span class="token operator">=</span> updateQuery<span class="token punctuation">.</span><span class="token function">AddPositionIDs</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>PositionIds<span class="token operator">...</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">return</span> updateQuery<span class="token punctuation">.</span><span class="token function">Exec</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>ctx<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> errorhandler<span class="token punctuation">.</span><span class="token function">DefaultEntError</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> in<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> <span class="token operator">&amp;</span>core<span class="token punctuation">.</span>BaseResp<span class="token punctuation">{</span>
		Msg<span class="token punctuation">:</span> i18n<span class="token punctuation">.</span>Success<span class="token punctuation">,</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,23),P={id:"ent-schema-导入工具",tabindex:"-1"},R={class:"header-anchor",href:"#ent-schema-导入工具"},B=p(`<h3 id="常见问题" tabindex="-1"><a class="header-anchor" href="#常见问题"><span>常见问题</span></a></h3><blockquote><p>如何生成数据库注释？</p></blockquote><p>只需要在对应字段后面添加 <code>.Annotations(entsql.WithComments(true))</code>即可</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">package</span> schema

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;entgo.io/ent&quot;</span>
	<span class="token string">&quot;entgo.io/ent/dialect/entsql&quot;</span>
	<span class="token string">&quot;entgo.io/ent/schema&quot;</span>
	<span class="token string">&quot;entgo.io/ent/schema/field&quot;</span>
	<span class="token string">&quot;entgo.io/ent/schema/index&quot;</span>
	<span class="token string">&quot;github.com/suyuan32/simple-admin-common/orm/ent/mixins&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> API <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	ent<span class="token punctuation">.</span>Schema
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>API<span class="token punctuation">)</span> <span class="token function">Fields</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Field <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Field<span class="token punctuation">{</span>
		field<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;API path | API 路径&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Annotations</span><span class="token punctuation">(</span>entsql<span class="token punctuation">.</span><span class="token function">WithComments</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		field<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;description&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;API description | API 描述&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Annotations</span><span class="token punctuation">(</span>entsql<span class="token punctuation">.</span><span class="token function">WithComments</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		field<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;api_group&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;API group | API 分组&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Annotations</span><span class="token punctuation">(</span>entsql<span class="token punctuation">.</span><span class="token function">WithComments</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		field<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;method&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;HTTP method | HTTP 请求类型&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Annotations</span><span class="token punctuation">(</span>entsql<span class="token punctuation">.</span><span class="token function">WithComments</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>API<span class="token punctuation">)</span> <span class="token function">Mixin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Mixin <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Mixin<span class="token punctuation">{</span>
		mixins<span class="token punctuation">.</span>BaseIDMixin<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>API<span class="token punctuation">)</span> <span class="token function">Edges</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Edge <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>API<span class="token punctuation">)</span> <span class="token function">Indexes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Index <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Index<span class="token punctuation">{</span>
		index<span class="token punctuation">.</span><span class="token function">Fields</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;method&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
			<span class="token function">Unique</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>API<span class="token punctuation">)</span> <span class="token function">Annotations</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>schema<span class="token punctuation">.</span>Annotation <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>schema<span class="token punctuation">.</span>Annotation<span class="token punctuation">{</span>
		entsql<span class="token punctuation">.</span>Annotation<span class="token punctuation">{</span>Table<span class="token punctuation">:</span> <span class="token string">&quot;sys_apis&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>不要在 Time 类型使用 <code>Nillable()</code></p></blockquote>`,5);function U(L,M){const t=e("ExternalLinkIcon"),o=e("BiliBili"),c=e("RouteLink");return u(),l("div",null,[d,n("div",v,[m,n("p",null,[n("a",b,[s("官方文档"),a(t)]),s(),n("a",g,[s("官方例子"),a(t)]),s(),n("a",f,[s("schema 中文文档(推荐)"),a(t)])]),n("p",null,[n("a",h,[s("教学项目"),a(t)]),s(" 帮助你快速提升")]),a(o,{bvid:"BV17C4y157WL"})]),q,n("h3",x,[n("a",y,[n("span",null,[s("软删除可查看 "),n("a",w,[s("Soft Delete"),a(t)]),s(),n("a",_,[s("公众号"),a(t)])])])]),C,n("div",S,[I,n("p",null,[n("a",A,[s("Ent cache 文档"),a(t)])])]),D,n("p",null,[s("查看文档 "),n("a",E,[s("断言"),a(t)])]),N,n("h3",P,[n("a",R,[n("span",null,[a(c,{to:"/zh/guide/quick-start/extra/3-ent_template.html#extra-ent-import-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BB%93%E6%9E%84%E5%AF%BC%E5%87%BA%E5%88%B0-schema"},{default:k(()=>[s("Ent schema 导入工具")]),_:1})])])]),B])}const G=i(r,[["render",U],["__file","ent.html.vue"]]),Q=JSON.parse('{"path":"/zh/guide/feature/ORM/ent.html","title":"Ent","lang":"zh-CN","frontmatter":{"order":1,"title":"Ent","description":"Ent 快速入门 相关信息 官方文档 官方例子 schema 中文文档(推荐) 教学项目 帮助你快速提升 实战 安装 初始化代码 在 rpc 执行 定义数据模型 在 rpc/ent 中，一般只需要关注 schema 文件夹，里面定义了模型文件，其他文件夹和文件基本都是自动生成的, mixin 用于共用字段, 例如 Mixin 介绍 目前项目提供了多种 ...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://doc.ryansu.tech/guide/feature/ORM/ent.html"}],["meta",{"property":"og:url","content":"https://doc.ryansu.tech/zh/guide/feature/ORM/ent.html"}],["meta",{"property":"og:site_name","content":"Simple Admin"}],["meta",{"property":"og:title","content":"Ent"}],["meta",{"property":"og:description","content":"Ent 快速入门 相关信息 官方文档 官方例子 schema 中文文档(推荐) 教学项目 帮助你快速提升 实战 安装 初始化代码 在 rpc 执行 定义数据模型 在 rpc/ent 中，一般只需要关注 schema 文件夹，里面定义了模型文件，其他文件夹和文件基本都是自动生成的, mixin 用于共用字段, 例如 Mixin 介绍 目前项目提供了多种 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-05-15T10:08:11.000Z"}],["meta",{"property":"article:author","content":"Ryan SU"}],["meta",{"property":"article:modified_time","content":"2024-05-15T10:08:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Ent\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-15T10:08:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ryan SU\\",\\"url\\":\\"https://github.com/suyuan32\\"}]}"]]},"headers":[{"level":2,"title":"Ent 快速入门","slug":"ent-快速入门","link":"#ent-快速入门","children":[]},{"level":2,"title":"实战","slug":"实战","link":"#实战","children":[{"level":3,"title":"Mixin 介绍","slug":"mixin-介绍","link":"#mixin-介绍","children":[]},{"level":3,"title":"软删除可查看 Soft Delete 公众号","slug":"软删除可查看-soft-delete-公众号","link":"#软删除可查看-soft-delete-公众号","children":[]},{"level":3,"title":"初始化并添加全局引用","slug":"初始化并添加全局引用","link":"#初始化并添加全局引用","children":[]},{"level":3,"title":"Ent 驱动","slug":"ent-驱动","link":"#ent-驱动","children":[]},{"level":3,"title":"使用效果","slug":"使用效果","link":"#使用效果","children":[]},{"level":3,"title":"查询数据","slug":"查询数据","link":"#查询数据","children":[]},{"level":3,"title":"执行 raw sql","slug":"执行-raw-sql","link":"#执行-raw-sql","children":[]},{"level":3,"title":"项目默认添加了 page 模板","slug":"项目默认添加了-page-模板","link":"#项目默认添加了-page-模板","children":[]},{"level":3,"title":"事务","slug":"事务","link":"#事务","children":[]},{"level":3,"title":"Ent schema 导入工具","slug":"ent-schema-导入工具","link":"#ent-schema-导入工具","children":[]},{"level":3,"title":"常见问题","slug":"常见问题","link":"#常见问题","children":[]}]}],"git":{"createdTime":1671464359000,"updatedTime":1715767691000,"contributors":[{"name":"Ryan SU","email":"1137661202@qq.com","commits":11},{"name":"Ryan SU","email":"yuansu.china.work@gmail.com","commits":6},{"name":"Ryan Su","email":"yuansu.china.work@gmail.com","commits":2}]},"readingTime":{"minutes":5.81,"words":1743},"filePathRelative":"zh/guide/feature/ORM/ent.md","localizedDate":"2022年12月19日","autoDesc":true,"excerpt":"<h2>Ent 快速入门</h2>\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">相关信息</p>\\n<p><a href=\\"https://entgo.io/zh/docs/getting-started/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">官方文档</a> <a href=\\"https://github.com/ent/ent/blob/master/examples/README.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">官方例子</a> <a href=\\"https://suyuan32.github.io/ent-chinese-doc/#/zh-cn/getting-started\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">schema 中文文档(推荐)</a></p>\\n<p><a href=\\"https://github.com/suyuan32/simple-admin-example-ent\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">教学项目</a> 帮助你快速提升</p>\\n</div>"}');export{G as comp,Q as data};
