import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-BLH1Rwid.js";const p={},e=t(`<blockquote><p><strong>我们将全局变量定义到 <code>internal/svc/servicecontext.go</code> 中，并初始化</strong></p></blockquote><p>例如</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">package</span> svc

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;github.com/suyuan32/simple-admin-core/api/internal/config&quot;</span>
	<span class="token string">&quot;github.com/suyuan32/simple-admin-core/api/internal/middleware&quot;</span>
	<span class="token string">&quot;github.com/suyuan32/simple-admin-core/api/internal/i18n&quot;</span>
	<span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/coreclient&quot;</span>

	<span class="token string">&quot;github.com/casbin/casbin/v2&quot;</span>
	<span class="token string">&quot;github.com/zeromicro/go-zero/core/stores/redis&quot;</span>
	<span class="token string">&quot;github.com/zeromicro/go-zero/rest&quot;</span>
	<span class="token string">&quot;github.com/zeromicro/go-zero/zrpc&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> ServiceContext <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	Config    config<span class="token punctuation">.</span>Config
	Authority rest<span class="token punctuation">.</span>Middleware
	CoreRpc   coreclient<span class="token punctuation">.</span>Core
	Redis     <span class="token operator">*</span>redis<span class="token punctuation">.</span>Redis
	Casbin    <span class="token operator">*</span>casbin<span class="token punctuation">.</span>Enforcer
	Trans     <span class="token operator">*</span>i18n<span class="token punctuation">.</span>Translator
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">NewServiceContext</span><span class="token punctuation">(</span>c config<span class="token punctuation">.</span>Config<span class="token punctuation">)</span> <span class="token operator">*</span>ServiceContext <span class="token punctuation">{</span>
	rds <span class="token operator">:=</span> redis<span class="token punctuation">.</span><span class="token function">MustNewRedis</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>RedisConf<span class="token punctuation">)</span>

	cbn <span class="token operator">:=</span> c<span class="token punctuation">.</span>CasbinConf<span class="token punctuation">.</span><span class="token function">MustNewCasbinWithRedisWatcher</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>DatabaseConf<span class="token punctuation">.</span>Type<span class="token punctuation">,</span> c<span class="token punctuation">.</span>DatabaseConf<span class="token punctuation">.</span><span class="token function">GetDSN</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span>RedisConf<span class="token punctuation">)</span>

	trans <span class="token operator">:=</span> i18n<span class="token punctuation">.</span><span class="token function">NewTranslator</span><span class="token punctuation">(</span>i18n<span class="token punctuation">.</span>LocaleFS<span class="token punctuation">)</span>

	<span class="token keyword">return</span> <span class="token operator">&amp;</span>ServiceContext<span class="token punctuation">{</span>
		Config<span class="token punctuation">:</span>    c<span class="token punctuation">,</span>
		Authority<span class="token punctuation">:</span> middleware<span class="token punctuation">.</span><span class="token function">NewAuthorityMiddleware</span><span class="token punctuation">(</span>cbn<span class="token punctuation">,</span> rds<span class="token punctuation">,</span> trans<span class="token punctuation">)</span><span class="token punctuation">.</span>Handle<span class="token punctuation">,</span>
		CoreRpc<span class="token punctuation">:</span>   coreclient<span class="token punctuation">.</span><span class="token function">NewCore</span><span class="token punctuation">(</span>zrpc<span class="token punctuation">.</span><span class="token function">NewClientIfEnable</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>CoreRpc<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		Redis<span class="token punctuation">:</span>     rds<span class="token punctuation">,</span>
		Casbin<span class="token punctuation">:</span>    cbn<span class="token punctuation">,</span>
		Trans<span class="token punctuation">:</span>     trans<span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>使用方法</p></blockquote><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">package</span> api

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;context&quot;</span>

	<span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/utils/errorhandler&quot;</span>
	<span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/internal/svc&quot;</span>
	<span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/types/core&quot;</span>

	<span class="token string">&quot;github.com/zeromicro/go-zero/core/logx&quot;</span>

	<span class="token string">&quot;github.com/suyuan32/simple-admin-common/i18n&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> CreateApiLogic <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	ctx    context<span class="token punctuation">.</span>Context
	svcCtx <span class="token operator">*</span>svc<span class="token punctuation">.</span>ServiceContext
	logx<span class="token punctuation">.</span>Logger
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">NewCreateApiLogic</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> svcCtx <span class="token operator">*</span>svc<span class="token punctuation">.</span>ServiceContext<span class="token punctuation">)</span> <span class="token operator">*</span>CreateApiLogic <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token operator">&amp;</span>CreateApiLogic<span class="token punctuation">{</span>
		ctx<span class="token punctuation">:</span>    ctx<span class="token punctuation">,</span>
		svcCtx<span class="token punctuation">:</span> svcCtx<span class="token punctuation">,</span>
		Logger<span class="token punctuation">:</span> logx<span class="token punctuation">.</span><span class="token function">WithContext</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>l <span class="token operator">*</span>CreateApiLogic<span class="token punctuation">)</span> <span class="token function">CreateApi</span><span class="token punctuation">(</span>in <span class="token operator">*</span>core<span class="token punctuation">.</span>ApiInfo<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>core<span class="token punctuation">.</span>BaseIDResp<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	result<span class="token punctuation">,</span> err <span class="token operator">:=</span> l<span class="token punctuation">.</span>svcCtx<span class="token punctuation">.</span>DB<span class="token punctuation">.</span>API<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">SetPath</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Path<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">SetDescription</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Description<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">SetAPIGroup</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>ApiGroup<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">SetMethod</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Method<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Save</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>ctx<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> errorhandler<span class="token punctuation">.</span><span class="token function">DefaultEntError</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>Logger<span class="token punctuation">,</span> err<span class="token punctuation">,</span> in<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> <span class="token operator">&amp;</span>core<span class="token punctuation">.</span>BaseIDResp<span class="token punctuation">{</span>Id<span class="token punctuation">:</span> result<span class="token punctuation">.</span>ID<span class="token punctuation">,</span> Msg<span class="token punctuation">:</span> i18n<span class="token punctuation">.</span>CreateSuccess<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>我们可以通过 l.svcCtx 访问全局变量</strong></p></blockquote>`,6),o=[e];function c(i,u){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","global_vars.html.vue"]]),d=JSON.parse('{"path":"/zh/guide/basic-config/global_vars.html","title":"全局变量","lang":"zh-CN","frontmatter":{"order":4,"title":"全局变量","description":"我们将全局变量定义到 internal/svc/servicecontext.go 中，并初始化 例如 使用方法 我们可以通过 l.svcCtx 访问全局变量","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://doc.ryansu.tech/guide/basic-config/global_vars.html"}],["meta",{"property":"og:url","content":"https://doc.ryansu.tech/zh/guide/basic-config/global_vars.html"}],["meta",{"property":"og:site_name","content":"Simple Admin"}],["meta",{"property":"og:title","content":"全局变量"}],["meta",{"property":"og:description","content":"我们将全局变量定义到 internal/svc/servicecontext.go 中，并初始化 例如 使用方法 我们可以通过 l.svcCtx 访问全局变量"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-01-17T00:19:29.000Z"}],["meta",{"property":"article:author","content":"Ryan SU"}],["meta",{"property":"article:modified_time","content":"2024-01-17T00:19:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"全局变量\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-17T00:19:29.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ryan SU\\",\\"url\\":\\"https://github.com/suyuan32\\"}]}"]]},"headers":[],"git":{"createdTime":1671464359000,"updatedTime":1705450769000,"contributors":[{"name":"Ryan SU","email":"1137661202@qq.com","commits":6},{"name":"Ryan Su","email":"yuansu.china.work@gmail.com","commits":1}]},"readingTime":{"minutes":0.67,"words":201},"filePathRelative":"zh/guide/basic-config/global_vars.md","localizedDate":"2022年12月19日","autoDesc":true,"excerpt":"<blockquote>\\n<p><strong>我们将全局变量定义到 <code>internal/svc/servicecontext.go</code> 中，并初始化</strong></p>\\n</blockquote>\\n<p>例如</p>\\n<div class=\\"language-go\\" data-ext=\\"go\\" data-title=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token keyword\\">package</span> svc\\n\\n<span class=\\"token keyword\\">import</span> <span class=\\"token punctuation\\">(</span>\\n\\t<span class=\\"token string\\">\\"github.com/suyuan32/simple-admin-core/api/internal/config\\"</span>\\n\\t<span class=\\"token string\\">\\"github.com/suyuan32/simple-admin-core/api/internal/middleware\\"</span>\\n\\t<span class=\\"token string\\">\\"github.com/suyuan32/simple-admin-core/api/internal/i18n\\"</span>\\n\\t<span class=\\"token string\\">\\"github.com/suyuan32/simple-admin-core/rpc/coreclient\\"</span>\\n\\n\\t<span class=\\"token string\\">\\"github.com/casbin/casbin/v2\\"</span>\\n\\t<span class=\\"token string\\">\\"github.com/zeromicro/go-zero/core/stores/redis\\"</span>\\n\\t<span class=\\"token string\\">\\"github.com/zeromicro/go-zero/rest\\"</span>\\n\\t<span class=\\"token string\\">\\"github.com/zeromicro/go-zero/zrpc\\"</span>\\n<span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">type</span> ServiceContext <span class=\\"token keyword\\">struct</span> <span class=\\"token punctuation\\">{</span>\\n\\tConfig    config<span class=\\"token punctuation\\">.</span>Config\\n\\tAuthority rest<span class=\\"token punctuation\\">.</span>Middleware\\n\\tCoreRpc   coreclient<span class=\\"token punctuation\\">.</span>Core\\n\\tRedis     <span class=\\"token operator\\">*</span>redis<span class=\\"token punctuation\\">.</span>Redis\\n\\tCasbin    <span class=\\"token operator\\">*</span>casbin<span class=\\"token punctuation\\">.</span>Enforcer\\n\\tTrans     <span class=\\"token operator\\">*</span>i18n<span class=\\"token punctuation\\">.</span>Translator\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">NewServiceContext</span><span class=\\"token punctuation\\">(</span>c config<span class=\\"token punctuation\\">.</span>Config<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">*</span>ServiceContext <span class=\\"token punctuation\\">{</span>\\n\\trds <span class=\\"token operator\\">:=</span> redis<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">MustNewRedis</span><span class=\\"token punctuation\\">(</span>c<span class=\\"token punctuation\\">.</span>RedisConf<span class=\\"token punctuation\\">)</span>\\n\\n\\tcbn <span class=\\"token operator\\">:=</span> c<span class=\\"token punctuation\\">.</span>CasbinConf<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">MustNewCasbinWithRedisWatcher</span><span class=\\"token punctuation\\">(</span>c<span class=\\"token punctuation\\">.</span>DatabaseConf<span class=\\"token punctuation\\">.</span>Type<span class=\\"token punctuation\\">,</span> c<span class=\\"token punctuation\\">.</span>DatabaseConf<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">GetDSN</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> c<span class=\\"token punctuation\\">.</span>RedisConf<span class=\\"token punctuation\\">)</span>\\n\\n\\ttrans <span class=\\"token operator\\">:=</span> i18n<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">NewTranslator</span><span class=\\"token punctuation\\">(</span>i18n<span class=\\"token punctuation\\">.</span>LocaleFS<span class=\\"token punctuation\\">)</span>\\n\\n\\t<span class=\\"token keyword\\">return</span> <span class=\\"token operator\\">&amp;</span>ServiceContext<span class=\\"token punctuation\\">{</span>\\n\\t\\tConfig<span class=\\"token punctuation\\">:</span>    c<span class=\\"token punctuation\\">,</span>\\n\\t\\tAuthority<span class=\\"token punctuation\\">:</span> middleware<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">NewAuthorityMiddleware</span><span class=\\"token punctuation\\">(</span>cbn<span class=\\"token punctuation\\">,</span> rds<span class=\\"token punctuation\\">,</span> trans<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span>Handle<span class=\\"token punctuation\\">,</span>\\n\\t\\tCoreRpc<span class=\\"token punctuation\\">:</span>   coreclient<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">NewCore</span><span class=\\"token punctuation\\">(</span>zrpc<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">NewClientIfEnable</span><span class=\\"token punctuation\\">(</span>c<span class=\\"token punctuation\\">.</span>CoreRpc<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n\\t\\tRedis<span class=\\"token punctuation\\">:</span>     rds<span class=\\"token punctuation\\">,</span>\\n\\t\\tCasbin<span class=\\"token punctuation\\">:</span>    cbn<span class=\\"token punctuation\\">,</span>\\n\\t\\tTrans<span class=\\"token punctuation\\">:</span>     trans<span class=\\"token punctuation\\">,</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n\\n</code></pre></div>"}');export{k as comp,d as data};
