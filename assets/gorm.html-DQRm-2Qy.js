import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as e,c as o,a as n,f as p,b as i,e as c}from"./app-CK-zxo63.js";const l={},u={id:"official-doc",tabindex:"-1"},r={class:"header-anchor",href:"#official-doc"},d={href:"https://gorm.io/",target:"_blank",rel:"noopener noreferrer"},k=c(`<h2 id="import" tabindex="-1"><a class="header-anchor" href="#import"><span>Import</span></a></h2><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">import</span> <span class="token string">&quot;github.com/suyuan32/simple-admin-common/orm/gorm&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="config-file-definition" tabindex="-1"><a class="header-anchor" href="#config-file-definition"><span>Config file definition</span></a></h2><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">type</span> Config <span class="token keyword">struct</span> <span class="token punctuation">{</span>
 zrpc<span class="token punctuation">.</span>RpcServerConf
 DatabaseConf gorm<span class="token punctuation">.</span>Conf
 RedisConf    redis<span class="token punctuation">.</span>RedisConf
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="etc-yaml-config-file" tabindex="-1"><a class="header-anchor" href="#etc-yaml-config-file"><span><code>etc/*.yaml</code> config file</span></a></h2><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">DatabaseConf</span><span class="token punctuation">:</span>
  <span class="token key atrule">Type</span><span class="token punctuation">:</span> mysql
  <span class="token key atrule">Path</span><span class="token punctuation">:</span> <span class="token string">&quot;127.0.0.1&quot;</span>
  <span class="token key atrule">Port</span><span class="token punctuation">:</span> <span class="token number">3306</span>
  <span class="token key atrule">Config</span><span class="token punctuation">:</span> charset=utf8mb4<span class="token important">&amp;parseTime=True&amp;loc=Local</span>
  <span class="token key atrule">DBName</span><span class="token punctuation">:</span> simple_admin
  <span class="token key atrule">Username</span><span class="token punctuation">:</span>
  <span class="token key atrule">Password</span><span class="token punctuation">:</span>
  <span class="token key atrule">MaxIdleConn</span><span class="token punctuation">:</span> <span class="token number">10</span>
  <span class="token key atrule">MaxOpenConn</span><span class="token punctuation">:</span> <span class="token number">100</span>
  <span class="token key atrule">LogMode</span><span class="token punctuation">:</span> error
  <span class="token key atrule">LogZap</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="initialize-gorm" tabindex="-1"><a class="header-anchor" href="#initialize-gorm"><span>Initialize GORM</span></a></h2><p>Add initialization code into <code>service_context</code></p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>    db<span class="token punctuation">,</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span>DB<span class="token punctuation">.</span><span class="token function">NewGORM</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
 <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
  logx<span class="token punctuation">.</span><span class="token function">Errorw</span><span class="token punctuation">(</span>logmessage<span class="token punctuation">.</span>DatabaseError<span class="token punctuation">,</span> logx<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span><span class="token string">&quot;detail&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token boolean">nil</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="define-model" tabindex="-1"><a class="header-anchor" href="#define-model"><span>Define Model</span></a></h2><p><code>goctls</code> does not support <code>gorm</code>â€™s <code>model</code> generation and <code>crud</code> code generation. You need to manually create the <code>model</code> folder and add <code>model</code> manually.</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">package</span> model

<span class="token keyword">import</span> <span class="token string">&quot;gorm.io/gorm&quot;</span>

<span class="token keyword">type</span> Api <span class="token keyword">struct</span> <span class="token punctuation">{</span>
 gorm<span class="token punctuation">.</span>Model
 Path        <span class="token builtin">string</span> <span class="token string">\`json:&quot;path&quot; gorm:&quot;comment:api path&quot;\`</span>                    <span class="token comment">// api path</span>
 Description <span class="token builtin">string</span> <span class="token string">\`json:&quot;description&quot; gorm:&quot;comment:api description&quot;\`</span>      <span class="token comment">// api description</span>
 ApiGroup    <span class="token builtin">string</span> <span class="token string">\`json:&quot;apiGroup&quot; gorm:&quot;comment:api group&quot;\`</span>               <span class="token comment">// api group</span>
 Method      <span class="token builtin">string</span> <span class="token string">\`json:&quot;method&quot; gorm:&quot;default:POST;comment: http method&quot;\`</span> <span class="token comment">// http method</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="get-data" tabindex="-1"><a class="header-anchor" href="#get-data"><span>Get Data</span></a></h2><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">package</span> logic

<span class="token keyword">import</span> <span class="token punctuation">(</span>
 <span class="token string">&quot;context&quot;</span>

 <span class="token string">&quot;github.com/suyuan32/simple-admin-common/msg/logmsg&quot;</span>
 <span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/internal/model&quot;</span>
 <span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/internal/svc&quot;</span>
 <span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/types/core&quot;</span>

 <span class="token string">&quot;github.com/zeromicro/go-zero/core/logx&quot;</span>
 <span class="token string">&quot;google.golang.org/grpc/codes&quot;</span>
 <span class="token string">&quot;google.golang.org/grpc/status&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> GetApiListLogic <span class="token keyword">struct</span> <span class="token punctuation">{</span>
 ctx    context<span class="token punctuation">.</span>Context
 svcCtx <span class="token operator">*</span>svc<span class="token punctuation">.</span>ServiceContext
 logx<span class="token punctuation">.</span>Logger
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">NewGetApiListLogic</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> svcCtx <span class="token operator">*</span>svc<span class="token punctuation">.</span>ServiceContext<span class="token punctuation">)</span> <span class="token operator">*</span>GetApiListLogic <span class="token punctuation">{</span>
 <span class="token keyword">return</span> <span class="token operator">&amp;</span>GetApiListLogic<span class="token punctuation">{</span>
  ctx<span class="token punctuation">:</span>    ctx<span class="token punctuation">,</span>
  svcCtx<span class="token punctuation">:</span> svcCtx<span class="token punctuation">,</span>
  Logger<span class="token punctuation">:</span> logx<span class="token punctuation">.</span><span class="token function">WithContext</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">,</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>l <span class="token operator">*</span>GetApiListLogic<span class="token punctuation">)</span> <span class="token function">GetApiList</span><span class="token punctuation">(</span>in <span class="token operator">*</span>core<span class="token punctuation">.</span>ApiPageReq<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>core<span class="token punctuation">.</span>ApiListResp<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 db <span class="token operator">:=</span> l<span class="token punctuation">.</span>svcCtx<span class="token punctuation">.</span>DB<span class="token punctuation">.</span><span class="token function">Model</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>model<span class="token punctuation">.</span>Api<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
 <span class="token keyword">var</span> apis <span class="token punctuation">[</span><span class="token punctuation">]</span>model<span class="token punctuation">.</span>Api

 <span class="token keyword">if</span> in<span class="token punctuation">.</span>Path <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">{</span>
  db <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">&quot;path LIKE ?&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;%&quot;</span><span class="token operator">+</span>in<span class="token punctuation">.</span>Path<span class="token operator">+</span><span class="token string">&quot;%&quot;</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span>

 <span class="token keyword">if</span> in<span class="token punctuation">.</span>Description <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">{</span>
  db <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">&quot;description LIKE ?&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;%&quot;</span><span class="token operator">+</span>in<span class="token punctuation">.</span>Description<span class="token operator">+</span><span class="token string">&quot;%&quot;</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span>

 <span class="token keyword">if</span> in<span class="token punctuation">.</span>Method <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">{</span>
  db <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">&quot;method = ?&quot;</span><span class="token punctuation">,</span> in<span class="token punctuation">.</span>Method<span class="token punctuation">)</span>
 <span class="token punctuation">}</span>

 <span class="token keyword">if</span> in<span class="token punctuation">.</span>Group <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">{</span>
  db <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">&quot;api_group = ?&quot;</span><span class="token punctuation">,</span> in<span class="token punctuation">.</span>Group<span class="token punctuation">)</span>
 <span class="token punctuation">}</span>

 result <span class="token operator">:=</span> db<span class="token punctuation">.</span><span class="token function">Limit</span><span class="token punctuation">(</span><span class="token function">int</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Page<span class="token punctuation">.</span>PageSize<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Offset</span><span class="token punctuation">(</span><span class="token function">int</span><span class="token punctuation">(</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Page<span class="token punctuation">.</span>Page <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> in<span class="token punctuation">.</span>Page<span class="token punctuation">.</span>PageSize<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
  <span class="token function">Order</span><span class="token punctuation">(</span><span class="token string">&quot;api_group desc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>apis<span class="token punctuation">)</span>

 <span class="token keyword">if</span> result<span class="token punctuation">.</span>Error <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
  logx<span class="token punctuation">.</span><span class="token function">Errorw</span><span class="token punctuation">(</span>logmessage<span class="token punctuation">.</span>DatabaseError<span class="token punctuation">,</span> logx<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span><span class="token string">&quot;detail&quot;</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span>Error<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> status<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>codes<span class="token punctuation">.</span>Internal<span class="token punctuation">,</span> result<span class="token punctuation">.</span>Error<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span>

 resp <span class="token operator">:=</span> <span class="token operator">&amp;</span>core<span class="token punctuation">.</span>ApiListResp<span class="token punctuation">{</span><span class="token punctuation">}</span>
 resp<span class="token punctuation">.</span>Total <span class="token operator">=</span> <span class="token function">uint64</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>RowsAffected<span class="token punctuation">)</span>
 <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> apis <span class="token punctuation">{</span>
  resp<span class="token punctuation">.</span>Data <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>Data<span class="token punctuation">,</span> <span class="token operator">&amp;</span>core<span class="token punctuation">.</span>ApiInfo<span class="token punctuation">{</span>
   ID<span class="token punctuation">:</span>          <span class="token function">uint64</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span>ID<span class="token punctuation">)</span><span class="token punctuation">,</span>
   CreatedAt<span class="token punctuation">:</span>    v<span class="token punctuation">.</span>CreatedAt<span class="token punctuation">.</span><span class="token function">UnixMilli</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
   Path<span class="token punctuation">:</span>        v<span class="token punctuation">.</span>Path<span class="token punctuation">,</span>
   Description<span class="token punctuation">:</span> v<span class="token punctuation">.</span>Description<span class="token punctuation">,</span>
   Group<span class="token punctuation">:</span>       v<span class="token punctuation">.</span>ApiGroup<span class="token punctuation">,</span>
   Method<span class="token punctuation">:</span>      v<span class="token punctuation">.</span>Method<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
 <span class="token keyword">return</span> resp<span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Use l.svc.DB.Model().Where().Find() to do that.</p></blockquote>`,15);function m(v,g){const s=t("ExternalLinkIcon");return e(),o("div",null,[n("h4",u,[n("a",r,[n("span",null,[n("a",d,[p("Official Doc"),i(s)])])])]),k])}const h=a(l,[["render",m],["__file","gorm.html.vue"]]),y=JSON.parse('{"path":"/guide/feature/ORM/gorm.html","title":"GORM","lang":"en-US","frontmatter":{"order":1,"title":"GORM","description":"Official Doc Import Config file definition etc/*.yaml config file Initialize GORM Add initialization code into service_context Define Model goctls does not support gormâ€™s model ...","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://doc.ryansu.tech/zh/guide/feature/ORM/gorm.html"}],["meta",{"property":"og:url","content":"https://doc.ryansu.tech/guide/feature/ORM/gorm.html"}],["meta",{"property":"og:site_name","content":"Simple Admin"}],["meta",{"property":"og:title","content":"GORM"}],["meta",{"property":"og:description","content":"Official Doc Import Config file definition etc/*.yaml config file Initialize GORM Add initialization code into service_context Define Model goctls does not support gormâ€™s model ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-17T03:47:44.000Z"}],["meta",{"property":"article:author","content":"Ryan SU"}],["meta",{"property":"article:modified_time","content":"2024-01-17T03:47:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"GORM\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-17T03:47:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ryan SU\\",\\"url\\":\\"https://github.com/suyuan32\\"}]}"]]},"headers":[{"level":2,"title":"Import","slug":"import","link":"#import","children":[]},{"level":2,"title":"Config file definition","slug":"config-file-definition","link":"#config-file-definition","children":[]},{"level":2,"title":"etc/*.yaml config file","slug":"etc-yaml-config-file","link":"#etc-yaml-config-file","children":[]},{"level":2,"title":"Initialize GORM","slug":"initialize-gorm","link":"#initialize-gorm","children":[]},{"level":2,"title":"Define Model","slug":"define-model","link":"#define-model","children":[]},{"level":2,"title":"Get Data","slug":"get-data","link":"#get-data","children":[]}],"git":{"createdTime":1671464359000,"updatedTime":1705463264000,"contributors":[{"name":"Ryan SU","email":"1137661202@qq.com","commits":3},{"name":"Ryan Su","email":"yuansu.china.work@gmail.com","commits":2},{"name":"Ryan SU","email":"yuansu.china.work@gmail.com","commits":1}]},"readingTime":{"minutes":1.04,"words":311},"filePathRelative":"guide/feature/ORM/gorm.md","localizedDate":"December 19, 2022","autoDesc":true,"excerpt":"<h4><a class=\\"header-anchor\\" href=\\"#official-doc\\"><span></span></a><a href=\\"https://gorm.io/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Official Doc</a></h4>\\n<h2>Import</h2>\\n<div class=\\"language-go\\" data-ext=\\"go\\" data-title=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token keyword\\">import</span> <span class=\\"token string\\">\\"github.com/suyuan32/simple-admin-common/orm/gorm\\"</span>\\n</code></pre></div>"}');export{h as comp,y as data};
