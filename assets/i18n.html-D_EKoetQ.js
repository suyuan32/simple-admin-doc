import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as i,o as s,c as o,a as n,f as l,b as r,e as a}from"./app-VVVOBJHT.js";const c={},p=a(`<blockquote><p>The project supports multi-language internationalization, mainly divided into front-end internationalization and back-end internationalization</p></blockquote><h2 id="front-end-internationalization" tabindex="-1"><a class="header-anchor" href="#front-end-internationalization"><span>Front-end internationalization</span></a></h2><blockquote><p>The front-end internationalization files are located in <code>src/locales/*</code>, and the front-end static text translation is internationalized by the front-end</p></blockquote><p>Called in vue or ts file</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> t <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useI18n</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Usage</span>
<span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token function">t</span><span class="token punctuation">(</span><span class="token string">&quot;sys.dictionary.dictionaryList&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),d={href:"https://doc.vvbin.cn/dep/i18n.html",target:"_blank",rel:"noopener noreferrer"},u=a(`<h2 id="backend-internationalization" tabindex="-1"><a class="header-anchor" href="#backend-internationalization"><span>Backend internationalization</span></a></h2><blockquote><p>The internationalization files are located in the i18n folder. The backend internationalization is used to translate all dynamic data from the backend. The directory structure in core is</p></blockquote><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>├── locale
│   ├── en.json
│   └── zh.json
├── translator.go
├── translator_test.go
└── var.go

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Just add translations in en.json and zh.json</p><h3 id="initialization-method" tabindex="-1"><a class="header-anchor" href="#initialization-method"><span>Initialization method</span></a></h3><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>trans <span class="token operator">:=</span> i18n<span class="token punctuation">.</span><span class="token function">NewTranslator</span><span class="token punctuation">(</span>i18n2<span class="token punctuation">.</span>LocaleFS<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h3><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>l<span class="token punctuation">.</span>svcCtx<span class="token punctuation">.</span>Trans<span class="token punctuation">.</span><span class="token function">Trans</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>ctx<span class="token punctuation">,</span> i18n<span class="token punctuation">.</span>Success<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="reading-external-files" tabindex="-1"><a class="header-anchor" href="#reading-external-files"><span>Reading External Files</span></a></h3><p>Starting from version v1.0.7, it is possible to read external i18n files.</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>    <span class="token keyword">var</span> trans <span class="token operator">*</span>i18n<span class="token punctuation">.</span>Translator
	<span class="token keyword">if</span> c<span class="token punctuation">.</span>I18nConf<span class="token punctuation">.</span>Dir <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">{</span>
		trans <span class="token operator">=</span> i18n<span class="token punctuation">.</span><span class="token function">NewTranslatorFromFile</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>I18nConf<span class="token punctuation">)</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		trans <span class="token operator">=</span> i18n<span class="token punctuation">.</span><span class="token function">NewTranslator</span><span class="token punctuation">(</span>i18n2<span class="token punctuation">.</span>LocaleFS<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>To read an external file, use <code>i18n.NewTranslatorFromFile(c.I18nConf)</code>.</p>`,12);function m(h,k){const t=i("ExternalLinkIcon");return s(),o("div",null,[p,n("p",null,[n("a",d,[l("Detail Tutorial"),r(t)])]),u])}const b=e(c,[["render",m],["__file","i18n.html.vue"]]),f=JSON.parse('{"path":"/guide/feature/i18n.html","title":"Internationalization","lang":"en-US","frontmatter":{"order":13,"title":"Internationalization","description":"The project supports multi-language internationalization, mainly divided into front-end internationalization and back-end internationalization Front-end internationalization The...","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://doc.ryansu.tech/zh/guide/feature/i18n.html"}],["meta",{"property":"og:url","content":"https://doc.ryansu.tech/guide/feature/i18n.html"}],["meta",{"property":"og:site_name","content":"Simple Admin"}],["meta",{"property":"og:title","content":"Internationalization"}],["meta",{"property":"og:description","content":"The project supports multi-language internationalization, mainly divided into front-end internationalization and back-end internationalization Front-end internationalization The..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-17T00:19:29.000Z"}],["meta",{"property":"article:author","content":"Ryan SU"}],["meta",{"property":"article:modified_time","content":"2024-01-17T00:19:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Internationalization\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-17T00:19:29.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ryan SU\\",\\"url\\":\\"https://github.com/suyuan32\\"}]}"]]},"headers":[{"level":2,"title":"Front-end internationalization","slug":"front-end-internationalization","link":"#front-end-internationalization","children":[]},{"level":2,"title":"Backend internationalization","slug":"backend-internationalization","link":"#backend-internationalization","children":[{"level":3,"title":"Initialization method","slug":"initialization-method","link":"#initialization-method","children":[]},{"level":3,"title":"Usage","slug":"usage","link":"#usage","children":[]},{"level":3,"title":"Reading External Files","slug":"reading-external-files","link":"#reading-external-files","children":[]}]}],"git":{"createdTime":1672312156000,"updatedTime":1705450769000,"contributors":[{"name":"Ryan SU","email":"1137661202@qq.com","commits":4},{"name":"Ryan SU","email":"yuansu.china.work@gmail.com","commits":2},{"name":"Ryan Su","email":"yuansu.china.work@gmail.com","commits":1}]},"readingTime":{"minutes":0.52,"words":157},"filePathRelative":"guide/feature/i18n.md","localizedDate":"December 29, 2022","autoDesc":true,"excerpt":"<blockquote>\\n<p>The project supports multi-language internationalization, mainly divided into front-end internationalization and back-end internationalization</p>\\n</blockquote>\\n<h2>Front-end internationalization</h2>\\n<blockquote>\\n<p>The front-end internationalization files are located in <code>src/locales/*</code>, and the front-end static text translation is internationalized by the front-end</p>\\n</blockquote>"}');export{b as comp,f as data};
