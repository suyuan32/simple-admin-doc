import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as p,c as l,a as t,f as a,b as e,e as c}from"./app-CVk0cRJA.js";const i="/assets/oauth_add_provider.png",r={},u=t("blockquote",null,[t("p",null,"目前系统已默认提供 google 和 github Oauth 登录功能")],-1),g={href:"https://developers.google.com/identity/protocols/oauth2",target:"_blank",rel:"noopener noreferrer"},d={href:"https://docs.github.com/en/developers/apps/building-oauth-apps/authorizing-oauth-apps",target:"_blank",rel:"noopener noreferrer"},h=c('<h2 id="添加第三方" tabindex="-1"><a class="header-anchor" href="#添加第三方"><span>添加第三方</span></a></h2><figure><img src="'+i+`" alt="picture" tabindex="0" loading="lazy"><figcaption>picture</figcaption></figure><blockquote><p>编辑 src/views/sys/login/LoginForm.vue</p></blockquote><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>flex justify-evenly enter-x<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\`\${prefixCls}-sign-in-way\`<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>GithubFilled</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>oauthLoginHandler(&#39;github&#39;)<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>WechatFilled</span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AlipayCircleFilled</span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>GoogleCircleFilled</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>oauthLoginHandler(&#39;google&#39;)<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TwitterCircleFilled</span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>添加对应的 provider 名称即可。 param 模式是将请求放在网址中 header 模式是将请求放在 authorization 内</p></blockquote>`,5);function m(k,v){const n=o("ExternalLinkIcon");return p(),l("div",null,[u,t("blockquote",null,[t("p",null,[a("如何获取 clientID 和 client secret? "),t("a",g,[a("google"),e(n)]),t("a",d,[a("github"),e(n)])])]),h])}const _=s(r,[["render",m],["__file","oauth.html.vue"]]),f=JSON.parse('{"path":"/zh/guide/feature/oauth.html","title":"第三方登陆","lang":"zh-CN","frontmatter":{"order":6,"title":"第三方登陆","description":"目前系统已默认提供 google 和 github Oauth 登录功能 如何获取 clientID 和 client secret? google github 添加第三方 picturepicture 编辑 src/views/sys/login/LoginForm.vue 添加对应的 provider 名称即可。 param 模式是将请求放在网址...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://doc.ryansu.tech/guide/feature/oauth.html"}],["meta",{"property":"og:url","content":"https://doc.ryansu.tech/zh/guide/feature/oauth.html"}],["meta",{"property":"og:site_name","content":"Simple Admin"}],["meta",{"property":"og:title","content":"第三方登陆"}],["meta",{"property":"og:description","content":"目前系统已默认提供 google 和 github Oauth 登录功能 如何获取 clientID 和 client secret? google github 添加第三方 picturepicture 编辑 src/views/sys/login/LoginForm.vue 添加对应的 provider 名称即可。 param 模式是将请求放在网址..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://doc.ryansu.tech/assets/oauth_add_provider.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-01-17T00:19:29.000Z"}],["meta",{"property":"article:author","content":"Ryan SU"}],["meta",{"property":"article:modified_time","content":"2024-01-17T00:19:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"第三方登陆\\",\\"image\\":[\\"https://doc.ryansu.tech/assets/oauth_add_provider.png\\"],\\"dateModified\\":\\"2024-01-17T00:19:29.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ryan SU\\",\\"url\\":\\"https://github.com/suyuan32\\"}]}"]]},"headers":[{"level":2,"title":"添加第三方","slug":"添加第三方","link":"#添加第三方","children":[]}],"git":{"createdTime":1671464359000,"updatedTime":1705450769000,"contributors":[{"name":"Ryan SU","email":"1137661202@qq.com","commits":3},{"name":"Ryan SU","email":"yuansu.china.work@gmail.com","commits":1},{"name":"Ryan Su","email":"yuansu.china.work@gmail.com","commits":1}]},"readingTime":{"minutes":0.39,"words":116},"filePathRelative":"zh/guide/feature/oauth.md","localizedDate":"2022年12月19日","autoDesc":true,"excerpt":"<blockquote>\\n<p>目前系统已默认提供 google 和 github Oauth 登录功能</p>\\n</blockquote>\\n<blockquote>\\n<p>如何获取 clientID 和 client secret?\\n<a href=\\"https://developers.google.com/identity/protocols/oauth2\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">google</a>\\n<a href=\\"https://docs.github.com/en/developers/apps/building-oauth-apps/authorizing-oauth-apps\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">github</a></p>\\n</blockquote>"}');export{_ as comp,f as data};
