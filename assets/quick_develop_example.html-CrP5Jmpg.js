import{_ as o,a as i}from"./example_en_title-a3g3dTRT.js";import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,c as u,d as a,e as s,w as e,b as p,o as r,f as t}from"./app-SeIJRtVB.js";const d={},m=p('<h2 id="rapid-development-demo" tabindex="-1"><a class="header-anchor" href="#rapid-development-demo"><span>Rapid development demo</span></a></h2><div class="hint-container warning"><p class="hint-container-title">Warning</p><p>Unless you want to contribute code to the core service, it is not recommended to write your own code into the core. Please imitate <a href="https://github.com/suyuan32/simple-admin-example-api" target="_blank" rel="noopener noreferrer">example-api</a> and <a href="https://github.com/suyuan32/simple-admin-file" target="_blank" rel="noopener noreferrer">simple-admin-file</a> to create your own service<br><br> See <a href="/guide/quick-start/codegen/api_example">API Microservice</a> to quickly create an API</p></div><h2 id="install-goctls" tabindex="-1"><a class="header-anchor" href="#install-goctls"><span>Install goctls</span></a></h2>',3),k=p(`<h2 id="rpc-service-example-take-department-as-an-example" tabindex="-1"><a class="header-anchor" href="#rpc-service-example-take-department-as-an-example"><span>RPC service example, take department as an example</span></a></h2><blockquote><p>First add department.go in rpc/ent/schema folder</p></blockquote><div class="language-protobuf line-numbers-mode" data-ext="protobuf" data-title="protobuf"><pre class="language-protobuf"><code><span class="token keyword">package</span> schema

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;entgo.io/ent&quot;</span>
	<span class="token string">&quot;entgo.io/ent/dialect/entsql&quot;</span>
	<span class="token string">&quot;entgo.io/ent/schema&quot;</span>
	<span class="token string">&quot;entgo.io/ent/schema/edge&quot;</span>
	<span class="token string">&quot;entgo.io/ent/schema/field&quot;</span>
	<span class="token string">&quot;github.com/suyuan32/simple-admin-common/orm/ent/mixins&quot;</span>
<span class="token punctuation">)</span>

type Department struct <span class="token punctuation">{</span>
	ent<span class="token punctuation">.</span>Schema
<span class="token punctuation">}</span>

<span class="token function">func</span> <span class="token punctuation">(</span>Department<span class="token punctuation">)</span> <span class="token function">Fields</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Field <span class="token punctuation">{</span>
	return <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Field<span class="token punctuation">{</span>
		field<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;Department name | 部门名称&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		field<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;ancestors&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;Parents&#39; IDs | 父级列表&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		field<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;leader&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;Department leader | 部门负责人&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		field<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;phone&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;Leader&#39;s phone number | 负责人电话&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		field<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;Leader&#39;s email | 部门负责人电子邮箱&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		field<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;remark&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;Remark | 备注&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		field<span class="token punctuation">.</span><span class="token function">Uint64</span><span class="token punctuation">(</span><span class="token string">&quot;parent_id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Optional</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;Parent department ID | 父级部门ID&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">func</span> <span class="token punctuation">(</span>Department<span class="token punctuation">)</span> <span class="token function">Mixin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Mixin <span class="token punctuation">{</span>
	return <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Mixin<span class="token punctuation">{</span>
		mixins<span class="token punctuation">.</span>BaseMixin<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		mixins<span class="token punctuation">.</span>StatusMixin<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		mixins<span class="token punctuation">.</span>SortMixin<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">func</span> <span class="token punctuation">(</span>Department<span class="token punctuation">)</span> <span class="token function">Edges</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Edge <span class="token punctuation">{</span>
	return <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Edge<span class="token punctuation">{</span>
		edge<span class="token punctuation">.</span><span class="token function">To</span><span class="token punctuation">(</span><span class="token string">&quot;children&quot;</span><span class="token punctuation">,</span> Department<span class="token punctuation">.</span>Type<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">From</span><span class="token punctuation">(</span><span class="token string">&quot;parent&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Unique</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span><span class="token string">&quot;parent_id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		edge<span class="token punctuation">.</span><span class="token function">From</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">,</span> User<span class="token punctuation">.</span>Type<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Ref</span><span class="token punctuation">(</span><span class="token string">&quot;departments&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">func</span> <span class="token punctuation">(</span>Department<span class="token punctuation">)</span> <span class="token function">Annotations</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>schema<span class="token punctuation">.</span>Annotation <span class="token punctuation">{</span>
	return <span class="token punctuation">[</span><span class="token punctuation">]</span>schema<span class="token punctuation">.</span>Annotation<span class="token punctuation">{</span>
		entsql<span class="token punctuation">.</span>Annotation<span class="token punctuation">{</span>Table<span class="token punctuation">:</span> <span class="token string">&quot;sys_departments&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="generate-department-rpc-code" tabindex="-1"><a class="header-anchor" href="#generate-department-rpc-code"><span>Generate department RPC code</span></a></h2><p>Execute in the project root directory</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">make</span> gen-rpc-ent-logic <span class="token assign-left variable">model</span><span class="token operator">=</span>Department <span class="token assign-left variable">group</span><span class="token operator">=</span>department
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>actually execute the command</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>goctls rpc ent <span class="token parameter variable">--schema</span><span class="token operator">=</span>./rpc/ent/schema <span class="token parameter variable">--service_name</span><span class="token operator">=</span>core <span class="token parameter variable">--project_name</span><span class="token operator">=</span>core <span class="token parameter variable">--o</span><span class="token operator">=</span>./rpc <span class="token parameter variable">--model</span><span class="token operator">=</span>Department <span class="token parameter variable">--group</span><span class="token operator">=</span>department <span class="token parameter variable">--proto_out</span><span class="token operator">=</span>./rpc/desc /department.proto
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>Need to execute <code>make gen-rpc</code> to generate the types file</p></blockquote><h3 id="since-the-core-ent-file-directory-is-in-rpc-the-import-path-in-the-logic-file-needs-to-be-modified" tabindex="-1"><a class="header-anchor" href="#since-the-core-ent-file-directory-is-in-rpc-the-import-path-in-the-logic-file-needs-to-be-modified"><span>Since the core ent file directory is in rpc, the import path in the logic file needs to be modified</span></a></h3><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;context&quot;</span>

	<span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/internal/svc&quot;</span>
	<span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/internal/utils/errorhandler&quot;</span>
	<span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/types/core&quot;</span>

	<span class="token string">&quot;github.com/zeromicro/go-zero/core/logx&quot;</span>

	<span class="token string">&quot;github.com/suyuan32/simple-admin-common/i18n&quot;</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="api-example" tabindex="-1"><a class="header-anchor" href="#api-example"><span>API example</span></a></h2><p>Execute in the api directory</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>goctls api proto <span class="token parameter variable">--proto</span><span class="token operator">=</span>/home/ryan/GolandProjects/simple-admin-core/rpc/core.proto <span class="token parameter variable">--api_service_name</span><span class="token operator">=</span>core <span class="token parameter variable">--rpc_service_name</span><span class="token operator">=</span>Core <span class="token parameter variable">--o</span><span class="token operator">=</span>./ <span class="token parameter variable">--model</span><span class="token operator">=</span>Department <span class="token parameter variable">--rpc_name</span><span class="token operator">=</span> Core <span class="token parameter variable">--grpc_package</span><span class="token operator">=</span>github.com/suyuan32/simple-admin-core/rpc/types/core
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>The CRUD code will be automatically generated, and the import also needs to be modified</p><div class="hint-container warning"><p class="hint-container-title">Warning</p><p>Since two languages need to be supported by default, add routes to api/internal/i18n/locals/zh.json and api/internal/i18n/locals/en.json respectively</p><p><img src="`+o+'" alt="example" loading="lazy"><img src="'+i+`" alt="example" loading="lazy"></p></div><h3 id="start-rpc-and-api" tabindex="-1"><a class="header-anchor" href="#start-rpc-and-api"><span>Start rpc and api</span></a></h3><p>Execute in the api rpc directory respectively</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>go run core.go <span class="token parameter variable">-f</span> etc/core.yaml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="web-development" tabindex="-1"><a class="header-anchor" href="#web-development"><span>Web development</span></a></h3>`,20);function v(h,g){const n=l("RouteLink");return r(),u("div",null,[m,a("p",null,[s(n,{to:"/guide/basic-config/simple-admin-tools.html"},{default:e(()=>[t("Simple-admin-tools")]),_:1})]),k,a("p",null,[s(n,{to:"/guide/quick-start/core/web_develop_example.html"},{default:e(()=>[t("Simple Admin UI")]),_:1})])])}const y=c(d,[["render",v],["__file","quick_develop_example.html.vue"]]),x=JSON.parse('{"path":"/guide/quick-start/core/quick_develop_example.html","title":"Backend Development","lang":"en-US","frontmatter":{"order":1,"title":"Backend Development","head":[["meta",{"name":"keywords","content":"core development, tutorial, configuration"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://doc.ryansu.tech/zh/guide/quick-start/core/quick_develop_example.html"}],["meta",{"property":"og:url","content":"https://doc.ryansu.tech/guide/quick-start/core/quick_develop_example.html"}],["meta",{"property":"og:site_name","content":"Simple Admin"}],["meta",{"property":"og:title","content":"Backend Development"}],["meta",{"property":"og:description","content":"Rapid development demo Warning Unless you want to contribute code to the core service, it is not recommended to write your own code into the core. Please imitate example-api and..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://doc.ryansu.tech/assets/example_zh_title.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-20T10:41:28.000Z"}],["meta",{"property":"article:author","content":"Ryan SU"}],["meta",{"property":"article:modified_time","content":"2024-05-20T10:41:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Backend Development\\",\\"image\\":[\\"https://doc.ryansu.tech/assets/example_zh_title.png\\",\\"https://doc.ryansu.tech/assets/example_en_title.png\\"],\\"dateModified\\":\\"2024-05-20T10:41:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ryan SU\\",\\"url\\":\\"https://github.com/suyuan32\\"}]}"]],"description":"Rapid development demo Warning Unless you want to contribute code to the core service, it is not recommended to write your own code into the core. Please imitate example-api and..."},"headers":[{"level":2,"title":"Rapid development demo","slug":"rapid-development-demo","link":"#rapid-development-demo","children":[]},{"level":2,"title":"Install goctls","slug":"install-goctls","link":"#install-goctls","children":[]},{"level":2,"title":"RPC service example, take department as an example","slug":"rpc-service-example-take-department-as-an-example","link":"#rpc-service-example-take-department-as-an-example","children":[]},{"level":2,"title":"Generate department RPC code","slug":"generate-department-rpc-code","link":"#generate-department-rpc-code","children":[{"level":3,"title":"Since the core ent file directory is in rpc, the import path in the logic file needs to be modified","slug":"since-the-core-ent-file-directory-is-in-rpc-the-import-path-in-the-logic-file-needs-to-be-modified","link":"#since-the-core-ent-file-directory-is-in-rpc-the-import-path-in-the-logic-file-needs-to-be-modified","children":[]}]},{"level":2,"title":"API example","slug":"api-example","link":"#api-example","children":[{"level":3,"title":"Start rpc and api","slug":"start-rpc-and-api","link":"#start-rpc-and-api","children":[]},{"level":3,"title":"Web development","slug":"web-development","link":"#web-development","children":[]}]}],"git":{"createdTime":1671464359000,"updatedTime":1716201688000,"contributors":[{"name":"Ryan SU","email":"1137661202@qq.com","commits":5},{"name":"Ryan SU","email":"yuansu.china.work@gmail.com","commits":1},{"name":"Ryan Su","email":"yuansu.china.work@gmail.com","commits":1}]},"readingTime":{"minutes":1.36,"words":408},"filePathRelative":"guide/quick-start/core/quick_develop_example.md","localizedDate":"December 19, 2022","autoDesc":true,"excerpt":"<h2>Rapid development demo</h2>\\n<div class=\\"hint-container warning\\">\\n<p class=\\"hint-container-title\\">Warning</p>\\n<p>Unless you want to contribute code to the core service, it is not recommended to write your own code into the core. Please imitate <a href=\\"https://github.com/suyuan32/simple-admin-example-api\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">example-api</a> and <a href=\\"https://github.com/suyuan32/simple-admin-file\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">simple-admin-file</a> to create your own service<br>\\n<br>\\nSee <a href=\\"/guide/quick-start/codegen/api_example\\">API Microservice</a> to quickly create an API</p>\\n</div>"}');export{y as comp,x as data};
