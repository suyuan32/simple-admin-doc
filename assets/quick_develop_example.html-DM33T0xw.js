import{_ as l,a as p}from"./example_en_title-a3g3dTRT.js";import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as d,c,d as e,e as i,w as n,b as t,o,f as a}from"./app-CW05xIpp.js";const h={},m=t('<h2 id="快速开发-demo" tabindex="-1"><a class="header-anchor" href="#快速开发-demo"><span>快速开发 demo</span></a></h2><div class="hint-container warning"><p class="hint-container-title">注意</p><p>除非想为 core 服务贡献代码，否则不建议将自己的代码写进 core 。请模仿 <a href="https://github.com/suyuan32/simple-admin-example-api" target="_blank" rel="noopener noreferrer">example-api</a> 和 <a href="https://github.com/suyuan32/simple-admin-file" target="_blank" rel="noopener noreferrer">simple-admin-file</a> 创建自己的服务 查看 <a href="/guide/quick-start/codegen/api_example">API 微服务</a> 快速创建 API</p></div><h2 id="安装-goctls" tabindex="-1"><a class="header-anchor" href="#安装-goctls"><span>安装 goctls</span></a></h2>',3),u=t(`<h2 id="rpc-服务例子-以-department-为例" tabindex="-1"><a class="header-anchor" href="#rpc-服务例子-以-department-为例"><span>RPC 服务例子,以 department 为例</span></a></h2><blockquote><p>首先在 rpc/ent/schema 文件夹内添加 department.go</p></blockquote><div class="language-plain line-numbers-mode" data-highlighter="shiki" data-ext="plain" data-title="plain" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>package schema</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import (</span></span>
<span class="line"><span>	&quot;entgo.io/ent&quot;</span></span>
<span class="line"><span>	&quot;entgo.io/ent/dialect/entsql&quot;</span></span>
<span class="line"><span>	&quot;entgo.io/ent/schema&quot;</span></span>
<span class="line"><span>	&quot;entgo.io/ent/schema/edge&quot;</span></span>
<span class="line"><span>	&quot;entgo.io/ent/schema/field&quot;</span></span>
<span class="line"><span>	&quot;github.com/suyuan32/simple-admin-common/orm/ent/mixins&quot;</span></span>
<span class="line"><span>)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>type Department struct {</span></span>
<span class="line"><span>	ent.Schema</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>func (Department) Fields() []ent.Field {</span></span>
<span class="line"><span>	return []ent.Field{</span></span>
<span class="line"><span>		field.String(&quot;name&quot;).Comment(&quot;Department name | 部门名称&quot;),</span></span>
<span class="line"><span>		field.String(&quot;ancestors&quot;).Comment(&quot;Parents&#39; IDs | 父级列表&quot;),</span></span>
<span class="line"><span>		field.String(&quot;leader&quot;).Comment(&quot;Department leader | 部门负责人&quot;),</span></span>
<span class="line"><span>		field.String(&quot;phone&quot;).Comment(&quot;Leader&#39;s phone number | 负责人电话&quot;),</span></span>
<span class="line"><span>		field.String(&quot;email&quot;).Comment(&quot;Leader&#39;s email | 部门负责人电子邮箱&quot;),</span></span>
<span class="line"><span>		field.String(&quot;remark&quot;).Comment(&quot;Remark | 备注&quot;),</span></span>
<span class="line"><span>		field.Uint64(&quot;parent_id&quot;).Optional().Default(0).Comment(&quot;Parent department ID | 父级部门ID&quot;),</span></span>
<span class="line"><span>	}</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>func (Department) Mixin() []ent.Mixin {</span></span>
<span class="line"><span>	return []ent.Mixin{</span></span>
<span class="line"><span>		mixins.BaseMixin{},</span></span>
<span class="line"><span>		mixins.StatusMixin{},</span></span>
<span class="line"><span>		mixins.SortMixin{},</span></span>
<span class="line"><span>	}</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>func (Department) Edges() []ent.Edge {</span></span>
<span class="line"><span>	return []ent.Edge{</span></span>
<span class="line"><span>		edge.To(&quot;children&quot;, Department.Type).From(&quot;parent&quot;).Unique().Field(&quot;parent_id&quot;),</span></span>
<span class="line"><span>		edge.From(&quot;users&quot;, User.Type).Ref(&quot;departments&quot;),</span></span>
<span class="line"><span>	}</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>func (Department) Annotations() []schema.Annotation {</span></span>
<span class="line"><span>	return []schema.Annotation{</span></span>
<span class="line"><span>		entsql.Annotation{Table: &quot;sys_departments&quot;},</span></span>
<span class="line"><span>	}</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="生成-department-rpc-代码" tabindex="-1"><a class="header-anchor" href="#生成-department-rpc-代码"><span>生成 department RPC 代码</span></a></h2><p>在 项目根目录执行</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> gen-rpc-ent-logic</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> model=Department</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> group=department</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>实际执行命令</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">goctls</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> rpc</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ent</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --schema=./rpc/ent/schema</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --service_name=core</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --project_name=core</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --o=./rpc</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --model=Department</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --group=department</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --proto_out=./rpc/desc/department.proto</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>需要再执行 <code>make gen-rpc</code> 生成 types 文件</p></blockquote><h3 id="由于-core-的-ent-文件目录在-rpc-中-所以-logic-文件内的-import-路径需要修改下" tabindex="-1"><a class="header-anchor" href="#由于-core-的-ent-文件目录在-rpc-中-所以-logic-文件内的-import-路径需要修改下"><span>由于 core 的 ent 文件目录在 rpc 中，所以 logic 文件内的 import 路径需要修改下</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#98C379;">context</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#98C379;">github.com/suyuan32/simple-admin-core/rpc/internal/svc</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#98C379;">github.com/suyuan32/simple-admin-core/rpc/internal/utils/errorhandler</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#98C379;">github.com/suyuan32/simple-admin-core/rpc/types/core</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#98C379;">github.com/zeromicro/go-zero/core/logx</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#98C379;">github.com/suyuan32/simple-admin-common/i18n</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="api-例子" tabindex="-1"><a class="header-anchor" href="#api-例子"><span>API 例子</span></a></h2><p>在 api 目录下执行</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">goctls</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> api</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> proto</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --proto=/home/ryan/GolandProjects/simple-admin-core/rpc/core.proto</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --api_service_name=core</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --rpc_service_name=Core</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --o=./</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --model=Department</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --rpc_name=Core</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --grpc_package=github.com/suyuan32/simple-admin-core/rpc/types/core</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>将会自动生成 CRUD 代码，同样需要修改 import</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>由于默认需要支持两种语言，所以要分别在 <code>api/internal/i18n/locals/zh.json</code> 和 <code>api/internal/i18n/locals/en.json</code> 添加 route</p><p><img src="`+l+'" alt="example" loading="lazy"><img src="'+p+'" alt="example" loading="lazy"></p></div><h3 id="启动-rpc-和-api" tabindex="-1"><a class="header-anchor" href="#启动-rpc-和-api"><span>启动 rpc 和 api</span></a></h3><p>分别在 api rpc 目录下执行</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> core.go</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> etc/core.yaml</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="网页端开发" tabindex="-1"><a class="header-anchor" href="#网页端开发"><span>网页端开发</span></a></h3>',20);function k(g,v){const s=d("RouteLink");return o(),c("div",null,[m,e("p",null,[i(s,{to:"/zh/guide/basic-config/simple-admin-tools.html"},{default:n(()=>[a("Simple-admin-tool")]),_:1})]),u,e("p",null,[i(s,{to:"/zh/guide/quick-start/core/web_develop_example.html"},{default:n(()=>[a("Simple Admin UI")]),_:1})])])}const q=r(h,[["render",k],["__file","quick_develop_example.html.vue"]]),f=JSON.parse('{"path":"/zh/guide/quick-start/core/quick_develop_example.html","title":"API 和 RPC","lang":"zh-CN","frontmatter":{"order":1,"title":"API 和 RPC","head":[["meta",{"name":"keywords","content":"core development, Core 开发教程, tutorial, 配置"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://doc.ryansu.tech/guide/quick-start/core/quick_develop_example.html"}],["meta",{"property":"og:url","content":"https://doc.ryansu.tech/zh/guide/quick-start/core/quick_develop_example.html"}],["meta",{"property":"og:site_name","content":"Simple Admin"}],["meta",{"property":"og:title","content":"API 和 RPC"}],["meta",{"property":"og:description","content":"快速开发 demo 注意 除非想为 core 服务贡献代码，否则不建议将自己的代码写进 core 。请模仿 example-api 和 simple-admin-file 创建自己的服务 查看 API 微服务 快速创建 API 安装 goctls RPC 服务例子,以 department 为例 首先在 rpc/ent/schema 文件夹内添加 de..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://doc.ryansu.tech/assets/example_zh_title.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-05-28T10:47:03.000Z"}],["meta",{"property":"article:author","content":"Ryan SU"}],["meta",{"property":"article:modified_time","content":"2024-05-28T10:47:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"API 和 RPC\\",\\"image\\":[\\"https://doc.ryansu.tech/assets/example_zh_title.png\\",\\"https://doc.ryansu.tech/assets/example_en_title.png\\"],\\"dateModified\\":\\"2024-05-28T10:47:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ryan SU\\",\\"url\\":\\"https://github.com/suyuan32\\"}]}"]],"description":"快速开发 demo 注意 除非想为 core 服务贡献代码，否则不建议将自己的代码写进 core 。请模仿 example-api 和 simple-admin-file 创建自己的服务 查看 API 微服务 快速创建 API 安装 goctls RPC 服务例子,以 department 为例 首先在 rpc/ent/schema 文件夹内添加 de..."},"headers":[{"level":2,"title":"快速开发 demo","slug":"快速开发-demo","link":"#快速开发-demo","children":[]},{"level":2,"title":"安装 goctls","slug":"安装-goctls","link":"#安装-goctls","children":[]},{"level":2,"title":"RPC 服务例子,以 department 为例","slug":"rpc-服务例子-以-department-为例","link":"#rpc-服务例子-以-department-为例","children":[]},{"level":2,"title":"生成 department RPC 代码","slug":"生成-department-rpc-代码","link":"#生成-department-rpc-代码","children":[{"level":3,"title":"由于 core 的 ent 文件目录在 rpc 中，所以 logic 文件内的 import 路径需要修改下","slug":"由于-core-的-ent-文件目录在-rpc-中-所以-logic-文件内的-import-路径需要修改下","link":"#由于-core-的-ent-文件目录在-rpc-中-所以-logic-文件内的-import-路径需要修改下","children":[]}]},{"level":2,"title":"API 例子","slug":"api-例子","link":"#api-例子","children":[{"level":3,"title":"启动 rpc 和 api","slug":"启动-rpc-和-api","link":"#启动-rpc-和-api","children":[]},{"level":3,"title":"网页端开发","slug":"网页端开发","link":"#网页端开发","children":[]}]}],"git":{"createdTime":1671464359000,"updatedTime":1716893223000,"contributors":[{"name":"Ryan SU","email":"1137661202@qq.com","commits":6},{"name":"Ryan SU","email":"yuansu.china.work@gmail.com","commits":2},{"name":"Ryan Su","email":"yuansu.china.work@gmail.com","commits":2}]},"readingTime":{"minutes":1.55,"words":466},"filePathRelative":"zh/guide/quick-start/core/quick_develop_example.md","localizedDate":"2022年12月19日","autoDesc":true,"excerpt":"<h2>快速开发 demo</h2>\\n<div class=\\"hint-container warning\\">\\n<p class=\\"hint-container-title\\">注意</p>\\n<p>除非想为 core 服务贡献代码，否则不建议将自己的代码写进 core 。请模仿 <a href=\\"https://github.com/suyuan32/simple-admin-example-api\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">example-api</a> 和 <a href=\\"https://github.com/suyuan32/simple-admin-file\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">simple-admin-file</a> 创建自己的服务\\n查看 <a href=\\"/guide/quick-start/codegen/api_example\\">API 微服务</a> 快速创建 API</p>\\n</div>"}');export{q as comp,f as data};
