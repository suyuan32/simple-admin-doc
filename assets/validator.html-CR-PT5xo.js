import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as s,o as d,c as i,a as t,f as n,b as r,e as o}from"./app-DqXjkZhl.js";const l={},c=t("h2",{id:"validator-tutorial",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#validator-tutorial"},[t("span",null,"Validator Tutorial")])],-1),p={href:"https://github.com/go-playground/validator",target:"_blank",rel:"noopener noreferrer"},u=o(`<blockquote><p>You can just edit api file and add validate tag for the struct.</p></blockquote><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code> // login request | 登录参数
    // swagger:model LoginReq
    LoginReq {
        // User Name | 用户名
        Username   string \`json:&quot;username&quot; validate:&quot;alphanum,max=20&quot;\`

        // Password | 密码
        Password   string \`json:&quot;password&quot; validate:&quot;max=30,min=6&quot;\`

        // Captcha ID which store in redis | 验证码编号, 存在redis中
        CaptchaID  string \`json:&quot;captchaId&quot;  validate:&quot;len=20&quot;\`

        // The Captcha which users input | 用户输入的验证码
        Captcha    string \`json:&quot;captcha&quot; validate:&quot;len=5&quot;\`
    }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Extend interface</p></blockquote><p>The following three interfaces are provided for extending the validator, which only need to be called in the main function</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token comment">// Register additional languages</span>
httpx<span class="token punctuation">.</span><span class="token function">RegisterValidationTranslation</span><span class="token punctuation">(</span>tag <span class="token builtin">string</span><span class="token punctuation">,</span> trans ut<span class="token punctuation">.</span>Translator<span class="token punctuation">,</span> registerFn validator<span class="token punctuation">.</span>RegisterTranslationsFunc<span class="token punctuation">,</span>
translationFn validator<span class="token punctuation">.</span> TranslationFunc<span class="token punctuation">)</span>

<span class="token comment">// register custom method</span>
httpx<span class="token punctuation">.</span><span class="token function">RegisterValidation</span><span class="token punctuation">(</span>tag <span class="token builtin">string</span><span class="token punctuation">,</span> fn validator<span class="token punctuation">.</span>Func<span class="token punctuation">)</span>

<span class="token comment">// Set a custom error code</span>
httpx<span class="token punctuation">.</span><span class="token function">SetValidatorErrorCode</span><span class="token punctuation">(</span>code <span class="token builtin">int</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Example</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;flag&quot;</span>
	<span class="token string">&quot;fmt&quot;</span>

	<span class="token string">&quot;github.com/zeromicro/go-zero/rest/httpx&quot;</span>

	<span class="token string">&quot;github.com/suyuan32/simple-admin-core/api/internal/config&quot;</span>
	<span class="token string">&quot;github.com/suyuan32/simple-admin-core/api/internal/handler&quot;</span>
	<span class="token string">&quot;github.com/suyuan32/simple-admin-core/api/internal/svc&quot;</span>

	<span class="token string">&quot;github.com/zeromicro/go-zero/core/conf&quot;</span>
	<span class="token string">&quot;github.com/zeromicro/go-zero/rest&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">var</span> configFile <span class="token operator">=</span> flag<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;f&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;etc/core.yaml&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;the config file&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	flag<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	<span class="token keyword">var</span> c config<span class="token punctuation">.</span>Config
	conf<span class="token punctuation">.</span><span class="token function">MustLoad</span><span class="token punctuation">(</span><span class="token operator">*</span>configFile<span class="token punctuation">,</span> <span class="token operator">&amp;</span>c<span class="token punctuation">,</span> conf<span class="token punctuation">.</span><span class="token function">UseEnv</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

	server <span class="token operator">:=</span> rest<span class="token punctuation">.</span><span class="token function">MustNewServer</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>RestConf<span class="token punctuation">,</span> rest<span class="token punctuation">.</span><span class="token function">WithCors</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token keyword">defer</span> server<span class="token punctuation">.</span><span class="token function">Stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	ctx <span class="token operator">:=</span> svc<span class="token punctuation">.</span><span class="token function">NewServiceContext</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>
	handler<span class="token punctuation">.</span><span class="token function">RegisterHandlers</span><span class="token punctuation">(</span>server<span class="token punctuation">,</span> ctx<span class="token punctuation">)</span>

    <span class="token comment">// Set custom error code for validator</span>
	httpx<span class="token punctuation">.</span><span class="token function">SetValidatorErrorCode</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span>

	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Starting server at %s:%d...\\n&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span>Host<span class="token punctuation">,</span> c<span class="token punctuation">.</span>Port<span class="token punctuation">)</span>
	server<span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Notice： validate tag dose not allow empty by default，if you allow empty, you should add omitempty</p></blockquote><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token comment">// Get token list request params | token列表请求参数</span>
    <span class="token comment">// swagger:model TokenListReq</span>
    TokenListReq <span class="token punctuation">{</span>
        PageInfo
        <span class="token comment">// User&#39;s UUID | 用户的UUID</span>
        <span class="token comment">// Required: true</span>
        <span class="token comment">// Max Length: 36</span>
        UUID      <span class="token builtin">string</span> <span class="token string">\`json:&quot;UUID&quot; validate:&quot;omitempty,len=36&quot;\`</span>

        <span class="token comment">// user&#39;s nickname | 用户的昵称</span>
        <span class="token comment">// Required: true</span>
        <span class="token comment">// Max length: 10</span>
        Nickname  <span class="token builtin">string</span>  <span class="token string">\`json:&quot;nickname&quot; validate:&quot;omitempty,alphanumunicode,max=10&quot;\`</span>

        <span class="token comment">// User Name | 用户名</span>
        <span class="token comment">// Required: true</span>
        <span class="token comment">// Max length: 20</span>
        Username   <span class="token builtin">string</span> <span class="token string">\`json:&quot;username&quot; validate:&quot;omitempty,alphanum,max=20&quot;\`</span>

        <span class="token comment">// The user&#39;s email address | 用户的邮箱</span>
        <span class="token comment">// Required: true</span>
        <span class="token comment">// Max length: 100</span>
        Email     <span class="token builtin">string</span> <span class="token string">\`json:&quot;email&quot; validate:&quot;omitempty,email,max=100&quot;\`</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="validation-is-automatically-generated" tabindex="-1"><a class="header-anchor" href="#validation-is-automatically-generated"><span>Validation is automatically generated</span></a></h2><div class="hint-container warning"><p class="hint-container-title">Warning</p><p>After <code>goctls</code> v0.3.1, <code>validate</code> full-end automatic generation is supported, just declare <code>validate</code> tag in the api file</p></div><p>For the <code>string</code> type, support <code>max, min, len, required</code> checks are automatically generated to <code>swagger, backend</code> For <code>int - float</code> types, support <code>lt,lte,gt,gte, required</code> checksums are automatically generated to <code>swagger, backend</code></p><h2 id="cancel-validating" tabindex="-1"><a class="header-anchor" href="#cancel-validating"><span>Cancel validating</span></a></h2><h3 id="if-you-do-not-want-to-use-validator-set-isvalidate-in-parse-to-false-in-handler" tabindex="-1"><a class="header-anchor" href="#if-you-do-not-want-to-use-validator-set-isvalidate-in-parse-to-false-in-handler"><span>If you do not want to use validator, set isValidate in Parse to false in Handler</span></a></h3><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">if</span> err <span class="token operator">:=</span> httpx<span class="token punctuation">.</span> <span class="token function">Parse</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> <span class="token operator">&amp;</span>req<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
     httpx<span class="token punctuation">.</span><span class="token function">ErrorCtx</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> w<span class="token punctuation">,</span> err<span class="token punctuation">)</span>
     <span class="token keyword">return</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="support-types" tabindex="-1"><a class="header-anchor" href="#support-types"><span>Support Types</span></a></h2><h3 id="fields" tabindex="-1"><a class="header-anchor" href="#fields"><span>Fields</span></a></h3><table><thead><tr><th>Tag</th><th>Description</th></tr></thead><tbody><tr><td>eqcsfield</td><td>Field Equals Another Field (relative)</td></tr><tr><td>eqfield</td><td>Field Equals Another Field</td></tr><tr><td>fieldcontains</td><td>NOT DOCUMENTED IN doc.go</td></tr><tr><td>fieldexcludes</td><td>NOT DOCUMENTED IN doc.go</td></tr><tr><td>gtcsfield</td><td>Field Greater Than Another Relative Field</td></tr><tr><td>gtecsfield</td><td>Field Greater Than or Equal To Another Relative Field</td></tr><tr><td>gtefield</td><td>Field Greater Than or Equal To Another Field</td></tr><tr><td>gtfield</td><td>Field Greater Than Another Field</td></tr><tr><td>ltcsfield</td><td>Less Than Another Relative Field</td></tr><tr><td>ltecsfield</td><td>Less Than or Equal To Another Relative Field</td></tr><tr><td>ltefield</td><td>Less Than or Equal To Another Field</td></tr><tr><td>ltfield</td><td>Less Than Another Field</td></tr><tr><td>necsfield</td><td>Field Does Not Equal Another Field (relative)</td></tr><tr><td>nefield</td><td>Field Does Not Equal Another Field</td></tr></tbody></table><h3 id="network" tabindex="-1"><a class="header-anchor" href="#network"><span>Network</span></a></h3><table><thead><tr><th>Tag</th><th>Description</th></tr></thead><tbody><tr><td>cidr</td><td>Classless Inter-Domain Routing CIDR</td></tr><tr><td>cidrv4</td><td>Classless Inter-Domain Routing CIDRv4</td></tr><tr><td>cidrv6</td><td>Classless Inter-Domain Routing CIDRv6</td></tr><tr><td>datauri</td><td>Data URL</td></tr><tr><td>fqdn</td><td>Full Qualified Domain Name (FQDN)</td></tr><tr><td>hostname</td><td>Hostname RFC 952</td></tr><tr><td>hostname_port</td><td>HostPort</td></tr><tr><td>hostname_rfc1123</td><td>Hostname RFC 1123</td></tr><tr><td>ip</td><td>Internet Protocol Address IP</td></tr><tr><td>ip4_addr</td><td>Internet Protocol Address IPv4</td></tr><tr><td>ip6_addr</td><td>Internet Protocol Address IPv6</td></tr><tr><td>ip_addr</td><td>Internet Protocol Address IP</td></tr><tr><td>ipv4</td><td>Internet Protocol Address IPv4</td></tr><tr><td>ipv6</td><td>Internet Protocol Address IPv6</td></tr><tr><td>mac</td><td>Media Access Control Address MAC</td></tr><tr><td>tcp4_addr</td><td>Transmission Control Protocol Address TCPv4</td></tr><tr><td>tcp6_addr</td><td>Transmission Control Protocol Address TCPv6</td></tr><tr><td>tcp_addr</td><td>Transmission Control Protocol Address TCP</td></tr><tr><td>udp4_addr</td><td>User Datagram Protocol Address UDPv4</td></tr><tr><td>udp6_addr</td><td>User Datagram Protocol Address UDPv6</td></tr><tr><td>udp_addr</td><td>User Datagram Protocol Address UDP</td></tr><tr><td>unix_addr</td><td>Unix domain socket end point Address</td></tr><tr><td>uri</td><td>URI String</td></tr><tr><td>url</td><td>URL String</td></tr><tr><td>url_encoded</td><td>URL Encoded</td></tr><tr><td>urn_rfc2141</td><td>Urn RFC 2141 String</td></tr></tbody></table><h3 id="strings" tabindex="-1"><a class="header-anchor" href="#strings"><span>Strings</span></a></h3><table><thead><tr><th>Tag</th><th>Description</th></tr></thead><tbody><tr><td>alpha</td><td>Alpha Only</td></tr><tr><td>alphanum</td><td>Alphanumeric</td></tr><tr><td>alphanumunicode</td><td>Alphanumeric Unicode</td></tr><tr><td>alphaunicode</td><td>Alpha Unicode</td></tr><tr><td>ascii</td><td>ASCII</td></tr><tr><td>boolean</td><td>Boolean</td></tr><tr><td>contains</td><td>Contains</td></tr><tr><td>containsany</td><td>Contains Any</td></tr><tr><td>containsrune</td><td>Contains Rune</td></tr><tr><td>endsnotwith</td><td>Ends Not With</td></tr><tr><td>endswith</td><td>Ends With</td></tr><tr><td>excludes</td><td>Excludes</td></tr><tr><td>excludesall</td><td>Excludes All</td></tr><tr><td>excludesrune</td><td>Excludes Rune</td></tr><tr><td>lowercase</td><td>Lowercase</td></tr><tr><td>multibyte</td><td>Multi-Byte Characters</td></tr><tr><td>number</td><td>NOT DOCUMENTED IN doc.go</td></tr><tr><td>numeric</td><td>Numeric</td></tr><tr><td>printascii</td><td>Printable ASCII</td></tr><tr><td>startsnotwith</td><td>Starts Not With</td></tr><tr><td>startswith</td><td>Starts With</td></tr><tr><td>uppercase</td><td>Uppercase</td></tr></tbody></table><h3 id="format" tabindex="-1"><a class="header-anchor" href="#format"><span>Format</span></a></h3><table><thead><tr><th>Tag</th><th>Description</th></tr></thead><tbody><tr><td>base64</td><td>Base64 String</td></tr><tr><td>base64url</td><td>Base64URL String</td></tr><tr><td>bic</td><td>Business Identifier Code (ISO 9362)</td></tr><tr><td>bcp47_language_tag</td><td>Language tag (BCP 47)</td></tr><tr><td>btc_addr</td><td>Bitcoin Address</td></tr><tr><td>btc_addr_bech32</td><td>Bitcoin Bech32 Address (segwit)</td></tr><tr><td>credit_card</td><td>Credit Card Number</td></tr><tr><td>datetime</td><td>Datetime</td></tr><tr><td>e164</td><td>e164 formatted phone number</td></tr><tr><td>email</td><td>E-mail String</td></tr><tr><td>eth_addr</td><td>Ethereum Address</td></tr><tr><td>hexadecimal</td><td>Hexadecimal String</td></tr><tr><td>hexcolor</td><td>Hexcolor String</td></tr><tr><td>hsl</td><td>HSL String</td></tr><tr><td>hsla</td><td>HSLA String</td></tr><tr><td>html</td><td>HTML Tags</td></tr><tr><td>html_encoded</td><td>HTML Encoded</td></tr><tr><td>isbn</td><td>International Standard Book Number</td></tr><tr><td>isbn10</td><td>International Standard Book Number 10</td></tr><tr><td>isbn13</td><td>International Standard Book Number 13</td></tr><tr><td>iso3166_1_alpha2</td><td>Two-letter country code (ISO 3166-1 alpha-2)</td></tr><tr><td>iso3166_1_alpha3</td><td>Three-letter country code (ISO 3166-1 alpha-3)</td></tr><tr><td>iso3166_1_alpha_numeric</td><td>Numeric country code (ISO 3166-1 numeric)</td></tr><tr><td>iso3166_2</td><td>Country subdivision code (ISO 3166-2)</td></tr><tr><td>iso4217</td><td>Currency code (ISO 4217)</td></tr><tr><td>json</td><td>JSON</td></tr><tr><td>jwt</td><td>JSON Web Token (JWT)</td></tr><tr><td>latitude</td><td>Latitude</td></tr><tr><td>longitude</td><td>Longitude</td></tr><tr><td>postcode_iso3166_alpha2</td><td>Postcode</td></tr><tr><td>postcode_iso3166_alpha2_field</td><td>Postcode</td></tr><tr><td>rgb</td><td>RGB String</td></tr><tr><td>rgba</td><td>RGBA String</td></tr><tr><td>ssn</td><td>Social Security Number SSN</td></tr><tr><td>timezone</td><td>Timezone</td></tr><tr><td>uuid</td><td>Universally Unique Identifier UUID</td></tr><tr><td>uuid3</td><td>Universally Unique Identifier UUID v3</td></tr><tr><td>uuid3_rfc4122</td><td>Universally Unique Identifier UUID v3 RFC4122</td></tr><tr><td>uuid4</td><td>Universally Unique Identifier UUID v4</td></tr><tr><td>uuid4_rfc4122</td><td>Universally Unique Identifier UUID v4 RFC4122</td></tr><tr><td>uuid5</td><td>Universally Unique Identifier UUID v5</td></tr><tr><td>uuid5_rfc4122</td><td>Universally Unique Identifier UUID v5 RFC4122</td></tr><tr><td>uuid_rfc4122</td><td>Universally Unique Identifier UUID RFC4122</td></tr><tr><td>md4</td><td>MD4 hash</td></tr><tr><td>md5</td><td>MD5 hash</td></tr><tr><td>sha256</td><td>SHA256 hash</td></tr><tr><td>sha384</td><td>SHA384 hash</td></tr><tr><td>sha512</td><td>SHA512 hash</td></tr><tr><td>ripemd128</td><td>RIPEMD-128 hash</td></tr><tr><td>ripemd128</td><td>RIPEMD-160 hash</td></tr><tr><td>tiger128</td><td>TIGER128 hash</td></tr><tr><td>tiger160</td><td>TIGER160 hash</td></tr><tr><td>tiger192</td><td>TIGER192 hash</td></tr><tr><td>semver</td><td>Semantic Versioning 2.0.0</td></tr><tr><td>ulid</td><td>Universally Unique Lexicographically Sortable Identifier ULID</td></tr></tbody></table><h3 id="comparisons" tabindex="-1"><a class="header-anchor" href="#comparisons"><span>Comparisons</span></a></h3><table><thead><tr><th>Tag</th><th>Description</th></tr></thead><tbody><tr><td>eq</td><td>Equals</td></tr><tr><td>gt</td><td>Greater than</td></tr><tr><td>gte</td><td>Greater than or equal</td></tr><tr><td>lt</td><td>Less Than</td></tr><tr><td>lte</td><td>Less Than or Equal</td></tr><tr><td>ne</td><td>Not Equal</td></tr></tbody></table><h3 id="other" tabindex="-1"><a class="header-anchor" href="#other"><span>Other</span></a></h3><table><thead><tr><th>Tag</th><th>Description</th></tr></thead><tbody><tr><td>dir</td><td>Directory</td></tr><tr><td>file</td><td>File path</td></tr><tr><td>isdefault</td><td>Is Default</td></tr><tr><td>len</td><td>Length</td></tr><tr><td>max</td><td>Maximum</td></tr><tr><td>min</td><td>Minimum</td></tr><tr><td>oneof</td><td>One Of</td></tr><tr><td>required</td><td>Required</td></tr><tr><td>required_if</td><td>Required If</td></tr><tr><td>required_unless</td><td>Required Unless</td></tr><tr><td>required_with</td><td>Required With</td></tr><tr><td>required_with_all</td><td>Required With All</td></tr><tr><td>required_without</td><td>Required Without</td></tr><tr><td>required_without_all</td><td>Required Without All</td></tr><tr><td>excluded_if</td><td>Excluded If</td></tr><tr><td>excluded_unless</td><td>Excluded Unless</td></tr><tr><td>excluded_with</td><td>Excluded With</td></tr><tr><td>excluded_with_all</td><td>Excluded With All</td></tr><tr><td>excluded_without</td><td>Excluded Without</td></tr><tr><td>excluded_without_all</td><td>Excluded Without All</td></tr><tr><td>unique</td><td>Unique</td></tr></tbody></table><h4 id="aliases" tabindex="-1"><a class="header-anchor" href="#aliases"><span>Aliases</span></a></h4><table><thead><tr><th>Tag</th><th>Description</th></tr></thead><tbody><tr><td>iscolor</td><td>hexcolor|rgb|rgba|hsl|hsla</td></tr><tr><td>country_code</td><td>iso3166_1_alpha2|iso3166_1_alpha3|iso3166_1_alpha_numeric</td></tr></tbody></table>`,30);function m(h,v){const a=s("ExternalLinkIcon");return d(),i("div",null,[c,t("p",null,[n("Simple Admin Tools integration "),t("a",p,[n("validator"),r(a)]),n(" library")]),u])}const b=e(l,[["render",m],["__file","validator.html.vue"]]),f=JSON.parse('{"path":"/guide/feature/validator.html","title":"Validator","lang":"en-US","frontmatter":{"order":3,"title":"Validator","description":"Validator Tutorial Simple Admin Tools integration validator library You can just edit api file and add validate tag for the struct. Extend interface The following three interfac...","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://doc.ryansu.tech/zh/guide/feature/validator.html"}],["meta",{"property":"og:url","content":"https://doc.ryansu.tech/guide/feature/validator.html"}],["meta",{"property":"og:site_name","content":"Simple Admin"}],["meta",{"property":"og:title","content":"Validator"}],["meta",{"property":"og:description","content":"Validator Tutorial Simple Admin Tools integration validator library You can just edit api file and add validate tag for the struct. Extend interface The following three interfac..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-22T15:12:07.000Z"}],["meta",{"property":"article:author","content":"Ryan SU"}],["meta",{"property":"article:modified_time","content":"2023-04-22T15:12:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Validator\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-22T15:12:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ryan SU\\",\\"url\\":\\"https://github.com/suyuan32\\"}]}"]]},"headers":[{"level":2,"title":"Validator Tutorial","slug":"validator-tutorial","link":"#validator-tutorial","children":[]},{"level":2,"title":"Validation is automatically generated","slug":"validation-is-automatically-generated","link":"#validation-is-automatically-generated","children":[]},{"level":2,"title":"Cancel validating","slug":"cancel-validating","link":"#cancel-validating","children":[{"level":3,"title":"If you do not want to use validator, set isValidate in Parse to false in Handler","slug":"if-you-do-not-want-to-use-validator-set-isvalidate-in-parse-to-false-in-handler","link":"#if-you-do-not-want-to-use-validator-set-isvalidate-in-parse-to-false-in-handler","children":[]}]},{"level":2,"title":"Support Types","slug":"support-types","link":"#support-types","children":[{"level":3,"title":"Fields","slug":"fields","link":"#fields","children":[]},{"level":3,"title":"Network","slug":"network","link":"#network","children":[]},{"level":3,"title":"Strings","slug":"strings","link":"#strings","children":[]},{"level":3,"title":"Format","slug":"format","link":"#format","children":[]},{"level":3,"title":"Comparisons","slug":"comparisons","link":"#comparisons","children":[]},{"level":3,"title":"Other","slug":"other","link":"#other","children":[]}]}],"git":{"createdTime":1671464359000,"updatedTime":1682176327000,"contributors":[{"name":"Ryan SU","email":"1137661202@qq.com","commits":4},{"name":"Ryan SU","email":"yuansu.china.work@gmail.com","commits":2}]},"readingTime":{"minutes":3.68,"words":1104},"filePathRelative":"guide/feature/validator.md","localizedDate":"December 19, 2022","autoDesc":true,"excerpt":"<h2>Validator Tutorial</h2>\\n<p>Simple Admin Tools integration <a href=\\"https://github.com/go-playground/validator\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">validator</a> library</p>\\n<blockquote>\\n<p>You can just edit api file and add validate tag for the struct.</p>\\n</blockquote>\\n<div class=\\"language-text\\" data-ext=\\"text\\" data-title=\\"text\\"><pre class=\\"language-text\\"><code> // login request | 登录参数\\n    // swagger:model LoginReq\\n    LoginReq {\\n        // User Name | 用户名\\n        Username   string `json:\\"username\\" validate:\\"alphanum,max=20\\"`\\n\\n        // Password | 密码\\n        Password   string `json:\\"password\\" validate:\\"max=30,min=6\\"`\\n\\n        // Captcha ID which store in redis | 验证码编号, 存在redis中\\n        CaptchaID  string `json:\\"captchaId\\"  validate:\\"len=20\\"`\\n\\n        // The Captcha which users input | 用户输入的验证码\\n        Captcha    string `json:\\"captcha\\" validate:\\"len=5\\"`\\n    }\\n</code></pre></div>"}');export{b as comp,f as data};
