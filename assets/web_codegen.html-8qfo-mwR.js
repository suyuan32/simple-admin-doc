import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,o as i,c as o,a as e,f as n,b as a,e as d}from"./app-DqXjkZhl.js";const r={},c=e("div",{class:"hint-container warning"},[e("p",{class:"hint-container-title"},"注意"),e("blockquote",null,[e("p",null,"首先确认你安装了以下软件:")]),e("ul",null,[e("li",null,"simple-admin-tool (goctls) v1.5.2 +")])],-1),p={class:"hint-container info"},m=e("p",{class:"hint-container-title"},"相关信息",-1),u={href:"https://www.bilibili.com/video/BV1DL411a7wo",target:"_blank",rel:"noopener noreferrer"},v=d(`<h2 id="创建-example-代码" tabindex="-1"><a class="header-anchor" href="#创建-example-代码"><span>创建 example 代码</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>goctls frontend vben <span class="token parameter variable">--api_file</span><span class="token operator">=</span>/home/ryan/GolandProjects/simple-admin-example-api/desc/student.api <span class="token parameter variable">--output</span><span class="token operator">=</span>./ <span class="token parameter variable">--folder_name</span><span class="token operator">=</span>example <span class="token parameter variable">--prefix</span><span class="token operator">=</span>example-api <span class="token parameter variable">--sub_folder</span><span class="token operator">=</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="frontend-vben参数介绍" tabindex="-1"><a class="header-anchor" href="#frontend-vben参数介绍"><span><code>frontend vben</code>参数介绍</span></a></h3><table><thead><tr><th>参数</th><th>必须</th><th>默认值</th><th>介绍</th><th>使用方法</th></tr></thead><tbody><tr><td>api_file</td><td>是</td><td></td><td>api 文件的绝对路径</td><td>填入 api 文件的绝对路径，如上面的 student.api</td></tr><tr><td>output</td><td>是</td><td></td><td>输出路径</td><td>输入 simple admin backend ui 目录</td></tr><tr><td>folder_name</td><td>是</td><td></td><td>文件夹名称</td><td>core 服务是 sys, 示例项目是 example</td></tr><tr><td>prefix</td><td>是</td><td></td><td>请求前缀</td><td>请求前缀用于请求转发，如 sys-api, 示例项目为 example-api, 需要修改 env.development,添加 proxy</td></tr><tr><td>sub_folder</td><td>否</td><td></td><td>子目录</td><td>用于在 views 下创建子目录，如 sys 有 user,token 等子目录</td></tr><tr><td>form_type</td><td>是</td><td>drawer</td><td>表格容器</td><td>支持 drawer 抽屉容器， modal 弹窗容器</td></tr><tr><td>overwrite</td><td>否</td><td>false</td><td>是否覆盖生成文件</td><td>true 则会覆盖所有生成的文件</td></tr></tbody></table><blockquote><p>运行 <code>goctls frontend vben --help</code> 查看详细命令</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ goctls frontend vben <span class="token parameter variable">-h</span>
生成与前端相关的文件

Usage:
  goctls frontend vben <span class="token punctuation">[</span>flags<span class="token punctuation">]</span>

Flags:
  -a, <span class="token parameter variable">--api_file</span> string      API 文件的绝对路径
  -f, <span class="token parameter variable">--folder_name</span> string   在不同目录中生成文件的文件夹名称。例如，存储文件管理器服务文件的简单管理后台 UI 中的文件夹名称 <span class="token punctuation">(</span>default <span class="token string">&quot;sys&quot;</span><span class="token punctuation">)</span>
  -t, <span class="token parameter variable">--form_type</span> string     表单容器类型, 默认为 drawer, 可选值为 drawer, modal <span class="token punctuation">(</span>default <span class="token string">&quot;drawer&quot;</span><span class="token punctuation">)</span>
  -h, <span class="token parameter variable">--help</span>                 <span class="token builtin class-name">help</span> <span class="token keyword">for</span> vben
  -m, <span class="token parameter variable">--model_name</span> string    模型名称。例如，Example
  -o, <span class="token parameter variable">--output</span> string        输出目录，应该是Simple Admin Backend UI 的根目录 <span class="token punctuation">(</span>default <span class="token string">&quot;./&quot;</span><span class="token punctuation">)</span>
  -w, <span class="token parameter variable">--overwrite</span>            是否覆盖文件，它将覆盖所有生成的文件
  -p, <span class="token parameter variable">--prefix</span> string        代理请求的前缀。例如，sys-api <span class="token punctuation">(</span>default <span class="token string">&quot;sys-api&quot;</span><span class="token punctuation">)</span>
  -s, <span class="token parameter variable">--sub_folder</span> string    子目录名称。例如，src/views/sys 子目录用户，路径为 src/views/sys/user
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>执行命令后会生成下面的代码</p></blockquote><ul><li><code>src/api/example/student.ts src/api/example/model/student.ts</code> API 声明和请求代码</li><li><code>src/locales/lang/en/example.ts src/locales/lang/en/example.ts</code> 国际化代码</li><li><code>src/views/example/*</code> 视图代码</li></ul><h3 id="生成代码后还需要做的事" tabindex="-1"><a class="header-anchor" href="#生成代码后还需要做的事"><span>生成代码后还需要做的事</span></a></h3><ul><li>修改 env.development 和 deploy/default.conf 添加新的服务地址</li><li>修改国际化代码，优化中文翻译</li><li>修改 views 中的 *.data.ts 完善中文翻译，行列以及提交表格中的字段名需要自行翻译添加到国际化代码中使用 <code>locales/lang/example.ts</code></li><li>添加 api 到数据库以及数据库初始化代码</li><li>添加菜单到数据库以及初始化代码</li></ul><h3 id="常见问题" tabindex="-1"><a class="header-anchor" href="#常见问题"><span>常见问题</span></a></h3><ul><li>出现 “failed to get the fields of the model, please check the api file and your model name” 错误，这个是因为api文件里面没提供生成模型所需要的数据类型配置</li></ul><p>比如说你想要生成个User的模型数据</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>// 你的api文件里面提供的可能是这样
type User {
  Name string \`json:&quot;name&quot;\`
  Age int \`json:&quot;age&quot;\`
  Email string \`json:&quot;email&quot;\`
}

// 但是生成前端数据模型需要的是这样
type UserInfo {
  Name string \`json:&quot;name&quot;\`
  Age int \`json:&quot;age&quot;\`
  Email string \`json:&quot;email&quot;\`
}
// 你需要在生成的数据模型名称后面加个“Info”，goctls 才能识别
// 这是模型名称的格式“&lt;ModelName&gt;Info”
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>出现 “open <code>&lt;文件路径&gt;.ts</code>: The system cannot find the path specified.” 错误，出现这个问题是因为你在 “simple-admin-backend-ui” 这个后台前端项目目录以外的目录执行了生成指令，goctls backend 没办法解析项目结构，你必须在“simple-admin-backend-ui”项目目录下执行生成指令才能通过</li></ul>`,15),b={href:"https://github.com/suyuan32/simple-admin-backend-ui/tree/example-code-gen",target:"_blank",rel:"noopener noreferrer"};function h(g,f){const t=l("ExternalLinkIcon");return i(),o("div",null,[c,e("div",p,[m,e("p",null,[e("a",u,[n("视频教程"),a(t)])])]),v,e("blockquote",null,[e("p",null,[n("示例地址 "),e("a",b,[n("https://github.com/suyuan32/simple-admin-backend-ui/tree/example-code-gen"),a(t)])])])])}const x=s(r,[["render",h],["__file","web_codegen.html.vue"]]),y=JSON.parse('{"path":"/zh/guide/quick-start/codegen/web_codegen.html","title":"Web 端","lang":"zh-CN","frontmatter":{"order":3,"title":"Web 端","description":"注意 首先确认你安装了以下软件: simple-admin-tool (goctls) v1.5.2 + 相关信息 视频教程 创建 example 代码 frontend vben参数介绍 运行 goctls frontend vben --help 查看详细命令 执行命令后会生成下面的代码 src/api/example/student.ts src...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://doc.ryansu.tech/guide/quick-start/codegen/web_codegen.html"}],["meta",{"property":"og:url","content":"https://doc.ryansu.tech/zh/guide/quick-start/codegen/web_codegen.html"}],["meta",{"property":"og:site_name","content":"Simple Admin"}],["meta",{"property":"og:title","content":"Web 端"}],["meta",{"property":"og:description","content":"注意 首先确认你安装了以下软件: simple-admin-tool (goctls) v1.5.2 + 相关信息 视频教程 创建 example 代码 frontend vben参数介绍 运行 goctls frontend vben --help 查看详细命令 执行命令后会生成下面的代码 src/api/example/student.ts src..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-03-16T03:36:13.000Z"}],["meta",{"property":"article:author","content":"Ryan SU"}],["meta",{"property":"article:modified_time","content":"2024-03-16T03:36:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Web 端\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-16T03:36:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ryan SU\\",\\"url\\":\\"https://github.com/suyuan32\\"}]}"]]},"headers":[{"level":2,"title":"创建 example 代码","slug":"创建-example-代码","link":"#创建-example-代码","children":[{"level":3,"title":"frontend vben参数介绍","slug":"frontend-vben参数介绍","link":"#frontend-vben参数介绍","children":[]},{"level":3,"title":"生成代码后还需要做的事","slug":"生成代码后还需要做的事","link":"#生成代码后还需要做的事","children":[]},{"level":3,"title":"常见问题","slug":"常见问题","link":"#常见问题","children":[]}]}],"git":{"createdTime":1671464359000,"updatedTime":1710560173000,"contributors":[{"name":"Ryan SU","email":"1137661202@qq.com","commits":8},{"name":"Ryan SU","email":"yuansu.china.work@gmail.com","commits":6},{"name":"Ryan Su","email":"yuansu.china.work@gmail.com","commits":2},{"name":"Larmian","email":"65385917+Larmian@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":2.81,"words":843},"filePathRelative":"zh/guide/quick-start/codegen/web_codegen.md","localizedDate":"2022年12月19日","autoDesc":true,"excerpt":"<div class=\\"hint-container warning\\">\\n<p class=\\"hint-container-title\\">注意</p>\\n<blockquote>\\n<p>首先确认你安装了以下软件:</p>\\n</blockquote>\\n<ul>\\n<li>simple-admin-tool (goctls) v1.5.2 +</li>\\n</ul>\\n</div>\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">相关信息</p>\\n<p><a href=\\"https://www.bilibili.com/video/BV1DL411a7wo\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">视频教程</a></p>\\n</div>"}');export{x as comp,y as data};
